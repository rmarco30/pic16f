

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Oct 22 13:56:29 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.30
    33                           ; Generated 26/08/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F877A Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0094                     	;# 
   175  0098                     	;# 
   176  0099                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009E                     	;# 
   180  009F                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0008                     	;# 
   196  0009                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  000D                     	;# 
   201  000E                     	;# 
   202  000E                     	;# 
   203  000F                     	;# 
   204  0010                     	;# 
   205  0011                     	;# 
   206  0012                     	;# 
   207  0013                     	;# 
   208  0014                     	;# 
   209  0015                     	;# 
   210  0015                     	;# 
   211  0016                     	;# 
   212  0017                     	;# 
   213  0018                     	;# 
   214  0019                     	;# 
   215  001A                     	;# 
   216  001B                     	;# 
   217  001B                     	;# 
   218  001C                     	;# 
   219  001D                     	;# 
   220  001E                     	;# 
   221  001F                     	;# 
   222  0081                     	;# 
   223  0085                     	;# 
   224  0086                     	;# 
   225  0087                     	;# 
   226  0088                     	;# 
   227  0089                     	;# 
   228  008C                     	;# 
   229  008D                     	;# 
   230  008E                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0094                     	;# 
   235  0098                     	;# 
   236  0099                     	;# 
   237  009C                     	;# 
   238  009D                     	;# 
   239  009E                     	;# 
   240  009F                     	;# 
   241  010C                     	;# 
   242  010D                     	;# 
   243  010E                     	;# 
   244  010F                     	;# 
   245  018C                     	;# 
   246  018D                     	;# 
   247                           
   248                           	psect	strings
   249  0400                     __pstrings:
   250  0400                     stringtab:
   251  0400                     __stringtab:
   252                           
   253                           ;	String table - string pointers are 1 byte each
   254  0400  1BFF               	btfsc	btemp+1,7
   255  0401  2C0A               	ljmp	stringcode
   256  0402  1383               	bcf	3,7
   257  0403  187F               	btfsc	btemp+1,0
   258  0404  1783               	bsf	3,7
   259  0405  0800               	movf	0,w
   260  0406  0A84               	incf	4,f
   261  0407  1903               	skipnz
   262  0408  0AFF               	incf	btemp+1,f
   263  0409  0008               	return
   264  040A                     stringcode:
   265  040A                     stringdir:
   266  040A  3004               	movlw	high stringdir
   267  040B  008A               	movwf	10
   268  040C  0804               	movf	4,w
   269  040D  0A84               	incf	4,f
   270  040E  0782               	addwf	2,f
   271  040F                     __stringbase:
   272  040F  3400               	retlw	0
   273  0410                     __end_of__stringtab:
   274  0410                     _dpowers:
   275  0410  3401               	retlw	1
   276  0411  3400               	retlw	0
   277  0412  340A               	retlw	10
   278  0413  3400               	retlw	0
   279  0414  3464               	retlw	100
   280  0415  3400               	retlw	0
   281  0416  34E8               	retlw	232
   282  0417  3403               	retlw	3
   283  0418  3410               	retlw	16
   284  0419  3427               	retlw	39
   285  041A                     __end_of_dpowers:
   286  000E                     _TMR1	set	14
   287  000B                     _INTCONbits	set	11
   288  000C                     _PIR1bits	set	12
   289  0010                     _T1CONbits	set	16
   290  0007                     _PORTCbits	set	7
   291  0008                     _PORTD	set	8
   292  0032                     _RB2	set	50
   293  0037                     _RB7	set	55
   294  0036                     _RB6	set	54
   295  0035                     _RB5	set	53
   296  0034                     _RB4	set	52
   297  0033                     _RB3	set	51
   298  0039                     _RC1	set	57
   299  0038                     _RC0	set	56
   300  0086                     _TRISB	set	134
   301  008C                     _PIE1bits	set	140
   302  0088                     _TRISD	set	136
   303  0439                     _TRISC1	set	1081
   304  0438                     _TRISC0	set	1080
   305  041A                     STR_2:
   306  041A  3475               	retlw	117	;'u'
   307  041B  3473               	retlw	115	;'s'
   308  041C  346D               	retlw	109	;'m'
   309  041D  3420               	retlw	32	;' '
   310  041E  3473               	retlw	115	;'s'
   311  041F  3469               	retlw	105	;'i'
   312  0420  346D               	retlw	109	;'m'
   313  0421  3475               	retlw	117	;'u'
   314  0422  346C               	retlw	108	;'l'
   315  0423  3461               	retlw	97	;'a'
   316  0424  3474               	retlw	116	;'t'
   317  0425  3469               	retlw	105	;'i'
   318  0426  346F               	retlw	111	;'o'
   319  0427  346E               	retlw	110	;'n'
   320  0428  3400               	retlw	0
   321  0429                     STR_4:
   322  0429  3464               	retlw	100	;'d'
   323  042A  3469               	retlw	105	;'i'
   324  042B  3473               	retlw	115	;'s'
   325  042C  3474               	retlw	116	;'t'
   326  042D  3461               	retlw	97	;'a'
   327  042E  346E               	retlw	110	;'n'
   328  042F  3463               	retlw	99	;'c'
   329  0430  3465               	retlw	101	;'e'
   330  0431  343A               	retlw	58	;':'
   331  0432  3420               	retlw	32	;' '
   332  0433  3400               	retlw	0
   333  0434                     STR_7:
   334  0434  3464               	retlw	100	;'d'
   335  0435  3475               	retlw	117	;'u'
   336  0436  3472               	retlw	114	;'r'
   337  0437  3461               	retlw	97	;'a'
   338  0438  3474               	retlw	116	;'t'
   339  0439  3469               	retlw	105	;'i'
   340  043A  346F               	retlw	111	;'o'
   341  043B  346E               	retlw	110	;'n'
   342  043C  343A               	retlw	58	;':'
   343  043D  3420               	retlw	32	;' '
   344  043E  3400               	retlw	0
   345  043F                     STR_1:
   346  043F  3444               	retlw	68	;'D'
   347  0440  3441               	retlw	65	;'A'
   348  0441  3453               	retlw	83	;'S'
   349  0442  3400               	retlw	0
   350  0443                     STR_8:
   351  0443  346D               	retlw	109	;'m'
   352  0444  3453               	retlw	83	;'S'
   353  0445  3400               	retlw	0
   354  0446                     STR_3:
   355  0446  3425               	retlw	37	;'%'
   356  0447  3464               	retlw	100	;'d'
   357  0448  3400               	retlw	0
   358  0449                     STR_5:
   359  0449  3463               	retlw	99	;'c'
   360  044A  346D               	retlw	109	;'m'
   361  044B  3400               	retlw	0
   362  0446                     
   363                           	psect	cinit
   364  000F                     start_initialization:	
   365                           ; #config settings
   366                           
   367  000F                     __initialization:
   368                           
   369                           ; Clear objects allocated to COMMON
   370  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   371  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   372  0011                     end_of_initialization:	
   373                           ;End of C runtime variable initialization code
   374                           
   375  0011                     __end_of__initialization:
   376  0011  0183               	clrf	3
   377  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   378                           
   379                           	psect	bssCOMMON
   380  007A                     __pbssCOMMON:
   381  007A                     _overflow:
   382  007A                     	ds	2
   383                           
   384                           	psect	cstackBANK1
   385  00A0                     __pcstackBANK1:
   386  00A0                     main@chr_distance:
   387                           
   388                           ; 20 bytes @ 0x0
   389  00A0                     	ds	20
   390  00B4                     main@chr_duration:
   391                           
   392                           ; 20 bytes @ 0x14
   393  00B4                     	ds	20
   394  00C8                     main@distance:
   395                           
   396                           ; 2 bytes @ 0x28
   397  00C8                     	ds	2
   398  00CA                     main@duration:
   399                           
   400                           ; 2 bytes @ 0x2A
   401  00CA                     	ds	2
   402                           
   403                           	psect	cstackCOMMON
   404  0070                     __pcstackCOMMON:
   405  0070                     ?_timer1_init:
   406  0070                     ?_lcd_init:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_lcd_clear:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_main:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_ISR:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ??_ISR:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_lcd_clock:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_lcd_data:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_lcd_cmd:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_lcd_write:	
   431                           ; 1 bytes @ 0x0
   432                           
   433                           
   434                           ; 1 bytes @ 0x0
   435  0070                     	ds	2
   436  0072                     ??_timer1_init:
   437  0072                     ??_lcd_clock:	
   438                           ; 1 bytes @ 0x2
   439                           
   440  0072                     ??_lcd_data:	
   441                           ; 1 bytes @ 0x2
   442                           
   443  0072                     ?___wmul:	
   444                           ; 1 bytes @ 0x2
   445                           
   446  0072                     ?___lwdiv:	
   447                           ; 2 bytes @ 0x2
   448                           
   449  0072                     ?___lmul:	
   450                           ; 2 bytes @ 0x2
   451                           
   452  0072                     lcd_data@data:	
   453                           ; 4 bytes @ 0x2
   454                           
   455  0072                     ___wmul@multiplier:	
   456                           ; 1 bytes @ 0x2
   457                           
   458  0072                     ___lwdiv@divisor:	
   459                           ; 2 bytes @ 0x2
   460                           
   461  0072                     ___lmul@multiplier:	
   462                           ; 2 bytes @ 0x2
   463                           
   464                           
   465                           ; 4 bytes @ 0x2
   466  0072                     	ds	2
   467  0074                     ??_lcd_cmd:
   468  0074                     ??_lcd_write:	
   469                           ; 1 bytes @ 0x4
   470                           
   471  0074                     lcd_cmd@cmd:	
   472                           ; 1 bytes @ 0x4
   473                           
   474  0074                     ___wmul@multiplicand:	
   475                           ; 1 bytes @ 0x4
   476                           
   477  0074                     ___lwdiv@dividend:	
   478                           ; 2 bytes @ 0x4
   479                           
   480                           
   481                           ; 2 bytes @ 0x4
   482  0074                     	ds	1
   483  0075                     ??_lcd_init:
   484  0075                     ?_lcd_goto_xy:	
   485                           ; 1 bytes @ 0x5
   486                           
   487  0075                     ??_lcd_clear:	
   488                           ; 1 bytes @ 0x5
   489                           
   490  0075                     lcd_goto_xy@c:	
   491                           ; 1 bytes @ 0x5
   492                           
   493  0075                     lcd_write@low_nibble:	
   494                           ; 1 bytes @ 0x5
   495                           
   496                           
   497                           ; 1 bytes @ 0x5
   498  0075                     	ds	1
   499  0076                     ??_lcd_goto_xy:
   500  0076                     ??___wmul:	
   501                           ; 1 bytes @ 0x6
   502                           
   503  0076                     ??___lwdiv:	
   504                           ; 1 bytes @ 0x6
   505                           
   506  0076                     lcd_write@high_nibble:	
   507                           ; 1 bytes @ 0x6
   508                           
   509  0076                     ___wmul@product:	
   510                           ; 1 bytes @ 0x6
   511                           
   512  0076                     ___lmul@multiplicand:	
   513                           ; 2 bytes @ 0x6
   514                           
   515                           
   516                           ; 4 bytes @ 0x6
   517  0076                     	ds	1
   518  0077                     lcd_write@byte:
   519  0077                     ___lwdiv@counter:	
   520                           ; 1 bytes @ 0x7
   521                           
   522                           
   523                           ; 1 bytes @ 0x7
   524  0077                     	ds	1
   525  0078                     ?_lcd_write_string:
   526  0078                     lcd_write_string@str:	
   527                           ; 1 bytes @ 0x8
   528                           
   529  0078                     ___lwdiv@quotient:	
   530                           ; 2 bytes @ 0x8
   531                           
   532                           
   533                           ; 2 bytes @ 0x8
   534  0078                     	ds	2
   535                           
   536                           	psect	cstackBANK0
   537  0020                     __pcstackBANK0:
   538  0020                     ??_lcd_write_string:
   539  0020                     ??___lmul:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0020                     ?___lwmod:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0020                     lcd_goto_xy@r:	
   546                           ; 2 bytes @ 0x0
   547                           
   548  0020                     ___lwmod@divisor:	
   549                           ; 1 bytes @ 0x0
   550                           
   551                           
   552                           ; 2 bytes @ 0x0
   553  0020                     	ds	1
   554  0021                     lcd_goto_xy@low4:
   555  0021                     ___lmul@product:	
   556                           ; 1 bytes @ 0x1
   557                           
   558                           
   559                           ; 4 bytes @ 0x1
   560  0021                     	ds	1
   561  0022                     lcd_goto_xy@high4:
   562  0022                     ___lwmod@dividend:	
   563                           ; 1 bytes @ 0x2
   564                           
   565                           
   566                           ; 2 bytes @ 0x2
   567  0022                     	ds	1
   568  0023                     lcd_goto_xy@temp:
   569  0023                     lcd_write_string@i:	
   570                           ; 1 bytes @ 0x3
   571                           
   572                           
   573                           ; 2 bytes @ 0x3
   574  0023                     	ds	1
   575  0024                     ??___lwmod:
   576                           
   577                           ; 1 bytes @ 0x4
   578  0024                     	ds	1
   579  0025                     ?___aldiv:
   580  0025                     ___lwmod@counter:	
   581                           ; 4 bytes @ 0x5
   582                           
   583  0025                     ___aldiv@divisor:	
   584                           ; 1 bytes @ 0x5
   585                           
   586                           
   587                           ; 4 bytes @ 0x5
   588  0025                     	ds	1
   589  0026                     ?_sprintf:
   590  0026                     sprintf@f:	
   591                           ; 2 bytes @ 0x6
   592                           
   593                           
   594                           ; 1 bytes @ 0x6
   595  0026                     	ds	3
   596  0029                     ??_sprintf:
   597  0029                     ___aldiv@dividend:	
   598                           ; 1 bytes @ 0x9
   599                           
   600                           
   601                           ; 4 bytes @ 0x9
   602  0029                     	ds	3
   603  002C                     sprintf@ap:
   604                           
   605                           ; 1 bytes @ 0xC
   606  002C                     	ds	1
   607  002D                     ??___aldiv:
   608  002D                     sprintf@flag:	
   609                           ; 1 bytes @ 0xD
   610                           
   611                           
   612                           ; 1 bytes @ 0xD
   613  002D                     	ds	1
   614  002E                     sprintf@prec:
   615  002E                     ___aldiv@counter:	
   616                           ; 1 bytes @ 0xE
   617                           
   618                           
   619                           ; 1 bytes @ 0xE
   620  002E                     	ds	1
   621  002F                     ___aldiv@sign:
   622  002F                     sprintf@val:	
   623                           ; 1 bytes @ 0xF
   624                           
   625                           
   626                           ; 2 bytes @ 0xF
   627  002F                     	ds	1
   628  0030                     ___aldiv@quotient:
   629                           
   630                           ; 4 bytes @ 0x10
   631  0030                     	ds	1
   632  0031                     sprintf@sp:
   633                           
   634                           ; 1 bytes @ 0x11
   635  0031                     	ds	1
   636  0032                     sprintf@c:
   637                           
   638                           ; 1 bytes @ 0x12
   639  0032                     	ds	2
   640  0034                     ?_map:
   641  0034                     map@value:	
   642                           ; 4 bytes @ 0x14
   643                           
   644                           
   645                           ; 2 bytes @ 0x14
   646  0034                     	ds	2
   647  0036                     map@fromLow:
   648                           
   649                           ; 2 bytes @ 0x16
   650  0036                     	ds	2
   651  0038                     map@fromHigh:
   652                           
   653                           ; 2 bytes @ 0x18
   654  0038                     	ds	2
   655  003A                     map@toLow:
   656                           
   657                           ; 2 bytes @ 0x1A
   658  003A                     	ds	2
   659  003C                     map@toHigh:
   660                           
   661                           ; 2 bytes @ 0x1C
   662  003C                     	ds	2
   663  003E                     ??_map:
   664                           
   665                           ; 1 bytes @ 0x1E
   666  003E                     	ds	4
   667  0042                     ??_main:
   668                           
   669                           ; 1 bytes @ 0x22
   670  0042                     	ds	3
   671                           
   672                           	psect	maintext
   673  0015                     __pmaintext:	
   674 ;;
   675 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   676 ;;
   677 ;; *************** function _main *****************
   678 ;; Defined at:
   679 ;;		line 22 in file "main.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  chr_duration   20   20[BANK1 ] unsigned char [20]
   684 ;;  chr_distance   20    0[BANK1 ] unsigned char [20]
   685 ;;  duration        2   42[BANK1 ] unsigned int 
   686 ;;  distance        2   40[BANK1 ] unsigned int 
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : B00/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   696 ;;      Params:         0       0       0       0       0
   697 ;;      Locals:         0       0      44       0       0
   698 ;;      Temps:          0       3       0       0       0
   699 ;;      Totals:         0       3      44       0       0
   700 ;;Total ram usage:       47 bytes
   701 ;; Hardware stack levels required when called:    4
   702 ;; This function calls:
   703 ;;		___wmul
   704 ;;		_lcd_clear
   705 ;;		_lcd_goto_xy
   706 ;;		_lcd_init
   707 ;;		_lcd_write_string
   708 ;;		_map
   709 ;;		_sprintf
   710 ;;		_timer1_init
   711 ;; This function is called by:
   712 ;;		Startup code after reset
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           
   717                           ;psect for function _main
   718  0015                     _main:
   719  0015                     l1751:	
   720                           ;incstack = 0
   721                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   722                           
   723                           
   724                           ;main.c: 24:     uint16_t distance;;main.c: 25:     uint16_t duration;;main.c: 26:     c
      +                          har chr_distance[20];;main.c: 27:     char chr_duration[20];;main.c: 29:     TRISD = 0x0
      +                          0;
   725  0015  1683               	bsf	3,5	;RP0=1, select bank1
   726  0016  1303               	bcf	3,6	;RP1=0, select bank1
   727  0017  0188               	clrf	8	;volatile
   728                           
   729                           ;main.c: 30:     PORTD = 0x00;
   730  0018  1283               	bcf	3,5	;RP0=0, select bank0
   731  0019  1303               	bcf	3,6	;RP1=0, select bank0
   732  001A  0188               	clrf	8	;volatile
   733  001B                     l1753:
   734                           
   735                           ;main.c: 31:     TRISC0 = 0;
   736  001B  1683               	bsf	3,5	;RP0=1, select bank1
   737  001C  1303               	bcf	3,6	;RP1=0, select bank1
   738  001D  1007               	bcf	7,0	;volatile
   739  001E                     l1755:
   740                           
   741                           ;main.c: 32:     TRISC1 = 1;
   742  001E  1487               	bsf	7,1	;volatile
   743  001F                     l1757:
   744                           
   745                           ;main.c: 33:     PORTCbits.RC0 = 1;
   746  001F  1283               	bcf	3,5	;RP0=0, select bank0
   747  0020  1303               	bcf	3,6	;RP1=0, select bank0
   748  0021  1407               	bsf	7,0	;volatile
   749  0022                     l1759:
   750                           
   751                           ;main.c: 35:     timer1_init();
   752  0022  120A  118A  2615  120A  118A  	fcall	_timer1_init
   753  0027                     l1761:
   754                           
   755                           ;main.c: 36:     lcd_init();
   756  0027  120A  118A  22CB  120A  118A  	fcall	_lcd_init
   757  002C                     l1763:
   758                           
   759                           ;main.c: 38:     lcd_write_string("DAS");
   760  002C  3030               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   761  002D  00F8               	movwf	lcd_write_string@str
   762  002E  3080               	movlw	128
   763  002F  00F9               	movwf	lcd_write_string@str+1
   764  0030  120A  118A  2494  120A  118A  	fcall	_lcd_write_string
   765  0035                     l1765:
   766                           
   767                           ;main.c: 39:     lcd_goto_xy(2,1);
   768  0035  01F5               	clrf	lcd_goto_xy@c
   769  0036  0AF5               	incf	lcd_goto_xy@c,f
   770  0037  3002               	movlw	2
   771  0038  120A  118A  2326  120A  118A  	fcall	_lcd_goto_xy
   772  003D                     l1767:
   773                           
   774                           ;main.c: 40:     lcd_write_string("usm simulation");
   775  003D  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   776  003E  00F8               	movwf	lcd_write_string@str
   777  003F  3080               	movlw	128
   778  0040  00F9               	movwf	lcd_write_string@str+1
   779  0041  120A  118A  2494  120A  118A  	fcall	_lcd_write_string
   780  0046                     l1769:
   781                           
   782                           ;main.c: 41:     _delay((unsigned long)((2000)*(20000000/4000.0)));
   783  0046  3033               	movlw	51
   784  0047  1283               	bcf	3,5	;RP0=0, select bank0
   785  0048  1303               	bcf	3,6	;RP1=0, select bank0
   786  0049  00C4               	movwf	??_main+2
   787  004A  30BB               	movlw	187
   788  004B  00C3               	movwf	??_main+1
   789  004C  30DF               	movlw	223
   790  004D  00C2               	movwf	??_main
   791  004E                     u1647:
   792  004E  0BC2               	decfsz	??_main,f
   793  004F  284E               	goto	u1647
   794  0050  0BC3               	decfsz	??_main+1,f
   795  0051  284E               	goto	u1647
   796  0052  0BC4               	decfsz	??_main+2,f
   797  0053  284E               	goto	u1647
   798  0054                     l1771:
   799                           
   800                           ;main.c: 42:     lcd_clear();
   801  0054  120A  118A  25FF  120A  118A  	fcall	_lcd_clear
   802  0059                     l1773:
   803                           
   804                           ;main.c: 46:         _delay((unsigned long)((500)*(20000000/4000.0)));
   805  0059  300D               	movlw	13
   806  005A  1283               	bcf	3,5	;RP0=0, select bank0
   807  005B  1303               	bcf	3,6	;RP1=0, select bank0
   808  005C  00C4               	movwf	??_main+2
   809  005D  30AF               	movlw	175
   810  005E  00C3               	movwf	??_main+1
   811  005F  30B5               	movlw	181
   812  0060  00C2               	movwf	??_main
   813  0061                     u1657:
   814  0061  0BC2               	decfsz	??_main,f
   815  0062  2861               	goto	u1657
   816  0063  0BC3               	decfsz	??_main+1,f
   817  0064  2861               	goto	u1657
   818  0065  0BC4               	decfsz	??_main+2,f
   819  0066  2861               	goto	u1657
   820  0067  2868               	nop2
   821  0068                     l1775:
   822                           
   823                           ;main.c: 48:         RC0 = 0;
   824  0068  1283               	bcf	3,5	;RP0=0, select bank0
   825  0069  1303               	bcf	3,6	;RP1=0, select bank0
   826  006A  1007               	bcf	7,0	;volatile
   827  006B                     l1777:
   828                           
   829                           ;main.c: 49:         _delay((unsigned long)((10)*(20000000/4000000.0)));
   830  006B  300F               	movlw	15
   831  006C  1283               	bcf	3,5	;RP0=0, select bank0
   832  006D  1303               	bcf	3,6	;RP1=0, select bank0
   833  006E  00C2               	movwf	??_main
   834  006F                     u1667:
   835  006F  0BC2               	decfsz	??_main,f
   836  0070  286F               	goto	u1667
   837  0071  2872               	nop2
   838  0072                     l1779:
   839                           
   840                           ;main.c: 50:         RC0 = 1;
   841  0072  1283               	bcf	3,5	;RP0=0, select bank0
   842  0073  1303               	bcf	3,6	;RP1=0, select bank0
   843  0074  1407               	bsf	7,0	;volatile
   844  0075                     l1781:
   845                           
   846                           ;main.c: 52:         if(RC1) {
   847  0075  1C87               	btfss	7,1	;volatile
   848  0076  2878               	goto	u1621
   849  0077  2879               	goto	u1620
   850  0078                     u1621:
   851  0078  2859               	goto	l1773
   852  0079                     u1620:
   853  0079                     l1783:
   854                           
   855                           ;main.c: 54:             T1CONbits.TMR1ON = 1;
   856  0079  1410               	bsf	16,0	;volatile
   857  007A                     l49:	
   858                           ;main.c: 55:             while(RC1);
   859                           
   860  007A  1887               	btfsc	7,1	;volatile
   861  007B  287D               	goto	u1631
   862  007C  287E               	goto	u1630
   863  007D                     u1631:
   864  007D  287A               	goto	l49
   865  007E                     u1630:
   866  007E                     l51:
   867                           
   868                           ;main.c: 56:             T1CONbits.TMR1ON = 0;
   869  007E  1010               	bcf	16,0	;volatile
   870  007F                     l1785:
   871                           
   872                           ;main.c: 57:             duration = overflow;
   873  007F  087B               	movf	_overflow+1,w
   874  0080  1683               	bsf	3,5	;RP0=1, select bank1
   875  0081  1303               	bcf	3,6	;RP1=0, select bank1
   876  0082  00CB               	movwf	(main@duration+1)^(0+128)
   877  0083  087A               	movf	_overflow,w
   878  0084  00CA               	movwf	main@duration^(0+128)
   879  0085                     l1787:
   880                           
   881                           ;main.c: 58:             overflow = 0;
   882  0085  01FA               	clrf	_overflow
   883  0086  01FB               	clrf	_overflow+1
   884  0087                     l1789:
   885                           
   886                           ;main.c: 59:             TMR1 = 60536;
   887  0087  30EC               	movlw	236
   888  0088  1283               	bcf	3,5	;RP0=0, select bank0
   889  0089  1303               	bcf	3,6	;RP1=0, select bank0
   890  008A  008F               	movwf	15	;volatile
   891  008B  3078               	movlw	120
   892  008C  008E               	movwf	14	;volatile
   893  008D                     l1791:
   894                           
   895                           ;main.c: 60:             PIR1bits.TMR1IF = 0;
   896  008D  100C               	bcf	12,0	;volatile
   897  008E                     l1793:
   898                           
   899                           ;main.c: 64:             distance = duration * 17;
   900  008E  1683               	bsf	3,5	;RP0=1, select bank1
   901  008F  1303               	bcf	3,6	;RP1=0, select bank1
   902  0090  084B               	movf	(main@duration+1)^(0+128),w
   903  0091  00F3               	movwf	___wmul@multiplier+1
   904  0092  084A               	movf	main@duration^(0+128),w
   905  0093  00F2               	movwf	___wmul@multiplier
   906  0094  3011               	movlw	17
   907  0095  00F4               	movwf	___wmul@multiplicand
   908  0096  3000               	movlw	0
   909  0097  00F5               	movwf	___wmul@multiplicand+1
   910  0098  120A  118A  2587  120A  118A  	fcall	___wmul
   911  009D  0873               	movf	?___wmul+1,w
   912  009E  1683               	bsf	3,5	;RP0=1, select bank1
   913  009F  1303               	bcf	3,6	;RP1=0, select bank1
   914  00A0  00C9               	movwf	(main@distance+1)^(0+128)
   915  00A1  0872               	movf	?___wmul,w
   916  00A2  00C8               	movwf	main@distance^(0+128)
   917  00A3                     l1795:
   918                           
   919                           ;main.c: 66:             PORTD = (unsigned char) map(distance, 17, 408, 0, 255);
   920  00A3  0849               	movf	(main@distance+1)^(0+128),w
   921  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   922  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   923  00A6  00B5               	movwf	map@value+1
   924  00A7  1683               	bsf	3,5	;RP0=1, select bank1
   925  00A8  1303               	bcf	3,6	;RP1=0, select bank1
   926  00A9  0848               	movf	main@distance^(0+128),w
   927  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   928  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   929  00AC  00B4               	movwf	map@value
   930  00AD  3011               	movlw	17
   931  00AE  00B6               	movwf	map@fromLow
   932  00AF  3000               	movlw	0
   933  00B0  00B7               	movwf	map@fromLow+1
   934  00B1  3098               	movlw	152
   935  00B2  00B8               	movwf	map@fromHigh
   936  00B3  3001               	movlw	1
   937  00B4  00B9               	movwf	map@fromHigh+1
   938  00B5  3000               	movlw	0
   939  00B6  00BA               	movwf	map@toLow
   940  00B7  00BB               	movwf	map@toLow+1
   941  00B8  30FF               	movlw	255
   942  00B9  00BC               	movwf	map@toHigh
   943  00BA  3000               	movlw	0
   944  00BB  00BD               	movwf	map@toHigh+1
   945  00BC  120A  118A  237F  120A  118A  	fcall	_map
   946  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   947  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   948  00C3  0834               	movf	?_map,w
   949  00C4  0088               	movwf	8	;volatile
   950  00C5                     l1797:
   951                           
   952                           ;main.c: 68:             lcd_clear();
   953  00C5  120A  118A  25FF  120A  118A  	fcall	_lcd_clear
   954  00CA                     l1799:
   955                           
   956                           ;main.c: 70:             sprintf(chr_distance, "%d", distance);
   957  00CA  3037               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   958  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   959  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   960  00CD  00C2               	movwf	??_main
   961  00CE  0842               	movf	??_main,w
   962  00CF  00A6               	movwf	sprintf@f
   963  00D0  1683               	bsf	3,5	;RP0=1, select bank1
   964  00D1  1303               	bcf	3,6	;RP1=0, select bank1
   965  00D2  0849               	movf	(main@distance+1)^(0+128),w
   966  00D3  1283               	bcf	3,5	;RP0=0, select bank0
   967  00D4  1303               	bcf	3,6	;RP1=0, select bank0
   968  00D5  00A8               	movwf	?_sprintf+2
   969  00D6  1683               	bsf	3,5	;RP0=1, select bank1
   970  00D7  1303               	bcf	3,6	;RP1=0, select bank1
   971  00D8  0848               	movf	main@distance^(0+128),w
   972  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   973  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   974  00DB  00A7               	movwf	?_sprintf+1
   975  00DC  30A0               	movlw	(low (main@chr_distance| 0))& (0+255)
   976  00DD  120A  118A  2144  120A  118A  	fcall	_sprintf
   977  00E2                     l1801:
   978                           
   979                           ;main.c: 71:             lcd_goto_xy(1,1);
   980  00E2  01F5               	clrf	lcd_goto_xy@c
   981  00E3  0AF5               	incf	lcd_goto_xy@c,f
   982  00E4  3001               	movlw	1
   983  00E5  120A  118A  2326  120A  118A  	fcall	_lcd_goto_xy
   984  00EA                     l1803:
   985                           
   986                           ;main.c: 72:             lcd_write_string("distance: ");
   987  00EA  301A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   988  00EB  00F8               	movwf	lcd_write_string@str
   989  00EC  3080               	movlw	128
   990  00ED  00F9               	movwf	lcd_write_string@str+1
   991  00EE  120A  118A  2494  120A  118A  	fcall	_lcd_write_string
   992  00F3                     l1805:
   993                           
   994                           ;main.c: 73:             lcd_write_string(chr_distance);
   995  00F3  30A0               	movlw	(low (main@chr_distance| 0))& (0+255)
   996  00F4  00F8               	movwf	lcd_write_string@str
   997  00F5  3000               	movlw	0
   998  00F6  00F9               	movwf	lcd_write_string@str+1
   999  00F7  120A  118A  2494  120A  118A  	fcall	_lcd_write_string
  1000  00FC                     l1807:
  1001                           
  1002                           ;main.c: 74:             lcd_write_string("cm");
  1003  00FC  303A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1004  00FD  00F8               	movwf	lcd_write_string@str
  1005  00FE  3080               	movlw	128
  1006  00FF  00F9               	movwf	lcd_write_string@str+1
  1007  0100  120A  118A  2494  120A  118A  	fcall	_lcd_write_string
  1008  0105                     l1809:
  1009                           
  1010                           ;main.c: 76:             sprintf(chr_duration, "%d", duration);
  1011  0105  3037               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1012  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1013  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1014  0108  00C2               	movwf	??_main
  1015  0109  0842               	movf	??_main,w
  1016  010A  00A6               	movwf	sprintf@f
  1017  010B  1683               	bsf	3,5	;RP0=1, select bank1
  1018  010C  1303               	bcf	3,6	;RP1=0, select bank1
  1019  010D  084B               	movf	(main@duration+1)^(0+128),w
  1020  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1021  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1022  0110  00A8               	movwf	?_sprintf+2
  1023  0111  1683               	bsf	3,5	;RP0=1, select bank1
  1024  0112  1303               	bcf	3,6	;RP1=0, select bank1
  1025  0113  084A               	movf	main@duration^(0+128),w
  1026  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0116  00A7               	movwf	?_sprintf+1
  1029  0117  30B4               	movlw	(low (main@chr_duration| 0))& (0+255)
  1030  0118  120A  118A  2144  120A  118A  	fcall	_sprintf
  1031  011D                     l1811:
  1032                           
  1033                           ;main.c: 77:             lcd_goto_xy(2,1);
  1034  011D  01F5               	clrf	lcd_goto_xy@c
  1035  011E  0AF5               	incf	lcd_goto_xy@c,f
  1036  011F  3002               	movlw	2
  1037  0120  120A  118A  2326  120A  118A  	fcall	_lcd_goto_xy
  1038  0125                     l1813:
  1039                           
  1040                           ;main.c: 78:             lcd_write_string("duration: ");
  1041  0125  3025               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1042  0126  00F8               	movwf	lcd_write_string@str
  1043  0127  3080               	movlw	128
  1044  0128  00F9               	movwf	lcd_write_string@str+1
  1045  0129  120A  118A  2494  120A  118A  	fcall	_lcd_write_string
  1046  012E                     l1815:
  1047                           
  1048                           ;main.c: 79:             lcd_write_string(chr_duration);
  1049  012E  30B4               	movlw	(low (main@chr_duration| 0))& (0+255)
  1050  012F  00F8               	movwf	lcd_write_string@str
  1051  0130  3000               	movlw	0
  1052  0131  00F9               	movwf	lcd_write_string@str+1
  1053  0132  120A  118A  2494  120A  118A  	fcall	_lcd_write_string
  1054  0137                     l1817:
  1055                           
  1056                           ;main.c: 80:             lcd_write_string("mS");
  1057  0137  3034               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1058  0138  00F8               	movwf	lcd_write_string@str
  1059  0139  3080               	movlw	128
  1060  013A  00F9               	movwf	lcd_write_string@str+1
  1061  013B  120A  118A  2494  120A  118A  	fcall	_lcd_write_string
  1062  0140  2859               	goto	l1773
  1063  0141  120A  118A  280C   	ljmp	start
  1064  0144                     __end_of_main:
  1065                           
  1066                           	psect	text1
  1067  0615                     __ptext1:	
  1068 ;; *************** function _timer1_init *****************
  1069 ;; Defined at:
  1070 ;;		line 94 in file "main.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		None
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1084 ;;      Params:         0       0       0       0       0
  1085 ;;      Locals:         0       0       0       0       0
  1086 ;;      Temps:          0       0       0       0       0
  1087 ;;      Totals:         0       0       0       0       0
  1088 ;;Total ram usage:        0 bytes
  1089 ;; Hardware stack levels used:    1
  1090 ;; Hardware stack levels required when called:    1
  1091 ;; This function calls:
  1092 ;;		Nothing
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           
  1099                           ;psect for function _timer1_init
  1100  0615                     _timer1_init:
  1101  0615                     l1609:	
  1102                           ;incstack = 0
  1103                           ; Regs used in _timer1_init: []
  1104                           
  1105                           
  1106                           ;main.c: 95:     INTCONbits.GIE = 1;
  1107  0615  178B               	bsf	11,7	;volatile
  1108                           
  1109                           ;main.c: 96:     INTCONbits.PEIE = 1;
  1110  0616  170B               	bsf	11,6	;volatile
  1111                           
  1112                           ;main.c: 97:     PIE1bits.TMR1IE = 1;
  1113  0617  1683               	bsf	3,5	;RP0=1, select bank1
  1114  0618  1303               	bcf	3,6	;RP1=0, select bank1
  1115  0619  140C               	bsf	12,0	;volatile
  1116                           
  1117                           ;main.c: 98:     PIR1bits.TMR1IF = 0;
  1118  061A  1283               	bcf	3,5	;RP0=0, select bank0
  1119  061B  1303               	bcf	3,6	;RP1=0, select bank0
  1120  061C  100C               	bcf	12,0	;volatile
  1121                           
  1122                           ;main.c: 99:     T1CONbits.TMR1CS = 0;
  1123  061D  1090               	bcf	16,1	;volatile
  1124                           
  1125                           ;main.c: 100:     T1CONbits.T1CKPS1 = 0;
  1126  061E  1290               	bcf	16,5	;volatile
  1127                           
  1128                           ;main.c: 101:     T1CONbits.T1CKPS0 = 0;
  1129  061F  1210               	bcf	16,4	;volatile
  1130                           
  1131                           ;main.c: 102:     TMR1 = 60536;
  1132  0620  30EC               	movlw	236
  1133  0621  008F               	movwf	15	;volatile
  1134  0622  3078               	movlw	120
  1135  0623  008E               	movwf	14	;volatile
  1136  0624                     l63:
  1137  0624  0008               	return
  1138  0625                     __end_of_timer1_init:
  1139                           
  1140                           	psect	text2
  1141  0144                     __ptext2:	
  1142 ;; *************** function _sprintf *****************
  1143 ;; Defined at:
  1144 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  sp              1    wreg     PTR unsigned char 
  1147 ;;		 -> main@chr_duration(20), main@chr_distance(20), 
  1148 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  1149 ;;		 -> STR_6(3), STR_3(3), 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  1152 ;;		 -> main@chr_duration(20), main@chr_distance(20), 
  1153 ;;  tmpval          4    0        struct .
  1154 ;;  val             2   15[BANK0 ] unsigned int 
  1155 ;;  cp              2    0        PTR const unsigned char 
  1156 ;;  len             2    0        unsigned int 
  1157 ;;  c               1   18[BANK0 ] unsigned char 
  1158 ;;  prec            1   14[BANK0 ] char 
  1159 ;;  flag            1   13[BANK0 ] unsigned char 
  1160 ;;  ap              1   12[BANK0 ] PTR void [1]
  1161 ;;		 -> ?_sprintf(2), 
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  2    6[BANK0 ] int 
  1164 ;; Registers used:
  1165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1171 ;;      Params:         0       3       0       0       0
  1172 ;;      Locals:         0       7       0       0       0
  1173 ;;      Temps:          0       3       0       0       0
  1174 ;;      Totals:         0      13       0       0       0
  1175 ;;Total ram usage:       13 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; Hardware stack levels required when called:    2
  1178 ;; This function calls:
  1179 ;;		___lwdiv
  1180 ;;		___lwmod
  1181 ;; This function is called by:
  1182 ;;		_main
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _sprintf
  1188  0144                     _sprintf:
  1189                           
  1190                           ;incstack = 0
  1191                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1192                           ;sprintf@sp stored from wreg
  1193  0144  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0145  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0146  00B1               	movwf	sprintf@sp
  1196  0147                     l1675:
  1197                           
  1198                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1199  0147  3027               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1200  0148  00A9               	movwf	??_sprintf
  1201  0149  0829               	movf	??_sprintf,w
  1202  014A  00AC               	movwf	sprintf@ap
  1203                           
  1204                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1205  014B  2A17               	goto	l1727
  1206  014C                     l1677:
  1207                           
  1208                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1209  014C  3025               	movlw	37
  1210  014D  0632               	xorwf	sprintf@c,w
  1211  014E  1903               	btfsc	3,2
  1212  014F  2951               	goto	u1511
  1213  0150  2952               	goto	u1510
  1214  0151                     u1511:
  1215  0151  295E               	goto	l1683
  1216  0152                     u1510:
  1217  0152                     l1679:
  1218                           
  1219                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1220  0152  0832               	movf	sprintf@c,w
  1221  0153  00A9               	movwf	??_sprintf
  1222  0154  0831               	movf	sprintf@sp,w
  1223  0155  0084               	movwf	4
  1224  0156  0829               	movf	??_sprintf,w
  1225  0157  1383               	bcf	3,7	;select IRP bank0
  1226  0158  0080               	movwf	0
  1227  0159                     l1681:
  1228  0159  3001               	movlw	1
  1229  015A  00A9               	movwf	??_sprintf
  1230  015B  0829               	movf	??_sprintf,w
  1231  015C  07B1               	addwf	sprintf@sp,f
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 559:    continue;
  1234  015D  2A17               	goto	l1727
  1235  015E                     l1683:
  1236                           
  1237                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1238  015E  01AD               	clrf	sprintf@flag
  1239  015F                     l1687:	
  1240                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1241                           
  1242  015F  3001               	movlw	1
  1243  0160  07A6               	addwf	sprintf@f,f
  1244  0161  30FF               	movlw	-1
  1245  0162  0726               	addwf	sprintf@f,w
  1246  0163  0084               	movwf	4
  1247  0164  120A  118A  240A  120A  118A  	fcall	stringdir
  1248  0169  00B2               	movwf	sprintf@c
  1249  016A  00A9               	movwf	??_sprintf
  1250  016B  01AA               	clrf	??_sprintf+1
  1251                           
  1252                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1253                           ; Switch size 1, requested type "simple"
  1254                           ; Number of cases is 1, Range of values is 0 to 0
  1255                           ; switch strategies available:
  1256                           ; Name         Instructions Cycles
  1257                           ; simple_byte            4     3 (average)
  1258                           ; direct_byte           11     8 (fixed)
  1259                           ; jumptable            260     6 (fixed)
  1260                           ;	Chosen strategy is simple_byte
  1261  016C  082A               	movf	??_sprintf+1,w
  1262  016D  3A00               	xorlw	0	; case 0
  1263  016E  1903               	skipnz
  1264  016F  2971               	goto	l1839
  1265  0170  2A17               	goto	l1727
  1266  0171                     l1839:
  1267                           
  1268                           ; Switch size 1, requested type "simple"
  1269                           ; Number of cases is 3, Range of values is 0 to 105
  1270                           ; switch strategies available:
  1271                           ; Name         Instructions Cycles
  1272                           ; simple_byte           10     6 (average)
  1273                           ; jumptable            260     6 (fixed)
  1274                           ;	Chosen strategy is simple_byte
  1275  0171  0829               	movf	??_sprintf,w
  1276  0172  3A00               	xorlw	0	; case 0
  1277  0173  1903               	skipnz
  1278  0174  2A29               	goto	l1729
  1279  0175  3A64               	xorlw	100	; case 100
  1280  0176  1903               	skipnz
  1281  0177  297C               	goto	l1689
  1282  0178  3A0D               	xorlw	13	; case 105
  1283  0179  1903               	skipnz
  1284  017A  297C               	goto	l1689
  1285  017B  2A17               	goto	l1727
  1286  017C                     l1689:
  1287                           
  1288                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1289  017C  082C               	movf	sprintf@ap,w
  1290  017D  0084               	movwf	4
  1291  017E  1383               	bcf	3,7	;select IRP bank0
  1292  017F  0800               	movf	0,w
  1293  0180  00AF               	movwf	sprintf@val
  1294  0181  0A84               	incf	4,f
  1295  0182  0800               	movf	0,w
  1296  0183  00B0               	movwf	sprintf@val+1
  1297  0184                     l1691:
  1298  0184  3002               	movlw	2
  1299  0185  00A9               	movwf	??_sprintf
  1300  0186  0829               	movf	??_sprintf,w
  1301  0187  07AC               	addwf	sprintf@ap,f
  1302  0188                     l1693:
  1303                           
  1304                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1305  0188  1FB0               	btfss	sprintf@val+1,7
  1306  0189  298B               	goto	u1521
  1307  018A  298C               	goto	u1520
  1308  018B                     u1521:
  1309  018B  2995               	goto	l1699
  1310  018C                     u1520:
  1311  018C                     l1695:
  1312                           
  1313                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1314  018C  3003               	movlw	3
  1315  018D  00A9               	movwf	??_sprintf
  1316  018E  0829               	movf	??_sprintf,w
  1317  018F  04AD               	iorwf	sprintf@flag,f
  1318  0190                     l1697:
  1319                           
  1320                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1321  0190  09AF               	comf	sprintf@val,f
  1322  0191  09B0               	comf	sprintf@val+1,f
  1323  0192  0AAF               	incf	sprintf@val,f
  1324  0193  1903               	skipnz
  1325  0194  0AB0               	incf	sprintf@val+1,f
  1326  0195                     l1699:
  1327                           
  1328                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1329  0195  01B2               	clrf	sprintf@c
  1330  0196  0AB2               	incf	sprintf@c,f
  1331  0197                     l1705:
  1332                           
  1333                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1334  0197  0832               	movf	sprintf@c,w
  1335  0198  00A9               	movwf	??_sprintf
  1336  0199  0729               	addwf	??_sprintf,w
  1337  019A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1338  019B  0084               	movwf	4
  1339  019C  120A  118A  240A  120A  118A  	fcall	stringdir
  1340  01A1  00AA               	movwf	??_sprintf+1
  1341  01A2  120A  118A  240A  120A  118A  	fcall	stringdir
  1342  01A7  00AB               	movwf	??_sprintf+2
  1343  01A8  082B               	movf	??_sprintf+2,w
  1344  01A9  0230               	subwf	sprintf@val+1,w
  1345  01AA  1D03               	skipz
  1346  01AB  29AE               	goto	u1535
  1347  01AC  082A               	movf	??_sprintf+1,w
  1348  01AD  022F               	subwf	sprintf@val,w
  1349  01AE                     u1535:
  1350  01AE  1803               	skipnc
  1351  01AF  29B1               	goto	u1531
  1352  01B0  29B2               	goto	u1530
  1353  01B1                     u1531:
  1354  01B1  29B3               	goto	l1709
  1355  01B2                     u1530:
  1356  01B2  29BD               	goto	l1711
  1357  01B3                     l1709:
  1358  01B3  3001               	movlw	1
  1359  01B4  00A9               	movwf	??_sprintf
  1360  01B5  0829               	movf	??_sprintf,w
  1361  01B6  07B2               	addwf	sprintf@c,f
  1362  01B7  3005               	movlw	5
  1363  01B8  0632               	xorwf	sprintf@c,w
  1364  01B9  1D03               	btfss	3,2
  1365  01BA  29BC               	goto	u1541
  1366  01BB  29BD               	goto	u1540
  1367  01BC                     u1541:
  1368  01BC  2997               	goto	l1705
  1369  01BD                     u1540:
  1370  01BD                     l1711:
  1371                           
  1372                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1373  01BD  082D               	movf	sprintf@flag,w
  1374  01BE  3903               	andlw	3
  1375  01BF  1903               	btfsc	3,2
  1376  01C0  29C2               	goto	u1551
  1377  01C1  29C3               	goto	u1550
  1378  01C2                     u1551:
  1379  01C2  29CE               	goto	l1717
  1380  01C3                     u1550:
  1381  01C3                     l1713:
  1382                           
  1383                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1384  01C3  302D               	movlw	45
  1385  01C4  00A9               	movwf	??_sprintf
  1386  01C5  0831               	movf	sprintf@sp,w
  1387  01C6  0084               	movwf	4
  1388  01C7  0829               	movf	??_sprintf,w
  1389  01C8  1383               	bcf	3,7	;select IRP bank0
  1390  01C9  0080               	movwf	0
  1391  01CA                     l1715:
  1392  01CA  3001               	movlw	1
  1393  01CB  00A9               	movwf	??_sprintf
  1394  01CC  0829               	movf	??_sprintf,w
  1395  01CD  07B1               	addwf	sprintf@sp,f
  1396  01CE                     l1717:
  1397                           
  1398                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1399  01CE  0832               	movf	sprintf@c,w
  1400  01CF  00A9               	movwf	??_sprintf
  1401  01D0  0829               	movf	??_sprintf,w
  1402  01D1  00AE               	movwf	sprintf@prec
  1403                           
  1404                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1405  01D2  2A0E               	goto	l1725
  1406  01D3                     l1719:
  1407                           
  1408                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1409  01D3  300A               	movlw	10
  1410  01D4  00A0               	movwf	___lwmod@divisor
  1411  01D5  3000               	movlw	0
  1412  01D6  00A1               	movwf	___lwmod@divisor+1
  1413  01D7  082E               	movf	sprintf@prec,w
  1414  01D8  00A9               	movwf	??_sprintf
  1415  01D9  0729               	addwf	??_sprintf,w
  1416  01DA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1417  01DB  0084               	movwf	4
  1418  01DC  120A  118A  240A  120A  118A  	fcall	stringdir
  1419  01E1  00F2               	movwf	___lwdiv@divisor
  1420  01E2  120A  118A  240A  120A  118A  	fcall	stringdir
  1421  01E7  00F3               	movwf	___lwdiv@divisor+1
  1422  01E8  0830               	movf	sprintf@val+1,w
  1423  01E9  00F5               	movwf	___lwdiv@dividend+1
  1424  01EA  082F               	movf	sprintf@val,w
  1425  01EB  00F4               	movwf	___lwdiv@dividend
  1426  01EC  120A  118A  24DA  120A  118A  	fcall	___lwdiv
  1427  01F1  0873               	movf	?___lwdiv+1,w
  1428  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1429  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1430  01F4  00A3               	movwf	___lwmod@dividend+1
  1431  01F5  0872               	movf	?___lwdiv,w
  1432  01F6  00A2               	movwf	___lwmod@dividend
  1433  01F7  120A  118A  251E  120A  118A  	fcall	___lwmod
  1434  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1435  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1436  01FE  0820               	movf	?___lwmod,w
  1437  01FF  3E30               	addlw	48
  1438  0200  00AA               	movwf	??_sprintf+1
  1439  0201  082A               	movf	??_sprintf+1,w
  1440  0202  00B2               	movwf	sprintf@c
  1441  0203                     l1721:
  1442                           
  1443                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1444  0203  0832               	movf	sprintf@c,w
  1445  0204  00A9               	movwf	??_sprintf
  1446  0205  0831               	movf	sprintf@sp,w
  1447  0206  0084               	movwf	4
  1448  0207  0829               	movf	??_sprintf,w
  1449  0208  1383               	bcf	3,7	;select IRP bank0
  1450  0209  0080               	movwf	0
  1451  020A                     l1723:
  1452  020A  3001               	movlw	1
  1453  020B  00A9               	movwf	??_sprintf
  1454  020C  0829               	movf	??_sprintf,w
  1455  020D  07B1               	addwf	sprintf@sp,f
  1456  020E                     l1725:
  1457                           
  1458                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1459  020E  30FF               	movlw	255
  1460  020F  00A9               	movwf	??_sprintf
  1461  0210  0829               	movf	??_sprintf,w
  1462  0211  07AE               	addwf	sprintf@prec,f
  1463  0212  0A2E               	incf	sprintf@prec,w
  1464  0213  1D03               	btfss	3,2
  1465  0214  2A16               	goto	u1561
  1466  0215  2A17               	goto	u1560
  1467  0216                     u1561:
  1468  0216  29D3               	goto	l1719
  1469  0217                     u1560:
  1470  0217                     l1727:
  1471                           
  1472                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1473  0217  3001               	movlw	1
  1474  0218  07A6               	addwf	sprintf@f,f
  1475  0219  30FF               	movlw	-1
  1476  021A  0726               	addwf	sprintf@f,w
  1477  021B  0084               	movwf	4
  1478  021C  120A  118A  240A  120A  118A  	fcall	stringdir
  1479  0221  00A9               	movwf	??_sprintf
  1480  0222  0829               	movf	??_sprintf,w
  1481  0223  00B2               	movwf	sprintf@c
  1482  0224  0832               	movf	sprintf@c,w
  1483  0225  1D03               	btfss	3,2
  1484  0226  2A28               	goto	u1571
  1485  0227  2A29               	goto	u1570
  1486  0228                     u1571:
  1487  0228  294C               	goto	l1677
  1488  0229                     u1570:
  1489  0229                     l1729:
  1490                           
  1491                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1492  0229  0831               	movf	sprintf@sp,w
  1493  022A  0084               	movwf	4
  1494  022B  1383               	bcf	3,7	;select IRP bank0
  1495  022C  0180               	clrf	0
  1496  022D                     l229:
  1497  022D  0008               	return
  1498  022E                     __end_of_sprintf:
  1499                           
  1500                           	psect	text3
  1501  051E                     __ptext3:	
  1502 ;; *************** function ___lwmod *****************
  1503 ;; Defined at:
  1504 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  divisor         2    0[BANK0 ] unsigned int 
  1507 ;;  dividend        2    2[BANK0 ] unsigned int 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  counter         1    5[BANK0 ] unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  2    0[BANK0 ] unsigned int 
  1512 ;; Registers used:
  1513 ;;		wreg, status,2, status,0
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1519 ;;      Params:         0       4       0       0       0
  1520 ;;      Locals:         0       1       0       0       0
  1521 ;;      Temps:          0       1       0       0       0
  1522 ;;      Totals:         0       6       0       0       0
  1523 ;;Total ram usage:        6 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    1
  1526 ;; This function calls:
  1527 ;;		Nothing
  1528 ;; This function is called by:
  1529 ;;		_sprintf
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           
  1534                           ;psect for function ___lwmod
  1535  051E                     ___lwmod:
  1536  051E                     l1587:	
  1537                           ;incstack = 0
  1538                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1539                           
  1540  051E  1283               	bcf	3,5	;RP0=0, select bank0
  1541  051F  1303               	bcf	3,6	;RP1=0, select bank0
  1542  0520  0820               	movf	___lwmod@divisor,w
  1543  0521  0421               	iorwf	___lwmod@divisor+1,w
  1544  0522  1903               	btfsc	3,2
  1545  0523  2D25               	goto	u1371
  1546  0524  2D26               	goto	u1370
  1547  0525                     u1371:
  1548  0525  2D55               	goto	l1605
  1549  0526                     u1370:
  1550  0526                     l1589:
  1551  0526  01A5               	clrf	___lwmod@counter
  1552  0527  0AA5               	incf	___lwmod@counter,f
  1553  0528  2D34               	goto	l1595
  1554  0529                     l1591:
  1555  0529  3001               	movlw	1
  1556  052A                     u1385:
  1557  052A  1003               	clrc
  1558  052B  0DA0               	rlf	___lwmod@divisor,f
  1559  052C  0DA1               	rlf	___lwmod@divisor+1,f
  1560  052D  3EFF               	addlw	-1
  1561  052E  1D03               	skipz
  1562  052F  2D2A               	goto	u1385
  1563  0530                     l1593:
  1564  0530  3001               	movlw	1
  1565  0531  00A4               	movwf	??___lwmod
  1566  0532  0824               	movf	??___lwmod,w
  1567  0533  07A5               	addwf	___lwmod@counter,f
  1568  0534                     l1595:
  1569  0534  1FA1               	btfss	___lwmod@divisor+1,7
  1570  0535  2D37               	goto	u1391
  1571  0536  2D38               	goto	u1390
  1572  0537                     u1391:
  1573  0537  2D29               	goto	l1591
  1574  0538                     u1390:
  1575  0538                     l1597:
  1576  0538  0821               	movf	___lwmod@divisor+1,w
  1577  0539  0223               	subwf	___lwmod@dividend+1,w
  1578  053A  1D03               	skipz
  1579  053B  2D3E               	goto	u1405
  1580  053C  0820               	movf	___lwmod@divisor,w
  1581  053D  0222               	subwf	___lwmod@dividend,w
  1582  053E                     u1405:
  1583  053E  1C03               	skipc
  1584  053F  2D41               	goto	u1401
  1585  0540  2D42               	goto	u1400
  1586  0541                     u1401:
  1587  0541  2D48               	goto	l1601
  1588  0542                     u1400:
  1589  0542                     l1599:
  1590  0542  0820               	movf	___lwmod@divisor,w
  1591  0543  02A2               	subwf	___lwmod@dividend,f
  1592  0544  0821               	movf	___lwmod@divisor+1,w
  1593  0545  1C03               	skipc
  1594  0546  03A3               	decf	___lwmod@dividend+1,f
  1595  0547  02A3               	subwf	___lwmod@dividend+1,f
  1596  0548                     l1601:
  1597  0548  3001               	movlw	1
  1598  0549                     u1415:
  1599  0549  1003               	clrc
  1600  054A  0CA1               	rrf	___lwmod@divisor+1,f
  1601  054B  0CA0               	rrf	___lwmod@divisor,f
  1602  054C  3EFF               	addlw	-1
  1603  054D  1D03               	skipz
  1604  054E  2D49               	goto	u1415
  1605  054F                     l1603:
  1606  054F  3001               	movlw	1
  1607  0550  02A5               	subwf	___lwmod@counter,f
  1608  0551  1D03               	btfss	3,2
  1609  0552  2D54               	goto	u1421
  1610  0553  2D55               	goto	u1420
  1611  0554                     u1421:
  1612  0554  2D38               	goto	l1597
  1613  0555                     u1420:
  1614  0555                     l1605:
  1615  0555  0823               	movf	___lwmod@dividend+1,w
  1616  0556  00A1               	movwf	?___lwmod+1
  1617  0557  0822               	movf	___lwmod@dividend,w
  1618  0558  00A0               	movwf	?___lwmod
  1619  0559                     l515:
  1620  0559  0008               	return
  1621  055A                     __end_of___lwmod:
  1622                           
  1623                           	psect	text4
  1624  04DA                     __ptext4:	
  1625 ;; *************** function ___lwdiv *****************
  1626 ;; Defined at:
  1627 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  divisor         2    2[COMMON] unsigned int 
  1630 ;;  dividend        2    4[COMMON] unsigned int 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  quotient        2    8[COMMON] unsigned int 
  1633 ;;  counter         1    7[COMMON] unsigned char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  2    2[COMMON] unsigned int 
  1636 ;; Registers used:
  1637 ;;		wreg, status,2, status,0
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1643 ;;      Params:         4       0       0       0       0
  1644 ;;      Locals:         3       0       0       0       0
  1645 ;;      Temps:          1       0       0       0       0
  1646 ;;      Totals:         8       0       0       0       0
  1647 ;;Total ram usage:        8 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:    1
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_sprintf
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           
  1658                           ;psect for function ___lwdiv
  1659  04DA                     ___lwdiv:
  1660  04DA                     l1561:	
  1661                           ;incstack = 0
  1662                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1663                           
  1664  04DA  01F8               	clrf	___lwdiv@quotient
  1665  04DB  01F9               	clrf	___lwdiv@quotient+1
  1666  04DC                     l1563:
  1667  04DC  0872               	movf	___lwdiv@divisor,w
  1668  04DD  0473               	iorwf	___lwdiv@divisor+1,w
  1669  04DE  1903               	btfsc	3,2
  1670  04DF  2CE1               	goto	u1301
  1671  04E0  2CE2               	goto	u1300
  1672  04E1                     u1301:
  1673  04E1  2D19               	goto	l1583
  1674  04E2                     u1300:
  1675  04E2                     l1565:
  1676  04E2  01F7               	clrf	___lwdiv@counter
  1677  04E3  0AF7               	incf	___lwdiv@counter,f
  1678  04E4  2CF0               	goto	l1571
  1679  04E5                     l1567:
  1680  04E5  3001               	movlw	1
  1681  04E6                     u1315:
  1682  04E6  1003               	clrc
  1683  04E7  0DF2               	rlf	___lwdiv@divisor,f
  1684  04E8  0DF3               	rlf	___lwdiv@divisor+1,f
  1685  04E9  3EFF               	addlw	-1
  1686  04EA  1D03               	skipz
  1687  04EB  2CE6               	goto	u1315
  1688  04EC                     l1569:
  1689  04EC  3001               	movlw	1
  1690  04ED  00F6               	movwf	??___lwdiv
  1691  04EE  0876               	movf	??___lwdiv,w
  1692  04EF  07F7               	addwf	___lwdiv@counter,f
  1693  04F0                     l1571:
  1694  04F0  1FF3               	btfss	___lwdiv@divisor+1,7
  1695  04F1  2CF3               	goto	u1321
  1696  04F2  2CF4               	goto	u1320
  1697  04F3                     u1321:
  1698  04F3  2CE5               	goto	l1567
  1699  04F4                     u1320:
  1700  04F4                     l1573:
  1701  04F4  3001               	movlw	1
  1702  04F5                     u1335:
  1703  04F5  1003               	clrc
  1704  04F6  0DF8               	rlf	___lwdiv@quotient,f
  1705  04F7  0DF9               	rlf	___lwdiv@quotient+1,f
  1706  04F8  3EFF               	addlw	-1
  1707  04F9  1D03               	skipz
  1708  04FA  2CF5               	goto	u1335
  1709  04FB  0873               	movf	___lwdiv@divisor+1,w
  1710  04FC  0275               	subwf	___lwdiv@dividend+1,w
  1711  04FD  1D03               	skipz
  1712  04FE  2D01               	goto	u1345
  1713  04FF  0872               	movf	___lwdiv@divisor,w
  1714  0500  0274               	subwf	___lwdiv@dividend,w
  1715  0501                     u1345:
  1716  0501  1C03               	skipc
  1717  0502  2D04               	goto	u1341
  1718  0503  2D05               	goto	u1340
  1719  0504                     u1341:
  1720  0504  2D0C               	goto	l1579
  1721  0505                     u1340:
  1722  0505                     l1575:
  1723  0505  0872               	movf	___lwdiv@divisor,w
  1724  0506  02F4               	subwf	___lwdiv@dividend,f
  1725  0507  0873               	movf	___lwdiv@divisor+1,w
  1726  0508  1C03               	skipc
  1727  0509  03F5               	decf	___lwdiv@dividend+1,f
  1728  050A  02F5               	subwf	___lwdiv@dividend+1,f
  1729  050B                     l1577:
  1730  050B  1478               	bsf	___lwdiv@quotient,0
  1731  050C                     l1579:
  1732  050C  3001               	movlw	1
  1733  050D                     u1355:
  1734  050D  1003               	clrc
  1735  050E  0CF3               	rrf	___lwdiv@divisor+1,f
  1736  050F  0CF2               	rrf	___lwdiv@divisor,f
  1737  0510  3EFF               	addlw	-1
  1738  0511  1D03               	skipz
  1739  0512  2D0D               	goto	u1355
  1740  0513                     l1581:
  1741  0513  3001               	movlw	1
  1742  0514  02F7               	subwf	___lwdiv@counter,f
  1743  0515  1D03               	btfss	3,2
  1744  0516  2D18               	goto	u1361
  1745  0517  2D19               	goto	u1360
  1746  0518                     u1361:
  1747  0518  2CF4               	goto	l1573
  1748  0519                     u1360:
  1749  0519                     l1583:
  1750  0519  0879               	movf	___lwdiv@quotient+1,w
  1751  051A  00F3               	movwf	?___lwdiv+1
  1752  051B  0878               	movf	___lwdiv@quotient,w
  1753  051C  00F2               	movwf	?___lwdiv
  1754  051D                     l505:
  1755  051D  0008               	return
  1756  051E                     __end_of___lwdiv:
  1757                           
  1758                           	psect	text5
  1759  037F                     __ptext5:	
  1760 ;; *************** function _map *****************
  1761 ;; Defined at:
  1762 ;;		line 105 in file "main.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  value           2   20[BANK0 ] unsigned int 
  1765 ;;  fromLow         2   22[BANK0 ] unsigned int 
  1766 ;;  fromHigh        2   24[BANK0 ] unsigned int 
  1767 ;;  toLow           2   26[BANK0 ] unsigned int 
  1768 ;;  toHigh          2   28[BANK0 ] unsigned int 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  4   20[BANK0 ] long 
  1773 ;; Registers used:
  1774 ;;		wreg, status,2, status,0, pclath, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1780 ;;      Params:         0      10       0       0       0
  1781 ;;      Locals:         0       0       0       0       0
  1782 ;;      Temps:          0       4       0       0       0
  1783 ;;      Totals:         0      14       0       0       0
  1784 ;;Total ram usage:       14 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; Hardware stack levels required when called:    2
  1787 ;; This function calls:
  1788 ;;		___aldiv
  1789 ;;		___lmul
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           
  1796                           ;psect for function _map
  1797  037F                     _map:
  1798  037F                     l1671:	
  1799                           ;incstack = 0
  1800                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  1801                           
  1802                           
  1803                           ;main.c: 107:     return ((long)(value - fromLow) * (long)(toHigh - toLow)) / (fromHigh 
      +                          - fromLow) + toLow;
  1804  037F  1283               	bcf	3,5	;RP0=0, select bank0
  1805  0380  1303               	bcf	3,6	;RP1=0, select bank0
  1806  0381  083A               	movf	map@toLow,w
  1807  0382  00BE               	movwf	??_map
  1808  0383  083B               	movf	map@toLow+1,w
  1809  0384  00BF               	movwf	??_map+1
  1810  0385  01C0               	clrf	??_map+2
  1811  0386  01C1               	clrf	??_map+3
  1812  0387  0836               	movf	map@fromLow,w
  1813  0388  0238               	subwf	map@fromHigh,w
  1814  0389  00A5               	movwf	___aldiv@divisor
  1815  038A  0837               	movf	map@fromLow+1,w
  1816  038B  1C03               	skipc
  1817  038C  0A37               	incf	map@fromLow+1,w
  1818  038D  0239               	subwf	map@fromHigh+1,w
  1819  038E  00A6               	movwf	___aldiv@divisor+1
  1820  038F  01A7               	clrf	___aldiv@divisor+2
  1821  0390  01A8               	clrf	___aldiv@divisor+3
  1822  0391  0836               	movf	map@fromLow,w
  1823  0392  0234               	subwf	map@value,w
  1824  0393  00F2               	movwf	___lmul@multiplier
  1825  0394  0837               	movf	map@fromLow+1,w
  1826  0395  1C03               	skipc
  1827  0396  0A37               	incf	map@fromLow+1,w
  1828  0397  0235               	subwf	map@value+1,w
  1829  0398  00F3               	movwf	___lmul@multiplier+1
  1830  0399  01F4               	clrf	___lmul@multiplier+2
  1831  039A  01F5               	clrf	___lmul@multiplier+3
  1832  039B  083A               	movf	map@toLow,w
  1833  039C  023C               	subwf	map@toHigh,w
  1834  039D  00F6               	movwf	___lmul@multiplicand
  1835  039E  083B               	movf	map@toLow+1,w
  1836  039F  1C03               	skipc
  1837  03A0  0A3B               	incf	map@toLow+1,w
  1838  03A1  023D               	subwf	map@toHigh+1,w
  1839  03A2  00F7               	movwf	___lmul@multiplicand+1
  1840  03A3  01F8               	clrf	___lmul@multiplicand+2
  1841  03A4  01F9               	clrf	___lmul@multiplicand+3
  1842  03A5  120A  118A  244C  120A  118A  	fcall	___lmul
  1843  03AA  0875               	movf	?___lmul+3,w
  1844  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  1845  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  1846  03AD  00AC               	movwf	___aldiv@dividend+3
  1847  03AE  0874               	movf	?___lmul+2,w
  1848  03AF  00AB               	movwf	___aldiv@dividend+2
  1849  03B0  0873               	movf	?___lmul+1,w
  1850  03B1  00AA               	movwf	___aldiv@dividend+1
  1851  03B2  0872               	movf	?___lmul,w
  1852  03B3  00A9               	movwf	___aldiv@dividend
  1853  03B4  120A  118A  222E  120A  118A  	fcall	___aldiv
  1854  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  1855  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  1856  03BB  0825               	movf	?___aldiv,w
  1857  03BC  07BE               	addwf	??_map,f
  1858  03BD  0826               	movf	?___aldiv+1,w
  1859  03BE  1803               	skipnc
  1860  03BF  0F26               	incfsz	?___aldiv+1,w
  1861  03C0  2BC2               	goto	u1500
  1862  03C1  2BC3               	goto	u1501
  1863  03C2                     u1500:
  1864  03C2  07BF               	addwf	??_map+1,f
  1865  03C3                     u1501:
  1866  03C3  0827               	movf	?___aldiv+2,w
  1867  03C4  1803               	skipnc
  1868  03C5  0F27               	incfsz	?___aldiv+2,w
  1869  03C6  2BC8               	goto	u1502
  1870  03C7  2BC9               	goto	u1503
  1871  03C8                     u1502:
  1872  03C8  07C0               	addwf	??_map+2,f
  1873  03C9                     u1503:
  1874  03C9  0828               	movf	?___aldiv+3,w
  1875  03CA  1803               	skipnc
  1876  03CB  0A28               	incf	?___aldiv+3,w
  1877  03CC  07C1               	addwf	??_map+3,f
  1878  03CD  0841               	movf	??_map+3,w
  1879  03CE  00B7               	movwf	?_map+3
  1880  03CF  0840               	movf	??_map+2,w
  1881  03D0  00B6               	movwf	?_map+2
  1882  03D1  083F               	movf	??_map+1,w
  1883  03D2  00B5               	movwf	?_map+1
  1884  03D3  083E               	movf	??_map,w
  1885  03D4  00B4               	movwf	?_map
  1886  03D5                     l66:
  1887  03D5  0008               	return
  1888  03D6                     __end_of_map:
  1889                           
  1890                           	psect	text6
  1891  044C                     __ptext6:	
  1892 ;; *************** function ___lmul *****************
  1893 ;; Defined at:
  1894 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul32.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  multiplier      4    2[COMMON] unsigned long 
  1897 ;;  multiplicand    4    6[COMMON] unsigned long 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;  product         4    1[BANK0 ] unsigned long 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  4    2[COMMON] unsigned long 
  1902 ;; Registers used:
  1903 ;;		wreg, status,2, status,0
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1909 ;;      Params:         8       0       0       0       0
  1910 ;;      Locals:         0       4       0       0       0
  1911 ;;      Temps:          0       1       0       0       0
  1912 ;;      Totals:         8       5       0       0       0
  1913 ;;Total ram usage:       13 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    1
  1916 ;; This function calls:
  1917 ;;		Nothing
  1918 ;; This function is called by:
  1919 ;;		_map
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           
  1924                           ;psect for function ___lmul
  1925  044C                     ___lmul:
  1926  044C                     l1507:	
  1927                           ;incstack = 0
  1928                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1929                           
  1930  044C  3000               	movlw	0
  1931  044D  1283               	bcf	3,5	;RP0=0, select bank0
  1932  044E  1303               	bcf	3,6	;RP1=0, select bank0
  1933  044F  00A4               	movwf	___lmul@product+3
  1934  0450  3000               	movlw	0
  1935  0451  00A3               	movwf	___lmul@product+2
  1936  0452  3000               	movlw	0
  1937  0453  00A2               	movwf	___lmul@product+1
  1938  0454  3000               	movlw	0
  1939  0455  00A1               	movwf	___lmul@product
  1940  0456                     l1509:
  1941  0456  1C72               	btfss	___lmul@multiplier,0
  1942  0457  2C59               	goto	u1151
  1943  0458  2C5A               	goto	u1150
  1944  0459                     u1151:
  1945  0459  2C71               	goto	l1513
  1946  045A                     u1150:
  1947  045A                     l1511:
  1948  045A  0876               	movf	___lmul@multiplicand,w
  1949  045B  07A1               	addwf	___lmul@product,f
  1950  045C  0877               	movf	___lmul@multiplicand+1,w
  1951  045D  1103               	clrz
  1952  045E  1803               	skipnc
  1953  045F  3E01               	addlw	1
  1954  0460  1903               	skipnz
  1955  0461  2C63               	goto	u1161
  1956  0462  07A2               	addwf	___lmul@product+1,f
  1957  0463                     u1161:
  1958  0463  0878               	movf	___lmul@multiplicand+2,w
  1959  0464  1103               	clrz
  1960  0465  1803               	skipnc
  1961  0466  3E01               	addlw	1
  1962  0467  1903               	skipnz
  1963  0468  2C6A               	goto	u1162
  1964  0469  07A3               	addwf	___lmul@product+2,f
  1965  046A                     u1162:
  1966  046A  0879               	movf	___lmul@multiplicand+3,w
  1967  046B  1103               	clrz
  1968  046C  1803               	skipnc
  1969  046D  3E01               	addlw	1
  1970  046E  1903               	skipnz
  1971  046F  2C71               	goto	u1163
  1972  0470  07A4               	addwf	___lmul@product+3,f
  1973  0471                     u1163:
  1974  0471                     l1513:
  1975  0471  3001               	movlw	1
  1976  0472  00A0               	movwf	??___lmul
  1977  0473                     u1175:
  1978  0473  1003               	clrc
  1979  0474  0DF6               	rlf	___lmul@multiplicand,f
  1980  0475  0DF7               	rlf	___lmul@multiplicand+1,f
  1981  0476  0DF8               	rlf	___lmul@multiplicand+2,f
  1982  0477  0DF9               	rlf	___lmul@multiplicand+3,f
  1983  0478  0BA0               	decfsz	??___lmul,f
  1984  0479  2C73               	goto	u1175
  1985  047A                     l1515:
  1986  047A  3001               	movlw	1
  1987  047B                     u1185:
  1988  047B  1003               	clrc
  1989  047C  0CF5               	rrf	___lmul@multiplier+3,f
  1990  047D  0CF4               	rrf	___lmul@multiplier+2,f
  1991  047E  0CF3               	rrf	___lmul@multiplier+1,f
  1992  047F  0CF2               	rrf	___lmul@multiplier,f
  1993  0480  3EFF               	addlw	-1
  1994  0481  1D03               	skipz
  1995  0482  2C7B               	goto	u1185
  1996  0483  0875               	movf	___lmul@multiplier+3,w
  1997  0484  0474               	iorwf	___lmul@multiplier+2,w
  1998  0485  0473               	iorwf	___lmul@multiplier+1,w
  1999  0486  0472               	iorwf	___lmul@multiplier,w
  2000  0487  1D03               	skipz
  2001  0488  2C8A               	goto	u1191
  2002  0489  2C8B               	goto	u1190
  2003  048A                     u1191:
  2004  048A  2C56               	goto	l1509
  2005  048B                     u1190:
  2006  048B                     l1517:
  2007  048B  0824               	movf	___lmul@product+3,w
  2008  048C  00F5               	movwf	?___lmul+3
  2009  048D  0823               	movf	___lmul@product+2,w
  2010  048E  00F4               	movwf	?___lmul+2
  2011  048F  0822               	movf	___lmul@product+1,w
  2012  0490  00F3               	movwf	?___lmul+1
  2013  0491  0821               	movf	___lmul@product,w
  2014  0492  00F2               	movwf	?___lmul
  2015  0493                     l247:
  2016  0493  0008               	return
  2017  0494                     __end_of___lmul:
  2018                           
  2019                           	psect	text7
  2020  022E                     __ptext7:	
  2021 ;; *************** function ___aldiv *****************
  2022 ;; Defined at:
  2023 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\aldiv.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  divisor         4    5[BANK0 ] long 
  2026 ;;  dividend        4    9[BANK0 ] long 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  quotient        4   16[BANK0 ] long 
  2029 ;;  sign            1   15[BANK0 ] unsigned char 
  2030 ;;  counter         1   14[BANK0 ] unsigned char 
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  4    5[BANK0 ] long 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2040 ;;      Params:         0       8       0       0       0
  2041 ;;      Locals:         0       6       0       0       0
  2042 ;;      Temps:          0       1       0       0       0
  2043 ;;      Totals:         0      15       0       0       0
  2044 ;;Total ram usage:       15 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; Hardware stack levels required when called:    1
  2047 ;; This function calls:
  2048 ;;		Nothing
  2049 ;; This function is called by:
  2050 ;;		_map
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           
  2055                           ;psect for function ___aldiv
  2056  022E                     ___aldiv:
  2057  022E                     l1521:	
  2058                           ;incstack = 0
  2059                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2060                           
  2061  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2062  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2063  0230  01AF               	clrf	___aldiv@sign
  2064  0231                     l1523:
  2065  0231  1FA8               	btfss	___aldiv@divisor+3,7
  2066  0232  2A34               	goto	u1201
  2067  0233  2A35               	goto	u1200
  2068  0234                     u1201:
  2069  0234  2A42               	goto	l298
  2070  0235                     u1200:
  2071  0235                     l1525:
  2072  0235  09A5               	comf	___aldiv@divisor,f
  2073  0236  09A6               	comf	___aldiv@divisor+1,f
  2074  0237  09A7               	comf	___aldiv@divisor+2,f
  2075  0238  09A8               	comf	___aldiv@divisor+3,f
  2076  0239  0AA5               	incf	___aldiv@divisor,f
  2077  023A  1903               	skipnz
  2078  023B  0AA6               	incf	___aldiv@divisor+1,f
  2079  023C  1903               	skipnz
  2080  023D  0AA7               	incf	___aldiv@divisor+2,f
  2081  023E  1903               	skipnz
  2082  023F  0AA8               	incf	___aldiv@divisor+3,f
  2083  0240  01AF               	clrf	___aldiv@sign
  2084  0241  0AAF               	incf	___aldiv@sign,f
  2085  0242                     l298:
  2086  0242  1FAC               	btfss	___aldiv@dividend+3,7
  2087  0243  2A45               	goto	u1211
  2088  0244  2A46               	goto	u1210
  2089  0245                     u1211:
  2090  0245  2A55               	goto	l1531
  2091  0246                     u1210:
  2092  0246                     l1527:
  2093  0246  09A9               	comf	___aldiv@dividend,f
  2094  0247  09AA               	comf	___aldiv@dividend+1,f
  2095  0248  09AB               	comf	___aldiv@dividend+2,f
  2096  0249  09AC               	comf	___aldiv@dividend+3,f
  2097  024A  0AA9               	incf	___aldiv@dividend,f
  2098  024B  1903               	skipnz
  2099  024C  0AAA               	incf	___aldiv@dividend+1,f
  2100  024D  1903               	skipnz
  2101  024E  0AAB               	incf	___aldiv@dividend+2,f
  2102  024F  1903               	skipnz
  2103  0250  0AAC               	incf	___aldiv@dividend+3,f
  2104  0251                     l1529:
  2105  0251  3001               	movlw	1
  2106  0252  00AD               	movwf	??___aldiv
  2107  0253  082D               	movf	??___aldiv,w
  2108  0254  06AF               	xorwf	___aldiv@sign,f
  2109  0255                     l1531:
  2110  0255  3000               	movlw	0
  2111  0256  00B3               	movwf	___aldiv@quotient+3
  2112  0257  3000               	movlw	0
  2113  0258  00B2               	movwf	___aldiv@quotient+2
  2114  0259  3000               	movlw	0
  2115  025A  00B1               	movwf	___aldiv@quotient+1
  2116  025B  3000               	movlw	0
  2117  025C  00B0               	movwf	___aldiv@quotient
  2118  025D                     l1533:
  2119  025D  0828               	movf	___aldiv@divisor+3,w
  2120  025E  0427               	iorwf	___aldiv@divisor+2,w
  2121  025F  0426               	iorwf	___aldiv@divisor+1,w
  2122  0260  0425               	iorwf	___aldiv@divisor,w
  2123  0261  1903               	skipnz
  2124  0262  2A64               	goto	u1221
  2125  0263  2A65               	goto	u1220
  2126  0264                     u1221:
  2127  0264  2AB2               	goto	l1553
  2128  0265                     u1220:
  2129  0265                     l1535:
  2130  0265  01AE               	clrf	___aldiv@counter
  2131  0266  0AAE               	incf	___aldiv@counter,f
  2132  0267  2A75               	goto	l1539
  2133  0268                     l1537:
  2134  0268  3001               	movlw	1
  2135  0269  00AD               	movwf	??___aldiv
  2136  026A                     u1235:
  2137  026A  1003               	clrc
  2138  026B  0DA5               	rlf	___aldiv@divisor,f
  2139  026C  0DA6               	rlf	___aldiv@divisor+1,f
  2140  026D  0DA7               	rlf	___aldiv@divisor+2,f
  2141  026E  0DA8               	rlf	___aldiv@divisor+3,f
  2142  026F  0BAD               	decfsz	??___aldiv,f
  2143  0270  2A6A               	goto	u1235
  2144  0271  3001               	movlw	1
  2145  0272  00AD               	movwf	??___aldiv
  2146  0273  082D               	movf	??___aldiv,w
  2147  0274  07AE               	addwf	___aldiv@counter,f
  2148  0275                     l1539:
  2149  0275  1FA8               	btfss	___aldiv@divisor+3,7
  2150  0276  2A78               	goto	u1241
  2151  0277  2A79               	goto	u1240
  2152  0278                     u1241:
  2153  0278  2A68               	goto	l1537
  2154  0279                     u1240:
  2155  0279                     l1541:
  2156  0279  3001               	movlw	1
  2157  027A  00AD               	movwf	??___aldiv
  2158  027B                     u1255:
  2159  027B  1003               	clrc
  2160  027C  0DB0               	rlf	___aldiv@quotient,f
  2161  027D  0DB1               	rlf	___aldiv@quotient+1,f
  2162  027E  0DB2               	rlf	___aldiv@quotient+2,f
  2163  027F  0DB3               	rlf	___aldiv@quotient+3,f
  2164  0280  0BAD               	decfsz	??___aldiv,f
  2165  0281  2A7B               	goto	u1255
  2166  0282                     l1543:
  2167  0282  0828               	movf	___aldiv@divisor+3,w
  2168  0283  022C               	subwf	___aldiv@dividend+3,w
  2169  0284  1D03               	skipz
  2170  0285  2A90               	goto	u1265
  2171  0286  0827               	movf	___aldiv@divisor+2,w
  2172  0287  022B               	subwf	___aldiv@dividend+2,w
  2173  0288  1D03               	skipz
  2174  0289  2A90               	goto	u1265
  2175  028A  0826               	movf	___aldiv@divisor+1,w
  2176  028B  022A               	subwf	___aldiv@dividend+1,w
  2177  028C  1D03               	skipz
  2178  028D  2A90               	goto	u1265
  2179  028E  0825               	movf	___aldiv@divisor,w
  2180  028F  0229               	subwf	___aldiv@dividend,w
  2181  0290                     u1265:
  2182  0290  1C03               	skipc
  2183  0291  2A93               	goto	u1261
  2184  0292  2A94               	goto	u1260
  2185  0293                     u1261:
  2186  0293  2AA3               	goto	l1549
  2187  0294                     u1260:
  2188  0294                     l1545:
  2189  0294  0825               	movf	___aldiv@divisor,w
  2190  0295  02A9               	subwf	___aldiv@dividend,f
  2191  0296  0826               	movf	___aldiv@divisor+1,w
  2192  0297  1C03               	skipc
  2193  0298  0F26               	incfsz	___aldiv@divisor+1,w
  2194  0299  02AA               	subwf	___aldiv@dividend+1,f
  2195  029A  0827               	movf	___aldiv@divisor+2,w
  2196  029B  1C03               	skipc
  2197  029C  0F27               	incfsz	___aldiv@divisor+2,w
  2198  029D  02AB               	subwf	___aldiv@dividend+2,f
  2199  029E  0828               	movf	___aldiv@divisor+3,w
  2200  029F  1C03               	skipc
  2201  02A0  0F28               	incfsz	___aldiv@divisor+3,w
  2202  02A1  02AC               	subwf	___aldiv@dividend+3,f
  2203  02A2                     l1547:
  2204  02A2  1430               	bsf	___aldiv@quotient,0
  2205  02A3                     l1549:
  2206  02A3  3001               	movlw	1
  2207  02A4                     u1275:
  2208  02A4  1003               	clrc
  2209  02A5  0CA8               	rrf	___aldiv@divisor+3,f
  2210  02A6  0CA7               	rrf	___aldiv@divisor+2,f
  2211  02A7  0CA6               	rrf	___aldiv@divisor+1,f
  2212  02A8  0CA5               	rrf	___aldiv@divisor,f
  2213  02A9  3EFF               	addlw	-1
  2214  02AA  1D03               	skipz
  2215  02AB  2AA4               	goto	u1275
  2216  02AC                     l1551:
  2217  02AC  3001               	movlw	1
  2218  02AD  02AE               	subwf	___aldiv@counter,f
  2219  02AE  1D03               	btfss	3,2
  2220  02AF  2AB1               	goto	u1281
  2221  02B0  2AB2               	goto	u1280
  2222  02B1                     u1281:
  2223  02B1  2A79               	goto	l1541
  2224  02B2                     u1280:
  2225  02B2                     l1553:
  2226  02B2  082F               	movf	___aldiv@sign,w
  2227  02B3  1903               	btfsc	3,2
  2228  02B4  2AB6               	goto	u1291
  2229  02B5  2AB7               	goto	u1290
  2230  02B6                     u1291:
  2231  02B6  2AC2               	goto	l1557
  2232  02B7                     u1290:
  2233  02B7                     l1555:
  2234  02B7  09B0               	comf	___aldiv@quotient,f
  2235  02B8  09B1               	comf	___aldiv@quotient+1,f
  2236  02B9  09B2               	comf	___aldiv@quotient+2,f
  2237  02BA  09B3               	comf	___aldiv@quotient+3,f
  2238  02BB  0AB0               	incf	___aldiv@quotient,f
  2239  02BC  1903               	skipnz
  2240  02BD  0AB1               	incf	___aldiv@quotient+1,f
  2241  02BE  1903               	skipnz
  2242  02BF  0AB2               	incf	___aldiv@quotient+2,f
  2243  02C0  1903               	skipnz
  2244  02C1  0AB3               	incf	___aldiv@quotient+3,f
  2245  02C2                     l1557:
  2246  02C2  0833               	movf	___aldiv@quotient+3,w
  2247  02C3  00A8               	movwf	?___aldiv+3
  2248  02C4  0832               	movf	___aldiv@quotient+2,w
  2249  02C5  00A7               	movwf	?___aldiv+2
  2250  02C6  0831               	movf	___aldiv@quotient+1,w
  2251  02C7  00A6               	movwf	?___aldiv+1
  2252  02C8  0830               	movf	___aldiv@quotient,w
  2253  02C9  00A5               	movwf	?___aldiv
  2254  02CA                     l308:
  2255  02CA  0008               	return
  2256  02CB                     __end_of___aldiv:
  2257                           
  2258                           	psect	text8
  2259  0494                     __ptext8:	
  2260 ;; *************** function _lcd_write_string *****************
  2261 ;; Defined at:
  2262 ;;		line 103 in file "lcd_4bit.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  str             2    8[COMMON] PTR unsigned char 
  2265 ;;		 -> STR_8(3), STR_7(11), main@chr_duration(20), STR_5(3), 
  2266 ;;		 -> STR_4(11), main@chr_distance(20), STR_2(15), STR_1(4), 
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  i               2    3[BANK0 ] int 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      void 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2278 ;;      Params:         2       0       0       0       0
  2279 ;;      Locals:         0       2       0       0       0
  2280 ;;      Temps:          0       3       0       0       0
  2281 ;;      Totals:         2       5       0       0       0
  2282 ;;Total ram usage:        7 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    3
  2285 ;; This function calls:
  2286 ;;		_lcd_write
  2287 ;; This function is called by:
  2288 ;;		_main
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           
  2293                           ;psect for function _lcd_write_string
  2294  0494                     _lcd_write_string:
  2295  0494                     l1639:	
  2296                           ;incstack = 0
  2297                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2298                           
  2299                           
  2300                           ;lcd_4bit.c: 105:     for (int i = 0; str[i] != '\0'; i++) {
  2301  0494  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0495  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0496  01A3               	clrf	lcd_write_string@i
  2304  0497  01A4               	clrf	lcd_write_string@i+1
  2305  0498  2CBD               	goto	l1645
  2306  0499                     l1641:
  2307                           
  2308                           ;lcd_4bit.c: 106:         lcd_write(str[i]);
  2309  0499  0823               	movf	lcd_write_string@i,w
  2310  049A  0778               	addwf	lcd_write_string@str,w
  2311  049B  00A1               	movwf	??_lcd_write_string+1
  2312  049C  0879               	movf	lcd_write_string@str+1,w
  2313  049D  00A0               	movwf	??_lcd_write_string
  2314  049E  1803               	skipnc
  2315  049F  0AA0               	incf	??_lcd_write_string,f
  2316  04A0  1FA3               	btfss	lcd_write_string@i,7
  2317  04A1  2CA3               	goto	u1430
  2318  04A2  03A0               	decf	??_lcd_write_string,f
  2319  04A3                     u1430:
  2320  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  2321  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  2322  04A5  0820               	movf	??_lcd_write_string,w
  2323  04A6  00A2               	movwf	??_lcd_write_string+2
  2324  04A7  0822               	movf	??_lcd_write_string+2,w
  2325  04A8  00FF               	movwf	btemp+1
  2326  04A9  0821               	movf	??_lcd_write_string+1,w
  2327  04AA  0084               	movwf	4
  2328  04AB  120A  118A  2400  120A  118A  	fcall	stringtab
  2329  04B0  120A  118A  255A  120A  118A  	fcall	_lcd_write
  2330  04B5                     l1643:
  2331                           
  2332                           ;lcd_4bit.c: 107:     }
  2333  04B5  3001               	movlw	1
  2334  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  2335  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  2336  04B8  07A3               	addwf	lcd_write_string@i,f
  2337  04B9  1803               	skipnc
  2338  04BA  0AA4               	incf	lcd_write_string@i+1,f
  2339  04BB  3000               	movlw	0
  2340  04BC  07A4               	addwf	lcd_write_string@i+1,f
  2341  04BD                     l1645:
  2342  04BD  0823               	movf	lcd_write_string@i,w
  2343  04BE  0778               	addwf	lcd_write_string@str,w
  2344  04BF  00A1               	movwf	??_lcd_write_string+1
  2345  04C0  0879               	movf	lcd_write_string@str+1,w
  2346  04C1  00A0               	movwf	??_lcd_write_string
  2347  04C2  1803               	skipnc
  2348  04C3  0AA0               	incf	??_lcd_write_string,f
  2349  04C4  1FA3               	btfss	lcd_write_string@i,7
  2350  04C5  2CC7               	goto	u1440
  2351  04C6  03A0               	decf	??_lcd_write_string,f
  2352  04C7                     u1440:
  2353  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2354  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  2355  04C9  0820               	movf	??_lcd_write_string,w
  2356  04CA  00A2               	movwf	??_lcd_write_string+2
  2357  04CB  0822               	movf	??_lcd_write_string+2,w
  2358  04CC  00FF               	movwf	btemp+1
  2359  04CD  0821               	movf	??_lcd_write_string+1,w
  2360  04CE  0084               	movwf	4
  2361  04CF  120A  118A  2400  120A  118A  	fcall	stringtab
  2362  04D4  3A00               	xorlw	0
  2363  04D5  1D03               	skipz
  2364  04D6  2CD8               	goto	u1451
  2365  04D7  2CD9               	goto	u1450
  2366  04D8                     u1451:
  2367  04D8  2C99               	goto	l1641
  2368  04D9                     u1450:
  2369  04D9                     l119:
  2370  04D9  0008               	return
  2371  04DA                     __end_of_lcd_write_string:
  2372                           
  2373                           	psect	text9
  2374  055A                     __ptext9:	
  2375 ;; *************** function _lcd_write *****************
  2376 ;; Defined at:
  2377 ;;		line 89 in file "lcd_4bit.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  byte            1    wreg     unsigned char 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  byte            1    7[COMMON] unsigned char 
  2382 ;;  high_nibble     1    6[COMMON] unsigned char 
  2383 ;;  low_nibble      1    5[COMMON] unsigned char 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		wreg, status,2, status,0, pclath, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2393 ;;      Params:         0       0       0       0       0
  2394 ;;      Locals:         3       0       0       0       0
  2395 ;;      Temps:          1       0       0       0       0
  2396 ;;      Totals:         4       0       0       0       0
  2397 ;;Total ram usage:        4 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    2
  2400 ;; This function calls:
  2401 ;;		_lcd_clock
  2402 ;;		_lcd_data
  2403 ;; This function is called by:
  2404 ;;		_lcd_write_string
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           
  2409                           ;psect for function _lcd_write
  2410  055A                     _lcd_write:
  2411                           
  2412                           ;incstack = 0
  2413                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  2414                           ;lcd_write@byte stored from wreg
  2415  055A  00F7               	movwf	lcd_write@byte
  2416  055B                     l1495:
  2417                           
  2418                           ;lcd_4bit.c: 91:     char low_nibble, high_nibble;;lcd_4bit.c: 93:     low_nibble = byte
      +                           & 0x0F;
  2419  055B  0877               	movf	lcd_write@byte,w
  2420  055C  390F               	andlw	15
  2421  055D  00F4               	movwf	??_lcd_write
  2422  055E  0874               	movf	??_lcd_write,w
  2423  055F  00F5               	movwf	lcd_write@low_nibble
  2424                           
  2425                           ;lcd_4bit.c: 94:     high_nibble = byte & 0xF0;
  2426  0560  0877               	movf	lcd_write@byte,w
  2427  0561  39F0               	andlw	240
  2428  0562  00F4               	movwf	??_lcd_write
  2429  0563  0874               	movf	??_lcd_write,w
  2430  0564  00F6               	movwf	lcd_write@high_nibble
  2431  0565                     l1497:
  2432                           
  2433                           ;lcd_4bit.c: 96:     RB2 = 1;
  2434  0565  1283               	bcf	3,5	;RP0=0, select bank0
  2435  0566  1303               	bcf	3,6	;RP1=0, select bank0
  2436  0567  1506               	bsf	6,2	;volatile
  2437  0568                     l1499:
  2438                           
  2439                           ;lcd_4bit.c: 97:     lcd_data(high_nibble >> 4);
  2440  0568  0876               	movf	lcd_write@high_nibble,w
  2441  0569  00F4               	movwf	??_lcd_write
  2442  056A  3004               	movlw	4
  2443  056B                     u1145:
  2444  056B  1003               	clrc
  2445  056C  0CF4               	rrf	??_lcd_write,f
  2446  056D  3EFF               	addlw	-1
  2447  056E  1D03               	skipz
  2448  056F  2D6B               	goto	u1145
  2449  0570  0874               	movf	??_lcd_write,w
  2450  0571  120A  118A  25AC  120A  118A  	fcall	_lcd_data
  2451  0576                     l1501:
  2452                           
  2453                           ;lcd_4bit.c: 98:     lcd_clock();
  2454  0576  120A  118A  25CE  120A  118A  	fcall	_lcd_clock
  2455  057B                     l1503:
  2456                           
  2457                           ;lcd_4bit.c: 99:     lcd_data(low_nibble);
  2458  057B  0875               	movf	lcd_write@low_nibble,w
  2459  057C  120A  118A  25AC  120A  118A  	fcall	_lcd_data
  2460  0581                     l1505:
  2461                           
  2462                           ;lcd_4bit.c: 100:     lcd_clock();
  2463  0581  120A  118A  25CE  120A  118A  	fcall	_lcd_clock
  2464  0586                     l113:
  2465  0586  0008               	return
  2466  0587                     __end_of_lcd_write:
  2467                           
  2468                           	psect	text10
  2469  02CB                     __ptext10:	
  2470 ;; *************** function _lcd_init *****************
  2471 ;; Defined at:
  2472 ;;		line 72 in file "lcd_4bit.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;		None
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;		None
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg, status,2, status,0, pclath, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2486 ;;      Params:         0       0       0       0       0
  2487 ;;      Locals:         0       0       0       0       0
  2488 ;;      Temps:          2       0       0       0       0
  2489 ;;      Totals:         2       0       0       0       0
  2490 ;;Total ram usage:        2 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:    3
  2493 ;; This function calls:
  2494 ;;		_lcd_cmd
  2495 ;; This function is called by:
  2496 ;;		_main
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           
  2501                           ;psect for function _lcd_init
  2502  02CB                     _lcd_init:
  2503  02CB                     l1611:	
  2504                           ;incstack = 0
  2505                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2506                           
  2507                           
  2508                           ;lcd_4bit.c: 73:     _delay((unsigned long)((20)*(20000000/4000.0)));
  2509  02CB  3082               	movlw	130
  2510  02CC  00F6               	movwf	??_lcd_init+1
  2511  02CD  30DD               	movlw	221
  2512  02CE  00F5               	movwf	??_lcd_init
  2513  02CF                     u1677:
  2514  02CF  0BF5               	decfsz	??_lcd_init,f
  2515  02D0  2ACF               	goto	u1677
  2516  02D1  0BF6               	decfsz	??_lcd_init+1,f
  2517  02D2  2ACF               	goto	u1677
  2518  02D3  2AD4               	nop2
  2519  02D4                     l1613:
  2520                           
  2521                           ;lcd_4bit.c: 74:     TRISB = TRISB & 0x03;
  2522  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  2523  02D5  1303               	bcf	3,6	;RP1=0, select bank1
  2524  02D6  0806               	movf	6,w	;volatile
  2525  02D7  3903               	andlw	3
  2526  02D8  0086               	movwf	6	;volatile
  2527  02D9                     l1615:
  2528                           
  2529                           ;lcd_4bit.c: 75:     lcd_cmd(0x03);
  2530  02D9  3003               	movlw	3
  2531  02DA  120A  118A  2625  120A  118A  	fcall	_lcd_cmd
  2532  02DF                     l1617:
  2533                           
  2534                           ;lcd_4bit.c: 76:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2535  02DF  3021               	movlw	33
  2536  02E0  00F6               	movwf	??_lcd_init+1
  2537  02E1  3076               	movlw	118
  2538  02E2  00F5               	movwf	??_lcd_init
  2539  02E3                     u1687:
  2540  02E3  0BF5               	decfsz	??_lcd_init,f
  2541  02E4  2AE3               	goto	u1687
  2542  02E5  0BF6               	decfsz	??_lcd_init+1,f
  2543  02E6  2AE3               	goto	u1687
  2544  02E7  0000               	nop
  2545  02E8                     l1619:
  2546                           
  2547                           ;lcd_4bit.c: 77:     lcd_cmd(0x03);
  2548  02E8  3003               	movlw	3
  2549  02E9  120A  118A  2625  120A  118A  	fcall	_lcd_cmd
  2550  02EE                     l1621:
  2551                           
  2552                           ;lcd_4bit.c: 78:     _delay((unsigned long)((200)*(20000000/4000000.0)));
  2553  02EE  30C7               	movlw	199
  2554  02EF  00F5               	movwf	??_lcd_init
  2555  02F0                     u1697:
  2556  02F0  2AF1               	nop2
  2557  02F1  0BF5               	decfsz	??_lcd_init,f
  2558  02F2  2AF0               	goto	u1697
  2559  02F3  2AF4               	nop2
  2560  02F4  2AF5               	nop2
  2561  02F5                     l1623:
  2562                           
  2563                           ;lcd_4bit.c: 79:     lcd_cmd(0x03);
  2564  02F5  3003               	movlw	3
  2565  02F6  120A  118A  2625  120A  118A  	fcall	_lcd_cmd
  2566  02FB                     l1625:
  2567                           
  2568                           ;lcd_4bit.c: 80:     lcd_cmd(0x02);
  2569  02FB  3002               	movlw	2
  2570  02FC  120A  118A  2625  120A  118A  	fcall	_lcd_cmd
  2571  0301                     l1627:
  2572                           
  2573                           ;lcd_4bit.c: 81:     lcd_cmd(0x02);
  2574  0301  3002               	movlw	2
  2575  0302  120A  118A  2625  120A  118A  	fcall	_lcd_cmd
  2576  0307                     l1629:
  2577                           
  2578                           ;lcd_4bit.c: 82:     lcd_cmd(0x08);
  2579  0307  3008               	movlw	8
  2580  0308  120A  118A  2625  120A  118A  	fcall	_lcd_cmd
  2581  030D                     l1631:
  2582                           
  2583                           ;lcd_4bit.c: 83:     lcd_cmd(0x00);
  2584  030D  3000               	movlw	0
  2585  030E  120A  118A  2625  120A  118A  	fcall	_lcd_cmd
  2586  0313                     l1633:
  2587                           
  2588                           ;lcd_4bit.c: 84:     lcd_cmd(0x0C);
  2589  0313  300C               	movlw	12
  2590  0314  120A  118A  2625  120A  118A  	fcall	_lcd_cmd
  2591  0319                     l1635:
  2592                           
  2593                           ;lcd_4bit.c: 85:     lcd_cmd(0x00);
  2594  0319  3000               	movlw	0
  2595  031A  120A  118A  2625  120A  118A  	fcall	_lcd_cmd
  2596  031F                     l1637:
  2597                           
  2598                           ;lcd_4bit.c: 86:     lcd_cmd(0x06);
  2599  031F  3006               	movlw	6
  2600  0320  120A  118A  2625  120A  118A  	fcall	_lcd_cmd
  2601  0325                     l110:
  2602  0325  0008               	return
  2603  0326                     __end_of_lcd_init:
  2604                           
  2605                           	psect	text11
  2606  0326                     __ptext11:	
  2607 ;; *************** function _lcd_goto_xy *****************
  2608 ;; Defined at:
  2609 ;;		line 54 in file "lcd_4bit.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  r               1    wreg     unsigned char 
  2612 ;;  c               1    5[COMMON] unsigned char 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  r               1    0[BANK0 ] unsigned char 
  2615 ;;  temp            1    3[BANK0 ] unsigned char 
  2616 ;;  high4           1    2[BANK0 ] unsigned char 
  2617 ;;  low4            1    1[BANK0 ] unsigned char 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0, pclath, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2627 ;;      Params:         1       0       0       0       0
  2628 ;;      Locals:         0       4       0       0       0
  2629 ;;      Temps:          2       0       0       0       0
  2630 ;;      Totals:         3       4       0       0       0
  2631 ;;Total ram usage:        7 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:    3
  2634 ;; This function calls:
  2635 ;;		_lcd_cmd
  2636 ;; This function is called by:
  2637 ;;		_main
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           
  2642                           ;psect for function _lcd_goto_xy
  2643  0326                     _lcd_goto_xy:
  2644                           
  2645                           ;incstack = 0
  2646                           ; Regs used in _lcd_goto_xy: [wreg+status,2+status,0+pclath+cstack]
  2647                           ;lcd_goto_xy@r stored from wreg
  2648  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2649  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2650  0328  00A0               	movwf	lcd_goto_xy@r
  2651  0329                     l1647:
  2652                           
  2653                           ;lcd_4bit.c: 55:     unsigned char temp, low4, high4;;lcd_4bit.c: 56:     if (r == 1) {
  2654  0329  0320               	decf	lcd_goto_xy@r,w
  2655  032A  1D03               	btfss	3,2
  2656  032B  2B2D               	goto	u1461
  2657  032C  2B2E               	goto	u1460
  2658  032D                     u1461:
  2659  032D  2B52               	goto	l1657
  2660  032E                     u1460:
  2661  032E                     l1649:
  2662                           
  2663                           ;lcd_4bit.c: 57:         temp = 0x80 + c - 1;
  2664  032E  0875               	movf	lcd_goto_xy@c,w
  2665  032F  3E7F               	addlw	127
  2666  0330  00F6               	movwf	??_lcd_goto_xy
  2667  0331  0876               	movf	??_lcd_goto_xy,w
  2668  0332  00A3               	movwf	lcd_goto_xy@temp
  2669                           
  2670                           ;lcd_4bit.c: 58:         high4 = temp >> 4;
  2671  0333  0823               	movf	lcd_goto_xy@temp,w
  2672  0334  00F6               	movwf	??_lcd_goto_xy
  2673  0335  3004               	movlw	4
  2674  0336                     u1475:
  2675  0336  1003               	clrc
  2676  0337  0CF6               	rrf	??_lcd_goto_xy,f
  2677  0338  3EFF               	addlw	-1
  2678  0339  1D03               	skipz
  2679  033A  2B36               	goto	u1475
  2680  033B  0876               	movf	??_lcd_goto_xy,w
  2681  033C  00F7               	movwf	??_lcd_goto_xy+1
  2682  033D  0877               	movf	??_lcd_goto_xy+1,w
  2683  033E  00A2               	movwf	lcd_goto_xy@high4
  2684  033F                     l1651:
  2685                           
  2686                           ;lcd_4bit.c: 59:         low4 = temp & 0x0F;
  2687  033F  0823               	movf	lcd_goto_xy@temp,w
  2688  0340  390F               	andlw	15
  2689  0341  00F6               	movwf	??_lcd_goto_xy
  2690  0342  0876               	movf	??_lcd_goto_xy,w
  2691  0343  00A1               	movwf	lcd_goto_xy@low4
  2692  0344                     l1653:
  2693                           
  2694                           ;lcd_4bit.c: 60:         lcd_cmd(high4);
  2695  0344  0822               	movf	lcd_goto_xy@high4,w
  2696  0345  120A  118A  2625  120A  118A  	fcall	_lcd_cmd
  2697  034A                     l1655:
  2698                           
  2699                           ;lcd_4bit.c: 61:         lcd_cmd(low4);
  2700  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2701  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2702  034C  0821               	movf	lcd_goto_xy@low4,w
  2703  034D  120A  118A  2625  120A  118A  	fcall	_lcd_cmd
  2704  0352                     l1657:
  2705                           
  2706                           ;lcd_4bit.c: 63:     if (r == 2) {
  2707  0352  3002               	movlw	2
  2708  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2710  0355  0620               	xorwf	lcd_goto_xy@r,w
  2711  0356  1D03               	btfss	3,2
  2712  0357  2B59               	goto	u1481
  2713  0358  2B5A               	goto	u1480
  2714  0359                     u1481:
  2715  0359  2B7E               	goto	l107
  2716  035A                     u1480:
  2717  035A                     l1659:
  2718                           
  2719                           ;lcd_4bit.c: 64:         temp = 0xC0 + c - 1;
  2720  035A  0875               	movf	lcd_goto_xy@c,w
  2721  035B  3EBF               	addlw	191
  2722  035C  00F6               	movwf	??_lcd_goto_xy
  2723  035D  0876               	movf	??_lcd_goto_xy,w
  2724  035E  00A3               	movwf	lcd_goto_xy@temp
  2725                           
  2726                           ;lcd_4bit.c: 65:         high4 = temp >> 4;
  2727  035F  0823               	movf	lcd_goto_xy@temp,w
  2728  0360  00F6               	movwf	??_lcd_goto_xy
  2729  0361  3004               	movlw	4
  2730  0362                     u1495:
  2731  0362  1003               	clrc
  2732  0363  0CF6               	rrf	??_lcd_goto_xy,f
  2733  0364  3EFF               	addlw	-1
  2734  0365  1D03               	skipz
  2735  0366  2B62               	goto	u1495
  2736  0367  0876               	movf	??_lcd_goto_xy,w
  2737  0368  00F7               	movwf	??_lcd_goto_xy+1
  2738  0369  0877               	movf	??_lcd_goto_xy+1,w
  2739  036A  00A2               	movwf	lcd_goto_xy@high4
  2740  036B                     l1661:
  2741                           
  2742                           ;lcd_4bit.c: 66:         low4 = temp & 0x0F;
  2743  036B  0823               	movf	lcd_goto_xy@temp,w
  2744  036C  390F               	andlw	15
  2745  036D  00F6               	movwf	??_lcd_goto_xy
  2746  036E  0876               	movf	??_lcd_goto_xy,w
  2747  036F  00A1               	movwf	lcd_goto_xy@low4
  2748  0370                     l1663:
  2749                           
  2750                           ;lcd_4bit.c: 67:         lcd_cmd(high4);
  2751  0370  0822               	movf	lcd_goto_xy@high4,w
  2752  0371  120A  118A  2625  120A  118A  	fcall	_lcd_cmd
  2753  0376                     l1665:
  2754                           
  2755                           ;lcd_4bit.c: 68:         lcd_cmd(low4);
  2756  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2757  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2758  0378  0821               	movf	lcd_goto_xy@low4,w
  2759  0379  120A  118A  2625  120A  118A  	fcall	_lcd_cmd
  2760  037E                     l107:
  2761  037E  0008               	return
  2762  037F                     __end_of_lcd_goto_xy:
  2763                           
  2764                           	psect	text12
  2765  05FF                     __ptext12:	
  2766 ;; *************** function _lcd_clear *****************
  2767 ;; Defined at:
  2768 ;;		line 48 in file "lcd_4bit.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      void 
  2775 ;; Registers used:
  2776 ;;		wreg, status,2, status,0, pclath, cstack
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2782 ;;      Params:         0       0       0       0       0
  2783 ;;      Locals:         0       0       0       0       0
  2784 ;;      Temps:          2       0       0       0       0
  2785 ;;      Totals:         2       0       0       0       0
  2786 ;;Total ram usage:        2 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    3
  2789 ;; This function calls:
  2790 ;;		_lcd_cmd
  2791 ;; This function is called by:
  2792 ;;		_main
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           
  2797                           ;psect for function _lcd_clear
  2798  05FF                     _lcd_clear:
  2799  05FF                     l1667:	
  2800                           ;incstack = 0
  2801                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2802                           
  2803                           
  2804                           ;lcd_4bit.c: 49:     lcd_cmd(0);
  2805  05FF  3000               	movlw	0
  2806  0600  120A  118A  2625  120A  118A  	fcall	_lcd_cmd
  2807                           
  2808                           ;lcd_4bit.c: 50:     lcd_cmd(1);
  2809  0605  3001               	movlw	1
  2810  0606  120A  118A  2625  120A  118A  	fcall	_lcd_cmd
  2811  060B                     l1669:
  2812                           
  2813                           ;lcd_4bit.c: 51:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2814  060B  300D               	movlw	13
  2815  060C  00F6               	movwf	??_lcd_clear+1
  2816  060D  30FB               	movlw	251
  2817  060E  00F5               	movwf	??_lcd_clear
  2818  060F                     u1707:
  2819  060F  0BF5               	decfsz	??_lcd_clear,f
  2820  0610  2E0F               	goto	u1707
  2821  0611  0BF6               	decfsz	??_lcd_clear+1,f
  2822  0612  2E0F               	goto	u1707
  2823  0613  2E14               	nop2
  2824  0614                     l102:
  2825  0614  0008               	return
  2826  0615                     __end_of_lcd_clear:
  2827                           
  2828                           	psect	text13
  2829  0625                     __ptext13:	
  2830 ;; *************** function _lcd_cmd *****************
  2831 ;; Defined at:
  2832 ;;		line 40 in file "lcd_4bit.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  cmd             1    wreg     unsigned char 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  cmd             1    4[COMMON] unsigned char 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0, pclath, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       0       0       0       0
  2847 ;;      Locals:         1       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0
  2849 ;;      Totals:         1       0       0       0       0
  2850 ;;Total ram usage:        1 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    2
  2853 ;; This function calls:
  2854 ;;		_lcd_clock
  2855 ;;		_lcd_data
  2856 ;; This function is called by:
  2857 ;;		_lcd_clear
  2858 ;;		_lcd_goto_xy
  2859 ;;		_lcd_init
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           
  2864                           ;psect for function _lcd_cmd
  2865  0625                     _lcd_cmd:
  2866                           
  2867                           ;incstack = 0
  2868                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2869                           ;lcd_cmd@cmd stored from wreg
  2870  0625  00F4               	movwf	lcd_cmd@cmd
  2871  0626                     l1491:
  2872                           
  2873                           ;lcd_4bit.c: 42:     RB2 = 0;
  2874  0626  1283               	bcf	3,5	;RP0=0, select bank0
  2875  0627  1303               	bcf	3,6	;RP1=0, select bank0
  2876  0628  1106               	bcf	6,2	;volatile
  2877  0629                     l1493:
  2878                           
  2879                           ;lcd_4bit.c: 43:     lcd_data(cmd);
  2880  0629  0874               	movf	lcd_cmd@cmd,w
  2881  062A  120A  118A  25AC  120A  118A  	fcall	_lcd_data
  2882                           
  2883                           ;lcd_4bit.c: 44:     lcd_clock();
  2884  062F  120A  118A  25CE  120A  118A  	fcall	_lcd_clock
  2885  0634                     l99:
  2886  0634  0008               	return
  2887  0635                     __end_of_lcd_cmd:
  2888                           
  2889                           	psect	text14
  2890  05AC                     __ptext14:	
  2891 ;; *************** function _lcd_data *****************
  2892 ;; Defined at:
  2893 ;;		line 17 in file "lcd_4bit.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  data            1    wreg     unsigned char 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  data            1    2[COMMON] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		wreg
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2907 ;;      Params:         0       0       0       0       0
  2908 ;;      Locals:         1       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0
  2910 ;;      Totals:         1       0       0       0       0
  2911 ;;Total ram usage:        1 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    1
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_lcd_cmd
  2918 ;;		_lcd_write
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           
  2923                           ;psect for function _lcd_data
  2924  05AC                     _lcd_data:
  2925                           
  2926                           ;incstack = 0
  2927                           ; Regs used in _lcd_data: [wreg]
  2928                           ;lcd_data@data stored from wreg
  2929  05AC  00F2               	movwf	lcd_data@data
  2930  05AD                     l1481:
  2931                           
  2932                           ;lcd_4bit.c: 19:     if (data & 1)
  2933  05AD  1C72               	btfss	lcd_data@data,0
  2934  05AE  2DB0               	goto	u1101
  2935  05AF  2DB1               	goto	u1100
  2936  05B0                     u1101:
  2937  05B0  2DB5               	goto	l88
  2938  05B1                     u1100:
  2939  05B1                     l1483:
  2940                           
  2941                           ;lcd_4bit.c: 20:         RB4 = 1;
  2942  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2943  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2944  05B3  1606               	bsf	6,4	;volatile
  2945  05B4  2DB8               	goto	l89
  2946  05B5                     l88:	
  2947                           ;lcd_4bit.c: 21:     else
  2948                           
  2949                           
  2950                           ;lcd_4bit.c: 22:         RB4 = 0;
  2951  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  2952  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  2953  05B7  1206               	bcf	6,4	;volatile
  2954  05B8                     l89:
  2955                           
  2956                           ;lcd_4bit.c: 24:     if (data & 2)
  2957  05B8  1CF2               	btfss	lcd_data@data,1
  2958  05B9  2DBB               	goto	u1111
  2959  05BA  2DBC               	goto	u1110
  2960  05BB                     u1111:
  2961  05BB  2DBE               	goto	l90
  2962  05BC                     u1110:
  2963  05BC                     l1485:
  2964                           
  2965                           ;lcd_4bit.c: 25:         RB5 = 1;
  2966  05BC  1686               	bsf	6,5	;volatile
  2967  05BD  2DBF               	goto	l91
  2968  05BE                     l90:	
  2969                           ;lcd_4bit.c: 26:     else
  2970                           
  2971                           
  2972                           ;lcd_4bit.c: 27:         RB5 = 0;
  2973  05BE  1286               	bcf	6,5	;volatile
  2974  05BF                     l91:
  2975                           
  2976                           ;lcd_4bit.c: 29:     if (data & 4)
  2977  05BF  1D72               	btfss	lcd_data@data,2
  2978  05C0  2DC2               	goto	u1121
  2979  05C1  2DC3               	goto	u1120
  2980  05C2                     u1121:
  2981  05C2  2DC5               	goto	l92
  2982  05C3                     u1120:
  2983  05C3                     l1487:
  2984                           
  2985                           ;lcd_4bit.c: 30:         RB6 = 1;
  2986  05C3  1706               	bsf	6,6	;volatile
  2987  05C4  2DC6               	goto	l93
  2988  05C5                     l92:	
  2989                           ;lcd_4bit.c: 31:     else
  2990                           
  2991                           
  2992                           ;lcd_4bit.c: 32:         RB6 = 0;
  2993  05C5  1306               	bcf	6,6	;volatile
  2994  05C6                     l93:
  2995                           
  2996                           ;lcd_4bit.c: 34:     if (data & 8)
  2997  05C6  1DF2               	btfss	lcd_data@data,3
  2998  05C7  2DC9               	goto	u1131
  2999  05C8  2DCA               	goto	u1130
  3000  05C9                     u1131:
  3001  05C9  2DCC               	goto	l94
  3002  05CA                     u1130:
  3003  05CA                     l1489:
  3004                           
  3005                           ;lcd_4bit.c: 35:         RB7 = 1;
  3006  05CA  1786               	bsf	6,7	;volatile
  3007  05CB  2DCD               	goto	l96
  3008  05CC                     l94:	
  3009                           ;lcd_4bit.c: 36:     else
  3010                           
  3011                           
  3012                           ;lcd_4bit.c: 37:         RB7 = 0;
  3013  05CC  1386               	bcf	6,7	;volatile
  3014  05CD                     l96:
  3015  05CD  0008               	return
  3016  05CE                     __end_of_lcd_data:
  3017                           
  3018                           	psect	text15
  3019  05CE                     __ptext15:	
  3020 ;; *************** function _lcd_clock *****************
  3021 ;; Defined at:
  3022 ;;		line 9 in file "lcd_4bit.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;		None
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      void 
  3029 ;; Registers used:
  3030 ;;		wreg
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3036 ;;      Params:         0       0       0       0       0
  3037 ;;      Locals:         0       0       0       0       0
  3038 ;;      Temps:          2       0       0       0       0
  3039 ;;      Totals:         2       0       0       0       0
  3040 ;;Total ram usage:        2 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    1
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_lcd_cmd
  3047 ;;		_lcd_write
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           
  3052                           ;psect for function _lcd_clock
  3053  05CE                     _lcd_clock:
  3054  05CE                     l1475:	
  3055                           ;incstack = 0
  3056                           ; Regs used in _lcd_clock: [wreg]
  3057                           
  3058                           
  3059                           ;lcd_4bit.c: 11:     RB3 = 1;
  3060  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3061  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3062  05D0  1586               	bsf	6,3	;volatile
  3063  05D1                     l1477:
  3064                           
  3065                           ;lcd_4bit.c: 12:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  3066  05D1  3004               	movlw	4
  3067  05D2  00F3               	movwf	??_lcd_clock+1
  3068  05D3  303D               	movlw	61
  3069  05D4  00F2               	movwf	??_lcd_clock
  3070  05D5                     u1717:
  3071  05D5  0BF2               	decfsz	??_lcd_clock,f
  3072  05D6  2DD5               	goto	u1717
  3073  05D7  0BF3               	decfsz	??_lcd_clock+1,f
  3074  05D8  2DD5               	goto	u1717
  3075  05D9  2DDA               	nop2
  3076  05DA                     l1479:
  3077                           
  3078                           ;lcd_4bit.c: 13:     RB3 = 0;
  3079  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3080  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  3081  05DC  1186               	bcf	6,3	;volatile
  3082                           
  3083                           ;lcd_4bit.c: 14:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  3084  05DD  3004               	movlw	4
  3085  05DE  00F3               	movwf	??_lcd_clock+1
  3086  05DF  303D               	movlw	61
  3087  05E0  00F2               	movwf	??_lcd_clock
  3088  05E1                     u1727:
  3089  05E1  0BF2               	decfsz	??_lcd_clock,f
  3090  05E2  2DE1               	goto	u1727
  3091  05E3  0BF3               	decfsz	??_lcd_clock+1,f
  3092  05E4  2DE1               	goto	u1727
  3093  05E5  2DE6               	nop2
  3094  05E6                     l85:
  3095  05E6  0008               	return
  3096  05E7                     __end_of_lcd_clock:
  3097                           
  3098                           	psect	text16
  3099  0587                     __ptext16:	
  3100 ;; *************** function ___wmul *****************
  3101 ;; Defined at:
  3102 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;  multiplier      2    2[COMMON] unsigned int 
  3105 ;;  multiplicand    2    4[COMMON] unsigned int 
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;  product         2    6[COMMON] unsigned int 
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  2    2[COMMON] unsigned int 
  3110 ;; Registers used:
  3111 ;;		wreg, status,2, status,0
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3117 ;;      Params:         4       0       0       0       0
  3118 ;;      Locals:         2       0       0       0       0
  3119 ;;      Temps:          0       0       0       0       0
  3120 ;;      Totals:         6       0       0       0       0
  3121 ;;Total ram usage:        6 bytes
  3122 ;; Hardware stack levels used:    1
  3123 ;; Hardware stack levels required when called:    1
  3124 ;; This function calls:
  3125 ;;		Nothing
  3126 ;; This function is called by:
  3127 ;;		_main
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131                           
  3132                           ;psect for function ___wmul
  3133  0587                     ___wmul:
  3134  0587                     l1737:	
  3135                           ;incstack = 0
  3136                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3137                           
  3138  0587  01F6               	clrf	___wmul@product
  3139  0588  01F7               	clrf	___wmul@product+1
  3140  0589                     l1739:
  3141  0589  1C72               	btfss	___wmul@multiplier,0
  3142  058A  2D8C               	goto	u1581
  3143  058B  2D8D               	goto	u1580
  3144  058C                     u1581:
  3145  058C  2D93               	goto	l233
  3146  058D                     u1580:
  3147  058D                     l1741:
  3148  058D  0874               	movf	___wmul@multiplicand,w
  3149  058E  07F6               	addwf	___wmul@product,f
  3150  058F  1803               	skipnc
  3151  0590  0AF7               	incf	___wmul@product+1,f
  3152  0591  0875               	movf	___wmul@multiplicand+1,w
  3153  0592  07F7               	addwf	___wmul@product+1,f
  3154  0593                     l233:
  3155  0593  3001               	movlw	1
  3156  0594                     u1595:
  3157  0594  1003               	clrc
  3158  0595  0DF4               	rlf	___wmul@multiplicand,f
  3159  0596  0DF5               	rlf	___wmul@multiplicand+1,f
  3160  0597  3EFF               	addlw	-1
  3161  0598  1D03               	skipz
  3162  0599  2D94               	goto	u1595
  3163  059A                     l1743:
  3164  059A  3001               	movlw	1
  3165  059B                     u1605:
  3166  059B  1003               	clrc
  3167  059C  0CF3               	rrf	___wmul@multiplier+1,f
  3168  059D  0CF2               	rrf	___wmul@multiplier,f
  3169  059E  3EFF               	addlw	-1
  3170  059F  1D03               	skipz
  3171  05A0  2D9B               	goto	u1605
  3172  05A1                     l1745:
  3173  05A1  0872               	movf	___wmul@multiplier,w
  3174  05A2  0473               	iorwf	___wmul@multiplier+1,w
  3175  05A3  1D03               	btfss	3,2
  3176  05A4  2DA6               	goto	u1611
  3177  05A5  2DA7               	goto	u1610
  3178  05A6                     u1611:
  3179  05A6  2D89               	goto	l1739
  3180  05A7                     u1610:
  3181  05A7                     l1747:
  3182  05A7  0877               	movf	___wmul@product+1,w
  3183  05A8  00F3               	movwf	?___wmul+1
  3184  05A9  0876               	movf	___wmul@product,w
  3185  05AA  00F2               	movwf	?___wmul
  3186  05AB                     l235:
  3187  05AB  0008               	return
  3188  05AC                     __end_of___wmul:
  3189                           
  3190                           	psect	text17
  3191  05E7                     __ptext17:	
  3192 ;; *************** function _ISR *****************
  3193 ;; Defined at:
  3194 ;;		line 85 in file "main.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;		None
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;		None
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      void 
  3201 ;; Registers used:
  3202 ;;		wreg
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3208 ;;      Params:         0       0       0       0       0
  3209 ;;      Locals:         0       0       0       0       0
  3210 ;;      Temps:          2       0       0       0       0
  3211 ;;      Totals:         2       0       0       0       0
  3212 ;;Total ram usage:        2 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		Interrupt level 1
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           
  3222                           ;psect for function _ISR
  3223  05E7                     _ISR:
  3224  05E7                     i1l1083:
  3225                           
  3226                           ;main.c: 87:     if(PIR1bits.TMR1IF) {
  3227  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  3228  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  3229  05E9  1C0C               	btfss	12,0	;volatile
  3230  05EA  2DEC               	goto	u55_21
  3231  05EB  2DED               	goto	u55_20
  3232  05EC                     u55_21:
  3233  05EC  2DF8               	goto	i1l60
  3234  05ED                     u55_20:
  3235  05ED                     i1l1085:
  3236                           
  3237                           ;main.c: 88:         overflow++;
  3238  05ED  3001               	movlw	1
  3239  05EE  07FA               	addwf	_overflow,f
  3240  05EF  1803               	skipnc
  3241  05F0  0AFB               	incf	_overflow+1,f
  3242  05F1  3000               	movlw	0
  3243  05F2  07FB               	addwf	_overflow+1,f
  3244  05F3                     i1l1087:
  3245                           
  3246                           ;main.c: 89:         TMR1 = 60536;
  3247  05F3  30EC               	movlw	236
  3248  05F4  008F               	movwf	15	;volatile
  3249  05F5  3078               	movlw	120
  3250  05F6  008E               	movwf	14	;volatile
  3251  05F7                     i1l1089:
  3252                           
  3253                           ;main.c: 90:         PIR1bits.TMR1IF = 0;
  3254  05F7  100C               	bcf	12,0	;volatile
  3255  05F8                     i1l60:
  3256  05F8  0871               	movf	??_ISR+1,w
  3257  05F9  008A               	movwf	10
  3258  05FA  0E70               	swapf	??_ISR,w
  3259  05FB  0083               	movwf	3
  3260  05FC  0EFE               	swapf	btemp,f
  3261  05FD  0E7E               	swapf	btemp,w
  3262  05FE  0009               	retfie
  3263  05FF                     __end_of_ISR:
  3264  007E                     btemp	set	126	;btemp
  3265  007E                     wtemp0	set	126
  3266                           
  3267                           	psect	intentry
  3268  0004                     __pintentry:	
  3269                           ;incstack = 0
  3270                           ; Regs used in _ISR: [wreg]
  3271                           
  3272  0004                     interrupt_function:
  3273  007E                     saved_w	set	btemp
  3274  0004  00FE               	movwf	btemp
  3275  0005  0E03               	swapf	3,w
  3276  0006  00F0               	movwf	??_ISR
  3277  0007  080A               	movf	10,w
  3278  0008  00F1               	movwf	??_ISR+1
  3279  0009  120A  118A  2DE7   	ljmp	_ISR
  3280                           
  3281                           	psect	config
  3282                           
  3283                           ;Config register CONFIG @ 0x2007
  3284                           ;	Oscillator Selection bits
  3285                           ;	FOSC = HS, HS oscillator
  3286                           ;	Watchdog Timer Enable bit
  3287                           ;	WDTE = OFF, WDT disabled
  3288                           ;	Power-up Timer Enable bit
  3289                           ;	PWRTE = OFF, PWRT disabled
  3290                           ;	Brown-out Reset Enable bit
  3291                           ;	BOREN = OFF, BOR disabled
  3292                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3293                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3294                           ;	Data EEPROM Memory Code Protection bit
  3295                           ;	CPD = OFF, Data EEPROM code protection off
  3296                           ;	Flash Program Memory Write Enable bits
  3297                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3298                           ;	In-Circuit Debugger Mode bit
  3299                           ;	DEBUG = 0x1, unprogrammed default
  3300                           ;	Flash Program Memory Code Protection bit
  3301                           ;	CP = OFF, Code protection off
  3302  2007                     	org	8199
  3303  2007  3F3A               	dw	16186

Data Sizes:
    Strings     50
    Constant    10
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     37      37
    BANK1            80     44      44
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@chr_duration(BANK1[20]), main@chr_distance(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_write_string@str	PTR unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[3]), STR_7(CODE[11]), main@chr_duration(BANK1[20]), STR_5(CODE[3]), 
		 -> STR_4(CODE[11]), main@chr_distance(BANK1[20]), STR_2(CODE[15]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_lcd_write_string
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _map->___lmul
    ___aldiv->___lmul
    _lcd_write_string->_lcd_write
    _lcd_write->_lcd_clock
    _lcd_init->_lcd_cmd
    _lcd_goto_xy->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_cmd->_lcd_clock

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_map
    _sprintf->___lwmod
    _map->___aldiv
    ___aldiv->___lmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                47    47      0    6248
                                             34 BANK0      3     3      0
                                              0 BANK1     44    44      0
                             ___wmul
                          _lcd_clear
                        _lcd_goto_xy
                           _lcd_init
                   _lcd_write_string
                                _map
                            _sprintf
                        _timer1_init
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1781
                                              6 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _map                                                 14     4     10    1608
                                             20 BANK0     14     4     10
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     316
                                              2 COMMON     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              5 BANK0     15     7      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_write_string                                     7     5      2    1104
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            4     4      0     254
                                              4 COMMON     4     4      0
                          _lcd_clock
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     155
                                              5 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_goto_xy                                          7     6      1     815
                                              5 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            2     2      0     155
                                              5 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0     155
                                              4 COMMON     1     1      0
                          _lcd_clock
                           _lcd_data
 ---------------------------------------------------------------------------------
 (3) _lcd_data                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_clock                                            2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     316
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _lcd_clear
     _lcd_cmd
       _lcd_clock
       _lcd_data
   _lcd_goto_xy
     _lcd_cmd
       _lcd_clock
       _lcd_data
   _lcd_init
     _lcd_cmd
       _lcd_clock
       _lcd_data
   _lcd_write_string
     _lcd_write
       _lcd_clock
       _lcd_data
   _map
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _timer1_init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     25      25       5       46.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2C      2C       7       55.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5D      12        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Oct 22 13:56:29 2020

                        pc 0002               lcd_data@data 0072                         l51 007E  
                       l63 0624                         l49 007A                         l90 05BE  
                       l66 03D5                         l91 05BF                         l92 05C5  
                       l85 05E6                         l93 05C6                         l94 05CC  
                       l96 05CD                         l88 05B5                         l89 05B8  
                       l99 0634                         fsr 0004        ___wmul@multiplicand 0074  
                      l102 0614                        l110 0325                        l113 0586  
                      l107 037E                        l119 04D9                        l233 0593  
                      l235 05AB                        l308 02CA                        l229 022D  
                      l247 0493                        l505 051D                        l515 0559  
                      l298 0242                        _RC0 0038                        _RB2 0032  
                      _RC1 0039                        _RB3 0033                        _RB4 0034  
                      _RB5 0035                        _RB6 0036                        _RB7 0037  
                      _ISR 05E7                        _map 037F                        fsr0 0004  
                      indf 0000                       ?_ISR 0070                       l1501 0576  
                     l1503 057B                       l1511 045A                       l1505 0581  
                     l1521 022E                       l1513 0471                       l1601 0548  
                     l1611 02CB                       l1531 0255                       l1523 0231  
                     l1515 047A                       l1507 044C                       l1603 054F  
                     l1621 02EE                       l1613 02D4                       l1541 0279  
                     l1533 025D                       l1525 0235                       l1517 048B  
                     l1509 0456                       l1605 0555                       l1631 030D  
                     l1623 02F5                       l1615 02D9                       l1551 02AC  
                     l1543 0282                       l1535 0265                       l1527 0246  
                     l1711 01BD                       l1481 05AD                       l1633 0313  
                     l1625 02FB                       l1617 02DF                       l1641 0499  
                     l1545 0294                       l1537 0268                       l1553 02B2  
                     l1529 0251                       l1561 04DA                       l1721 0203  
                     l1713 01C3                       l1705 0197                       l1609 0615  
                     l1801 00E2                       l1475 05CE                       l1483 05B1  
                     l1491 0626                       l1651 033F                       l1635 0319  
                     l1627 0301                       l1619 02E8                       l1643 04B5  
                     l1555 02B7                       l1547 02A2                       l1539 0275  
                     l1571 04F0                       l1563 04DC                       l1723 020A  
                     l1715 01CA                       l1811 011D                       l1803 00EA  
                     l1741 058D                       l1477 05D1                       l1485 05BC  
                     l1493 0629                       l1661 036B                       l1653 0344  
                     l1637 031F                       l1629 0307                       l1645 04BD  
                     l1557 02C2                       l1549 02A3                       l1581 0513  
                     l1573 04F4                       l1565 04E2                       l1725 020E  
                     l1717 01CE                       l1709 01B3                       l1813 0125  
                     l1805 00F3                       l1743 059A                       l1479 05DA  
                     l1487 05C3                       l1663 0370                       l1655 034A  
                     l1647 0329                       l1495 055B                       l1639 0494  
                     l1671 037F                       l1575 0505                       l1567 04E5  
                     l1583 0519                       l1591 0529                       l1719 01D3  
                     l1727 0217                       l1815 012E                       l1807 00FC  
                     l1751 0015                       l1745 05A1                       l1737 0587  
                     l1489 05CA                       l1665 0376                       l1649 032E  
                     l1657 0352                       l1497 0565                       l1577 050B  
                     l1569 04EC                       l1593 0530                       l1729 0229  
                     l1681 0159                       l1817 0137                       l1809 0105  
                     l1761 0027                       l1753 001B                       l1747 05A7  
                     l1739 0589                       l1667 05FF                       l1659 035A  
                     l1499 0568                       l1579 050C                       l1595 0534  
                     l1587 051E                       l1691 0184                       l1683 015E  
                     l1675 0147                       l1771 0054                       l1763 002C  
                     l1755 001E                       l1669 060B                       l1597 0538  
                     l1589 0526                       l1693 0188                       l1677 014C  
                     l1781 0075                       l1773 0059                       l1765 0035  
                     l1757 001F                       l1599 0542                       l1695 018C  
                     l1839 0171                       l1687 015F                       l1679 0152  
                     l1791 008D                       l1783 0079                       l1775 0068  
                     l1767 003D                       l1759 0022                       l1697 0190  
                     l1689 017C                       l1793 008E                       l1785 007F  
                     l1777 006B                       l1769 0046                       l1699 0195  
                     l1795 00A3                       l1787 0085                       l1779 0072  
                     l1797 00C5                       l1789 0087                       ?_map 0034  
                     l1799 00CA                       STR_1 043F                       STR_2 041A  
                     STR_3 0446                       STR_4 0429                       STR_5 0449  
                     STR_6 0446                       STR_7 0434                       STR_8 0443  
                     u1100 05B1                       u1101 05B0                       u1110 05BC  
                     u1111 05BB                       u1120 05C3                       u1200 0235  
                     u1121 05C2                       u1201 0234                       u1130 05CA  
                     u1210 0246                       u1131 05C9                       u1211 0245  
                     u1220 0265                       u1300 04E2                       u1221 0264  
                     u1301 04E1                       u1150 045A                       u1151 0459  
                     u1240 0279                       u1320 04F4                       u1400 0542  
                     u1145 056B                       u1241 0278                       u1161 0463  
                     u1321 04F3                       u1401 0541                       u1162 046A  
                     u1235 026A                       u1163 0471                       u1315 04E6  
                     u1260 0294                       u1500 03C2                       u1340 0505  
                     u1420 0555                       u1261 0293                       u1501 03C3  
                     u1341 0504                       u1421 0554                       u1405 053E  
                     u1430 04A3                       u1190 048B                       u1502 03C8  
                     u1510 0152                       u1255 027B                       u1191 048A  
                     u1175 0473                       u1503 03C9                       u1335 04F5  
                     u1415 0549                       u1511 0151                       u1440 04C7  
                     u1280 02B2                       u1360 0519                       u1520 018C  
                     u1281 02B1                       u1265 0290                       u1185 047B  
                     u1361 0518                       u1345 0501                       u1521 018B  
                     u1610 05A7                       u1450 04D9                       u1290 02B7  
                     u1370 0526                       u1530 01B2                       u1611 05A6  
                     u1451 04D8                       u1291 02B6                       u1275 02A4  
                     u1355 050D                       u1371 0525                       u1531 01B1  
                     u1460 032E                       u1540 01BD                       u1620 0079  
                     u1605 059B                       u1461 032D                       u1541 01BC  
                     u1621 0078                       u1390 0538                       u1550 01C3  
                     u1630 007E                       u1391 0537                       u1551 01C2  
                     u1535 01AE                       u1631 007D                       u1480 035A  
                     u1560 0217                       u1481 0359                       u1385 052A  
                     u1561 0216                       u1570 0229                       u1707 060F  
                     u1475 0336                       u1571 0228                       u1580 058D  
                     u1581 058C                       u1717 05D5                       u1727 05E1  
                     u1495 0362                       u1647 004E                       u1657 0061  
                     u1595 0594                       u1667 006F                       u1677 02CF  
                     u1687 02E3                       u1697 02F0                       i1l60 05F8  
                     _TMR1 000E                       _main 0015                       btemp 007E  
                     start 000C               lcd_goto_xy@c 0075               lcd_goto_xy@r 0020  
                    ??_ISR 0070                      ??_map 003E               main@distance 00C8  
          __end_of___aldiv 02CB           lcd_goto_xy@high4 0022                      ?_main 0070  
          __end_of___lwdiv 051E            __end_of___lwmod 055A                      _PORTD 0008  
                    u55_20 05ED                      u55_21 05EC                      _TRISB 0086  
                    _TRISD 0088               main@duration 00CA        ___lmul@multiplicand 0076  
          __end_of_lcd_cmd 0635            __end_of_dpowers 041A                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 022E  
          __initialization 000F               __end_of_main 0144                     ??_main 0042  
                   i1l1083 05E7                     i1l1085 05ED                     i1l1087 05F3  
                   i1l1089 05F7                     _TRISC0 0438                     _TRISC1 0439  
         __end_of_lcd_data 05CE           __end_of_lcd_init 0326                     ___lmul 044C  
                ??___aldiv 002D                     ___wmul 0587       __size_of_lcd_goto_xy 0059  
             ?_timer1_init 0070                  ??___lwdiv 0076                  ??___lwmod 0024  
 __end_of_lcd_write_string 04DA           main@chr_distance 00A0                  ??_lcd_cmd 0074  
         main@chr_duration 00B4                     saved_w 007E                  ??_sprintf 0029  
        lcd_write_string@i 0023    __end_of__initialization 0011              lcd_write@byte 0077  
           __pcstackCOMMON 0070         __size_of_lcd_clear 0016         __size_of_lcd_clock 0019  
       __size_of_lcd_write 002D                 __pmaintext 0015                    ?___lmul 0072  
                  ?___wmul 0072                 __pintentry 0004             ___lmul@product 0021  
                ?_lcd_data 0070                  ?_lcd_init 0070                 __stringtab 0400  
      lcd_write@low_nibble 0075          __end_of_lcd_clear 0615          __end_of_lcd_clock 05E7  
                  ___aldiv 022E            __size_of___lmul 0048          __end_of_lcd_write 0587  
          __size_of___wmul 0025                    ___lwdiv 04DA                    ___lwmod 051E  
     __size_of_timer1_init 0010                    __ptext1 0615                    __ptext2 0144  
                  __ptext3 051E                    __ptext4 04DA                    __ptext5 037F  
                  __ptext6 044C                    __ptext7 022E                    __ptext8 0494  
                  __ptext9 055A                    _lcd_cmd 0625               __size_of_ISR 0018  
                _T1CONbits 0010                    _dpowers 0410               __size_of_map 0057  
         ___aldiv@dividend 0029                 ??_lcd_data 0072                    _sprintf 0144  
               ??_lcd_init 0075       end_of_initialization 0011           ___aldiv@quotient 0030  
                _PORTCbits 0007          ?_lcd_write_string 0078         ??_lcd_write_string 0020  
               map@fromLow 0036                 lcd_cmd@cmd 0074              ??_lcd_goto_xy 0076  
          lcd_goto_xy@low4 0021             __end_of___lmul 0494            lcd_goto_xy@temp 0023  
           __end_of___wmul 05AC        start_initialization 000F                __end_of_ISR 05FF  
              __end_of_map 03D6                   ??___lmul 0020                   ??___wmul 0076  
     lcd_write@high_nibble 0076        __end_of_lcd_goto_xy 037F                __pbssCOMMON 007A  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of_lcd_data 0022          __size_of_lcd_init 005B                sprintf@flag 002D  
              sprintf@prec 002E           ___lwdiv@dividend 0074                   ?___aldiv 0025  
                 ?___lwdiv 0072                   ?___lwmod 0020                  _lcd_clear 05FF  
                _lcd_clock 05CE                  __pstrings 0400                   ?_lcd_cmd 0070  
                _lcd_write 055A           ___lwdiv@quotient 0078                   ?_sprintf 0026  
          ___aldiv@divisor 0025          interrupt_function 0004            ___aldiv@counter 002E  
           ___wmul@product 0076                   _PIE1bits 008C                   _PIR1bits 000C  
              _lcd_goto_xy 0326              ??_timer1_init 0072                 ?_lcd_clear 0070  
               ?_lcd_clock 0070                  map@toHigh 003C                __stringbase 040F  
               ?_lcd_write 0070          ___wmul@multiplier 0072          ___lmul@multiplier 0072  
__size_of_lcd_write_string 0046           __size_of___aldiv 009D           __size_of___lwdiv 0044  
         __size_of___lwmod 003C         __end_of__stringtab 0410           __size_of_lcd_cmd 0010  
      __end_of_timer1_init 0625                 sprintf@val 002F            ___lwdiv@divisor 0072  
          ___lwdiv@counter 0077                   __ptext10 02CB                   __ptext11 0326  
                 __ptext12 05FF                   __ptext13 0625                   __ptext14 05AC  
                 __ptext15 05CE                   __ptext16 0587                   __ptext17 05E7  
                 _lcd_data 05AC                   _lcd_init 02CB           __size_of_sprintf 00EA  
            __size_of_main 012F                   _overflow 007A                   map@toLow 003A  
                 map@value 0034                ??_lcd_clear 0075                ??_lcd_clock 0072  
              ??_lcd_write 0074                 _INTCONbits 000B                   intlevel1 0000  
                sprintf@ap 002C                  sprintf@sp 0031           ___lwmod@dividend 0022  
                stringcode 040A                _timer1_init 0615                   sprintf@c 0032  
                 sprintf@f 0026            ___lwmod@divisor 0020            ___lwmod@counter 0025  
                 stringdir 040A                   stringtab 0400               ___aldiv@sign 002F  
         _lcd_write_string 0494        lcd_write_string@str 0078                map@fromHigh 0038  
             ?_lcd_goto_xy 0075  
