

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Dec 27 19:30:27 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.31
    15                           ; Generated 13/10/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  000E                     _TMR1	set	14
   170  0006                     _PORTBbits	set	6
   171  0010                     _T1CONbits	set	16
   172  000C                     _PIR1bits	set	12
   173  000B                     _INTCONbits	set	11
   174  0031                     _RB1	set	49
   175  0030                     _RB0	set	48
   176  008C                     _PIE1bits	set	140
   177  0440                     _TRISD0	set	1088
   178  0431                     _TRISB1	set	1073
   179  0430                     _TRISB0	set	1072
   180                           
   181                           	psect	cinit
   182  000F                     start_initialization:	
   183                           ; #config settings
   184                           
   185  000F                     __initialization:
   186                           
   187                           ; Clear objects allocated to COMMON
   188  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   189  0010                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192  0010                     __end_of__initialization:
   193  0010  0183               	clrf	3
   194  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMMON
   197  0076                     __pbssCOMMON:
   198  0076                     _overflow:
   199  0076                     	ds	1
   200                           
   201                           	psect	cstackCOMMON
   202  0070                     __pcstackCOMMON:
   203  0070                     ?_timer1_init:
   204  0070                     ?_ISR:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     ??_ISR:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0070                     ?_main:	
   211                           ; 1 bytes @ 0x0
   212                           
   213                           
   214                           ; 1 bytes @ 0x0
   215  0070                     	ds	3
   216  0073                     ??_timer1_init:
   217  0073                     ??_main:	
   218                           ; 1 bytes @ 0x3
   219                           
   220                           
   221                           ; 1 bytes @ 0x3
   222  0073                     	ds	3
   223                           
   224                           	psect	maintext
   225  0014                     __pmaintext:	
   226 ;;
   227 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   228 ;;
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 14 in file "main.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;		None
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg, status,2, status,0, pclath, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : B00/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   245 ;;      Params:         0       0       0       0       0
   246 ;;      Locals:         0       0       0       0       0
   247 ;;      Temps:          3       0       0       0       0
   248 ;;      Totals:         3       0       0       0       0
   249 ;;Total ram usage:        3 bytes
   250 ;; Hardware stack levels required when called:    2
   251 ;; This function calls:
   252 ;;		_timer1_init
   253 ;; This function is called by:
   254 ;;		Startup code after reset
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258                           
   259                           ;psect for function _main
   260  0014                     _main:
   261  0014                     l646:	
   262                           ;incstack = 0
   263                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   264                           
   265                           
   266                           ;main.c: 16:     TRISB0 = 0;
   267  0014  1683               	bsf	3,5	;RP0=1, select bank1
   268  0015  1303               	bcf	3,6	;RP1=0, select bank1
   269  0016  1006               	bcf	6,0	;volatile
   270                           
   271                           ;main.c: 17:     TRISB1 = 0;
   272  0017  1086               	bcf	6,1	;volatile
   273                           
   274                           ;main.c: 18:     TRISD0 = 1;
   275  0018  1408               	bsf	8,0	;volatile
   276                           
   277                           ;main.c: 19:     PORTBbits.RB0 = 0;
   278  0019  1283               	bcf	3,5	;RP0=0, select bank0
   279  001A  1303               	bcf	3,6	;RP1=0, select bank0
   280  001B  1006               	bcf	6,0	;volatile
   281                           
   282                           ;main.c: 20:     T1CONbits.TMR1ON = 1;
   283  001C  1410               	bsf	16,0	;volatile
   284  001D                     l648:
   285                           
   286                           ;main.c: 22:     timer1_init();
   287  001D  120A  118A  2058  120A  118A  	fcall	_timer1_init
   288  0022                     l650:
   289                           
   290                           ;main.c: 26:         if(overflow == 100) {
   291  0022  3064               	movlw	100
   292  0023  0676               	xorwf	_overflow,w
   293  0024  1D03               	btfss	3,2
   294  0025  2827               	goto	u21
   295  0026  2828               	goto	u20
   296  0027                     u21:
   297  0027  282D               	goto	l656
   298  0028                     u20:
   299  0028                     l652:
   300                           
   301                           ;main.c: 27:             RB0 = ~RB0;
   302  0028  3001               	movlw	1
   303  0029  1283               	bcf	3,5	;RP0=0, select bank0
   304  002A  1303               	bcf	3,6	;RP1=0, select bank0
   305  002B  0686               	xorwf	6,f
   306  002C                     l654:
   307                           
   308                           ;main.c: 28:             overflow = 0;
   309  002C  01F6               	clrf	_overflow
   310  002D                     l656:
   311                           
   312                           ;main.c: 31:         RB1 = ~RB1;
   313  002D  3002               	movlw	2
   314  002E  1283               	bcf	3,5	;RP0=0, select bank0
   315  002F  1303               	bcf	3,6	;RP1=0, select bank0
   316  0030  0686               	xorwf	6,f
   317  0031                     l658:
   318                           
   319                           ;main.c: 32:         _delay((unsigned long)((250)*(20000000/4000.0)));
   320  0031  3007               	movlw	7
   321  0032  00F5               	movwf	??_main+2
   322  0033  3058               	movlw	88
   323  0034  00F4               	movwf	??_main+1
   324  0035  3059               	movlw	89
   325  0036  00F3               	movwf	??_main
   326  0037                     u37:
   327  0037  0BF3               	decfsz	??_main,f
   328  0038  2837               	goto	u37
   329  0039  0BF4               	decfsz	??_main+1,f
   330  003A  2837               	goto	u37
   331  003B  0BF5               	decfsz	??_main+2,f
   332  003C  2837               	goto	u37
   333  003D  283E               	nop2
   334  003E  2822               	goto	l650
   335  003F  120A  118A  280C   	ljmp	start
   336  0042                     __end_of_main:
   337                           
   338                           	psect	text1
   339  0058                     __ptext1:	
   340 ;; *************** function _timer1_init *****************
   341 ;; Defined at:
   342 ;;		line 14 in file "../libraries-headers\timer1.h"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;		None
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		None
   351 ;; Tracked objects:
   352 ;;		On entry : 0/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   356 ;;      Params:         0       0       0       0       0
   357 ;;      Locals:         0       0       0       0       0
   358 ;;      Temps:          0       0       0       0       0
   359 ;;      Totals:         0       0       0       0       0
   360 ;;Total ram usage:        0 bytes
   361 ;; Hardware stack levels used:    1
   362 ;; Hardware stack levels required when called:    1
   363 ;; This function calls:
   364 ;;		Nothing
   365 ;; This function is called by:
   366 ;;		_main
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           
   371                           ;psect for function _timer1_init
   372  0058                     _timer1_init:
   373  0058                     l636:	
   374                           ;incstack = 0
   375                           ; Regs used in _timer1_init: []
   376                           
   377                           
   378                           ;../libraries-headers\timer1.h: 15:     INTCONbits.GIE = 1;
   379  0058  178B               	bsf	11,7	;volatile
   380                           
   381                           ;../libraries-headers\timer1.h: 16:     INTCONbits.PEIE = 1;
   382  0059  170B               	bsf	11,6	;volatile
   383                           
   384                           ;../libraries-headers\timer1.h: 17:     PIE1bits.TMR1IE = 1;
   385  005A  1683               	bsf	3,5	;RP0=1, select bank1
   386  005B  1303               	bcf	3,6	;RP1=0, select bank1
   387  005C  140C               	bsf	12,0	;volatile
   388                           
   389                           ;../libraries-headers\timer1.h: 18:     PIR1bits.TMR1IF = 0;
   390  005D  1283               	bcf	3,5	;RP0=0, select bank0
   391  005E  1303               	bcf	3,6	;RP1=0, select bank0
   392  005F  100C               	bcf	12,0	;volatile
   393                           
   394                           ;../libraries-headers\timer1.h: 19:     T1CONbits.TMR1CS = 0;
   395  0060  1090               	bcf	16,1	;volatile
   396                           
   397                           ;../libraries-headers\timer1.h: 20:     T1CONbits.T1CKPS1 = 0;
   398  0061  1290               	bcf	16,5	;volatile
   399                           
   400                           ;../libraries-headers\timer1.h: 21:     T1CONbits.T1CKPS0 = 0;
   401  0062  1210               	bcf	16,4	;volatile
   402                           
   403                           ;../libraries-headers\timer1.h: 22:     TMR1 = 15536;
   404  0063  303C               	movlw	60
   405  0064  008F               	movwf	15	;volatile
   406  0065  30B0               	movlw	176
   407  0066  008E               	movwf	14	;volatile
   408  0067                     l29:
   409  0067  0008               	return
   410  0068                     __end_of_timer1_init:
   411                           
   412                           	psect	text2
   413  0042                     __ptext2:	
   414 ;; *************** function _ISR *****************
   415 ;; Defined at:
   416 ;;		line 26 in file "../libraries-headers\timer1.h"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   430 ;;      Params:         0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0
   432 ;;      Temps:          3       0       0       0       0
   433 ;;      Totals:         3       0       0       0       0
   434 ;;Total ram usage:        3 bytes
   435 ;; Hardware stack levels used:    1
   436 ;; This function calls:
   437 ;;		Nothing
   438 ;; This function is called by:
   439 ;;		Interrupt level 1
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           
   444                           ;psect for function _ISR
   445  0042                     _ISR:
   446  0042                     i1l638:
   447                           
   448                           ;../libraries-headers\timer1.h: 28:     if(PIR1bits.TMR1IF) {
   449  0042  1283               	bcf	3,5	;RP0=0, select bank0
   450  0043  1303               	bcf	3,6	;RP1=0, select bank0
   451  0044  1C0C               	btfss	12,0	;volatile
   452  0045  2847               	goto	u1_21
   453  0046  2848               	goto	u1_20
   454  0047                     u1_21:
   455  0047  2851               	goto	i1l35
   456  0048                     u1_20:
   457  0048                     i1l640:
   458                           
   459                           ;../libraries-headers\timer1.h: 29:         overflow++;
   460  0048  3001               	movlw	1
   461  0049  00F0               	movwf	??_ISR
   462  004A  0870               	movf	??_ISR,w
   463  004B  07F6               	addwf	_overflow,f
   464  004C                     i1l642:
   465                           
   466                           ;../libraries-headers\timer1.h: 30:         TMR1 = 15536;
   467  004C  303C               	movlw	60
   468  004D  008F               	movwf	15	;volatile
   469  004E  30B0               	movlw	176
   470  004F  008E               	movwf	14	;volatile
   471  0050                     i1l644:
   472                           
   473                           ;../libraries-headers\timer1.h: 31:         PIR1bits.TMR1IF = 0;
   474  0050  100C               	bcf	12,0	;volatile
   475  0051                     i1l35:
   476  0051  0872               	movf	??_ISR+2,w
   477  0052  008A               	movwf	10
   478  0053  0E71               	swapf	??_ISR+1,w
   479  0054  0083               	movwf	3
   480  0055  0EFE               	swapf	btemp,f
   481  0056  0E7E               	swapf	btemp,w
   482  0057  0009               	retfie
   483  0058                     __end_of_ISR:
   484  007E                     btemp	set	126	;btemp
   485  007E                     wtemp0	set	126
   486                           
   487                           	psect	intentry
   488  0004                     __pintentry:	
   489                           ;incstack = 0
   490                           ; Regs used in _ISR: [wreg+status,2+status,0]
   491                           
   492  0004                     interrupt_function:
   493  007E                     saved_w	set	btemp
   494  0004  00FE               	movwf	btemp
   495  0005  0E03               	swapf	3,w
   496  0006  00F1               	movwf	??_ISR+1
   497  0007  080A               	movf	10,w
   498  0008  00F2               	movwf	??_ISR+2
   499  0009  120A  118A  2842   	ljmp	_ISR
   500                           
   501                           	psect	config
   502                           
   503                           ;Config register CONFIG @ 0x2007
   504                           ;	Oscillator Selection bits
   505                           ;	FOSC = HS, HS oscillator
   506                           ;	Watchdog Timer Enable bit
   507                           ;	WDTE = OFF, WDT disabled
   508                           ;	Power-up Timer Enable bit
   509                           ;	PWRTE = OFF, PWRT disabled
   510                           ;	Brown-out Reset Enable bit
   511                           ;	BOREN = OFF, BOR disabled
   512                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   513                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   514                           ;	Data EEPROM Memory Code Protection bit
   515                           ;	CPD = OFF, Data EEPROM code protection off
   516                           ;	Flash Program Memory Write Enable bits
   517                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   518                           ;	In-Circuit Debugger Mode bit
   519                           ;	DEBUG = 0x1, unprogrammed default
   520                           ;	Flash Program Memory Code Protection bit
   521                           ;	CP = OFF, Code protection off
   522  2007                     	org	8199
   523  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 COMMON     3     3      0
                        _timer1_init
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _timer1_init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Dec 27 19:30:27 2020

                     l29 0067                       u20 0028                       u21 0027  
                     u37 0037                      l650 0022                      l636 0058  
                    l652 0028                      l654 002C                      l646 0014  
                    l656 002D                      l648 001D                      l658 0031  
                    _RB0 0030                      _RB1 0031                      _ISR 0042  
                   ?_ISR 0070                     i1l35 0051                     _TMR1 000E  
                   u1_20 0048                     u1_21 0047                     _main 0014  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    i1l640 0048                    i1l642 004C  
                  i1l644 0050                    i1l638 0042                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0042                   ??_main 0073                   _TRISB0 0430  
                 _TRISB1 0431                   _TRISD0 0440             ?_timer1_init 0070  
                 saved_w 007E  __end_of__initialization 0010           __pcstackCOMMON 0070  
             __pmaintext 0014               __pintentry 0004     __size_of_timer1_init 0010  
                __ptext1 0058                  __ptext2 0042             __size_of_ISR 0016  
              _T1CONbits 0010     end_of_initialization 0010                _PORTBbits 0006  
    start_initialization 000F              __end_of_ISR 0058              __pbssCOMMON 0076  
              ___latbits 0002        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C            ??_timer1_init 0073      __end_of_timer1_init 0068  
          __size_of_main 002E                 _overflow 0076               _INTCONbits 000B  
               intlevel1 0000              _timer1_init 0058  
