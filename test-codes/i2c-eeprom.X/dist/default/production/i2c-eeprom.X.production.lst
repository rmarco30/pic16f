

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 26 23:25:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.31
    32                           ; Generated 13/10/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F877A Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0094                     	;# 
   174  0098                     	;# 
   175  0099                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  010C                     	;# 
   181  010D                     	;# 
   182  010E                     	;# 
   183  010F                     	;# 
   184  018C                     	;# 
   185  018D                     	;# 
   186                           
   187                           	psect	strings
   188  0003                     __pstrings:
   189  0003                     stringtab:
   190  0003                     __stringtab:
   191                           
   192                           ;	String table - string pointers are 1 byte each
   193  0003  1BFF               	btfsc	btemp+1,7
   194  0004  280D               	ljmp	stringcode
   195  0005  1383               	bcf	3,7
   196  0006  187F               	btfsc	btemp+1,0
   197  0007  1783               	bsf	3,7
   198  0008  0800               	movf	0,w
   199  0009  0A84               	incf	4,f
   200  000A  1903               	skipnz
   201  000B  0AFF               	incf	btemp+1,f
   202  000C  0008               	return
   203  000D                     stringcode:
   204  000D                     stringdir:
   205  000D  3000               	movlw	high stringdir
   206  000E  008A               	movwf	10
   207  000F  0804               	movf	4,w
   208  0010  0A84               	incf	4,f
   209  0011  0782               	addwf	2,f
   210  0012                     __stringbase:
   211  0012  3400               	retlw	0
   212  0013                     __end_of__stringtab:
   213  0013                     _dpowers:
   214  0013  3401               	retlw	1
   215  0014  3400               	retlw	0
   216  0015  340A               	retlw	10
   217  0016  3400               	retlw	0
   218  0017  3464               	retlw	100
   219  0018  3400               	retlw	0
   220  0019  34E8               	retlw	232
   221  001A  3403               	retlw	3
   222  001B  3410               	retlw	16
   223  001C  3427               	retlw	39
   224  001D                     __end_of_dpowers:
   225  001D                     _hexpowers:
   226  001D  3401               	retlw	1
   227  001E  3400               	retlw	0
   228  001F  3410               	retlw	16
   229  0020  3400               	retlw	0
   230  0021  3400               	retlw	0
   231  0022  3401               	retlw	1
   232  0023  3400               	retlw	0
   233  0024  3410               	retlw	16
   234  0025                     __end_of_hexpowers:
   235  0014                     _SSPCONbits	set	20
   236  0013                     _SSPBUF	set	19
   237  000C                     _PIR1bits	set	12
   238  0014                     _SSPCON	set	20
   239  0032                     _RB2	set	50
   240  0033                     _RB3	set	51
   241  0031                     _RB1	set	49
   242  0030                     _RB0	set	48
   243  0042                     _RD2	set	66
   244  0047                     _RD7	set	71
   245  0046                     _RD6	set	70
   246  0045                     _RD5	set	69
   247  0044                     _RD4	set	68
   248  0043                     _RD3	set	67
   249  0086                     _TRISB	set	134
   250  0088                     _TRISD	set	136
   251  0094                     _SSPSTATbits	set	148
   252  0091                     _SSPCON2bits	set	145
   253  0091                     _SSPCON2	set	145
   254  0094                     _SSPSTAT	set	148
   255  0093                     _SSPADD	set	147
   256  0087                     _TRISC	set	135
   257  0025                     STR_10:
   258  0025  3430               	retlw	48	;'0'
   259  0026  3431               	retlw	49	;'1'
   260  0027  3432               	retlw	50	;'2'
   261  0028  3433               	retlw	51	;'3'
   262  0029  3434               	retlw	52	;'4'
   263  002A  3435               	retlw	53	;'5'
   264  002B  3436               	retlw	54	;'6'
   265  002C  3437               	retlw	55	;'7'
   266  002D  3438               	retlw	56	;'8'
   267  002E  3439               	retlw	57	;'9'
   268  002F  3461               	retlw	97	;'a'
   269  0030  3462               	retlw	98	;'b'
   270  0031  3463               	retlw	99	;'c'
   271  0032  3464               	retlw	100	;'d'
   272  0033  3465               	retlw	101	;'e'
   273  0034  3466               	retlw	102	;'f'
   274  0035  3400               	retlw	0
   275  0036                     STR_2:
   276  0036  3472               	retlw	114	;'r'
   277  0037  3465               	retlw	101	;'e'
   278  0038  3461               	retlw	97	;'a'
   279  0039  3464               	retlw	100	;'d'
   280  003A  342F               	retlw	47	;'/'
   281  003B  3477               	retlw	119	;'w'
   282  003C  3472               	retlw	114	;'r'
   283  003D  3469               	retlw	105	;'i'
   284  003E  3474               	retlw	116	;'t'
   285  003F  3465               	retlw	101	;'e'
   286  0040  3420               	retlw	32	;' '
   287  0041  3474               	retlw	116	;'t'
   288  0042  3465               	retlw	101	;'e'
   289  0043  3473               	retlw	115	;'s'
   290  0044  3474               	retlw	116	;'t'
   291  0045  3400               	retlw	0
   292  0046                     STR_9:
   293  0046  3472               	retlw	114	;'r'
   294  0047  3465               	retlw	101	;'e'
   295  0048  3461               	retlw	97	;'a'
   296  0049  3464               	retlw	100	;'d'
   297  004A  3420               	retlw	32	;' '
   298  004B  343D               	retlw	61	;'='
   299  004C  3420               	retlw	32	;' '
   300  004D  3430               	retlw	48	;'0'
   301  004E  3478               	retlw	120	;'x'
   302  004F  3400               	retlw	0
   303  0050                     STR_7:
   304  0050  3477               	retlw	119	;'w'
   305  0051  3472               	retlw	114	;'r'
   306  0052  3469               	retlw	105	;'i'
   307  0053  3474               	retlw	116	;'t'
   308  0054  3465               	retlw	101	;'e'
   309  0055  3420               	retlw	32	;' '
   310  0056  343D               	retlw	61	;'='
   311  0057  3420               	retlw	32	;' '
   312  0058  3400               	retlw	0
   313  0059                     STR_4:
   314  0059  3476               	retlw	118	;'v'
   315  005A  3461               	retlw	97	;'a'
   316  005B  346C               	retlw	108	;'l'
   317  005C  3475               	retlw	117	;'u'
   318  005D  3465               	retlw	101	;'e'
   319  005E  343A               	retlw	58	;':'
   320  005F  3420               	retlw	32	;' '
   321  0060  3400               	retlw	0
   322  0061                     STR_1:
   323  0061  3465               	retlw	101	;'e'
   324  0062  3465               	retlw	101	;'e'
   325  0063  3470               	retlw	112	;'p'
   326  0064  3472               	retlw	114	;'r'
   327  0065  346F               	retlw	111	;'o'
   328  0066  346D               	retlw	109	;'m'
   329  0067  3400               	retlw	0
   330  0068                     STR_3:
   331  0068  3425               	retlw	37	;'%'
   332  0069  3464               	retlw	100	;'d'
   333  006A  3400               	retlw	0
   334  006B                     STR_8:
   335  006B  3425               	retlw	37	;'%'
   336  006C  3478               	retlw	120	;'x'
   337  006D  3400               	retlw	0
   338  0059                     
   339                           	psect	cinit
   340  07FC                     start_initialization:	
   341                           ; #config settings
   342                           
   343  07FC                     __initialization:
   344  07FC                     end_of_initialization:	
   345                           ;End of C runtime variable initialization code
   346                           
   347  07FC                     __end_of__initialization:
   348  07FC  0183               	clrf	3
   349  07FD  120A  118A  2DD3   	ljmp	_main	;jump to C main() function
   350                           
   351                           	psect	cstackCOMMON
   352  0070                     __pcstackCOMMON:
   353  0070                     ?_i2c_is_idle:
   354  0070                     ??_i2c_is_idle:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_i2c_start:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ??_i2c_start:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ?_i2c_rep_start:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ??_i2c_rep_start:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ?_i2c_stop:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ??_i2c_stop:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_i2c_write:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ??_i2c_write:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_i2c_read:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ??_i2c_read:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ?_lcd_clock:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ??_lcd_clock:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ?_lcd_data:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ??_lcd_data:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_lcd_cmd:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_lcd_clear:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_lcd_init:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_lcd_write:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_main:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?___lwdiv:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?___lldiv:	
   418                           ; 2 bytes @ 0x0
   419                           
   420  0070                     i2c_write@d_addr:	
   421                           ; 4 bytes @ 0x0
   422                           
   423  0070                     lcd_data@data:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ___lwdiv@divisor:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ___lldiv@divisor:	
   430                           ; 2 bytes @ 0x0
   431                           
   432                           
   433                           ; 4 bytes @ 0x0
   434  0070                     	ds	1
   435  0071                     i2c_read@ack:
   436                           
   437                           ; 1 bytes @ 0x1
   438  0071                     	ds	1
   439  0072                     ??_lcd_cmd:
   440  0072                     ??_lcd_write:	
   441                           ; 1 bytes @ 0x2
   442                           
   443  0072                     i2c_read@data:	
   444                           ; 1 bytes @ 0x2
   445                           
   446  0072                     lcd_cmd@cmd:	
   447                           ; 1 bytes @ 0x2
   448                           
   449  0072                     ___lwdiv@dividend:	
   450                           ; 1 bytes @ 0x2
   451                           
   452                           
   453                           ; 2 bytes @ 0x2
   454  0072                     	ds	1
   455  0073                     ??_lcd_clear:
   456  0073                     ?_lcd_goto_xy:	
   457                           ; 1 bytes @ 0x3
   458                           
   459  0073                     ??_lcd_init:	
   460                           ; 1 bytes @ 0x3
   461                           
   462  0073                     lcd_goto_xy@c:	
   463                           ; 1 bytes @ 0x3
   464                           
   465  0073                     lcd_write@low_nibble:	
   466                           ; 1 bytes @ 0x3
   467                           
   468                           
   469                           ; 1 bytes @ 0x3
   470  0073                     	ds	1
   471  0074                     ??_lcd_goto_xy:
   472  0074                     ??___lwdiv:	
   473                           ; 1 bytes @ 0x4
   474                           
   475  0074                     lcd_write@high_nibble:	
   476                           ; 1 bytes @ 0x4
   477                           
   478  0074                     ___lldiv@dividend:	
   479                           ; 1 bytes @ 0x4
   480                           
   481                           
   482                           ; 4 bytes @ 0x4
   483  0074                     	ds	1
   484  0075                     lcd_write@byte:
   485  0075                     ___lwdiv@quotient:	
   486                           ; 1 bytes @ 0x5
   487                           
   488                           
   489                           ; 2 bytes @ 0x5
   490  0075                     	ds	1
   491  0076                     ?_lcd_write_string:
   492  0076                     lcd_goto_xy@r:	
   493                           ; 1 bytes @ 0x6
   494                           
   495  0076                     lcd_write_string@str:	
   496                           ; 1 bytes @ 0x6
   497                           
   498                           
   499                           ; 2 bytes @ 0x6
   500  0076                     	ds	1
   501  0077                     lcd_goto_xy@low4:
   502  0077                     ___lwdiv@counter:	
   503                           ; 1 bytes @ 0x7
   504                           
   505                           
   506                           ; 1 bytes @ 0x7
   507  0077                     	ds	1
   508  0078                     ??_lcd_write_string:
   509  0078                     ??___lldiv:	
   510                           ; 1 bytes @ 0x8
   511                           
   512  0078                     ?___lwmod:	
   513                           ; 1 bytes @ 0x8
   514                           
   515  0078                     lcd_goto_xy@high4:	
   516                           ; 2 bytes @ 0x8
   517                           
   518  0078                     ___lwmod@divisor:	
   519                           ; 1 bytes @ 0x8
   520                           
   521                           
   522                           ; 2 bytes @ 0x8
   523  0078                     	ds	1
   524  0079                     lcd_goto_xy@temp:
   525  0079                     ___lldiv@quotient:	
   526                           ; 1 bytes @ 0x9
   527                           
   528                           
   529                           ; 4 bytes @ 0x9
   530  0079                     	ds	1
   531  007A                     ___lwmod@dividend:
   532                           
   533                           ; 2 bytes @ 0xA
   534  007A                     	ds	1
   535  007B                     lcd_write_string@i:
   536                           
   537                           ; 2 bytes @ 0xB
   538  007B                     	ds	1
   539  007C                     ??___lwmod:
   540                           
   541                           ; 1 bytes @ 0xC
   542  007C                     	ds	1
   543  007D                     ___lldiv@counter:
   544  007D                     ___lwmod@counter:	
   545                           ; 1 bytes @ 0xD
   546                           
   547                           
   548                           ; 1 bytes @ 0xD
   549  007D                     	ds	1
   550                           
   551                           	psect	cstackBANK0
   552  0020                     __pcstackBANK0:
   553  0020                     ?_i2c_master_init:
   554  0020                     ?_sprintf:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0020                     sprintf@f:	
   558                           ; 2 bytes @ 0x0
   559                           
   560  0020                     i2c_master_init@baud_rate:	
   561                           ; 1 bytes @ 0x0
   562                           
   563                           
   564                           ; 4 bytes @ 0x0
   565  0020                     	ds	3
   566  0023                     ??_sprintf:
   567                           
   568                           ; 1 bytes @ 0x3
   569  0023                     	ds	1
   570  0024                     ??_i2c_master_init:
   571                           
   572                           ; 1 bytes @ 0x4
   573  0024                     	ds	2
   574  0026                     sprintf@idx:
   575                           
   576                           ; 1 bytes @ 0x6
   577  0026                     	ds	1
   578  0027                     sprintf@ap:
   579                           
   580                           ; 1 bytes @ 0x7
   581  0027                     	ds	1
   582  0028                     sprintf@prec:
   583                           
   584                           ; 1 bytes @ 0x8
   585  0028                     	ds	1
   586  0029                     sprintf@flag:
   587                           
   588                           ; 1 bytes @ 0x9
   589  0029                     	ds	1
   590  002A                     sprintf@sp:
   591                           
   592                           ; 1 bytes @ 0xA
   593  002A                     	ds	1
   594  002B                     sprintf@val:
   595                           
   596                           ; 2 bytes @ 0xB
   597  002B                     	ds	2
   598  002D                     sprintf@c:
   599                           
   600                           ; 1 bytes @ 0xD
   601  002D                     	ds	1
   602  002E                     ??_main:
   603                           
   604                           ; 1 bytes @ 0xE
   605  002E                     	ds	3
   606  0031                     main@str2:
   607                           
   608                           ; 10 bytes @ 0x11
   609  0031                     	ds	10
   610  003B                     main@str1:
   611                           
   612                           ; 10 bytes @ 0x1B
   613  003B                     	ds	10
   614  0045                     main@received:
   615                           
   616                           ; 1 bytes @ 0x25
   617  0045                     	ds	1
   618  0046                     main@data:
   619                           
   620                           ; 1 bytes @ 0x26
   621  0046                     	ds	1
   622                           
   623                           	psect	maintext
   624  05D3                     __pmaintext:	
   625 ;;
   626 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   627 ;;
   628 ;; *************** function _main *****************
   629 ;; Defined at:
   630 ;;		line 23 in file "main.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;  received        1   37[BANK0 ] unsigned char 
   635 ;;  str1           10   27[BANK0 ] unsigned char [10]
   636 ;;  str2           10   17[BANK0 ] unsigned char [10]
   637 ;;  data            1   38[BANK0 ] unsigned char 
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : B00/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   647 ;;      Params:         0       0       0       0       0
   648 ;;      Locals:         0      22       0       0       0
   649 ;;      Temps:          0       3       0       0       0
   650 ;;      Totals:         0      25       0       0       0
   651 ;;Total ram usage:       25 bytes
   652 ;; Hardware stack levels required when called:    3
   653 ;; This function calls:
   654 ;;		_i2c_is_idle
   655 ;;		_i2c_master_init
   656 ;;		_i2c_read
   657 ;;		_i2c_rep_start
   658 ;;		_i2c_start
   659 ;;		_i2c_stop
   660 ;;		_i2c_write
   661 ;;		_lcd_clear
   662 ;;		_lcd_goto_xy
   663 ;;		_lcd_init
   664 ;;		_lcd_write_string
   665 ;;		_sprintf
   666 ;; This function is called by:
   667 ;;		Startup code after reset
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           
   672                           ;psect for function _main
   673  05D3                     _main:
   674  05D3                     l1671:	
   675                           ;incstack = 0
   676                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   677                           
   678                           
   679                           ;main.c: 25:     uint8_t data = 0;
   680  05D3  1283               	bcf	3,5	;RP0=0, select bank0
   681  05D4  1303               	bcf	3,6	;RP1=0, select bank0
   682  05D5  01C6               	clrf	main@data
   683  05D6                     l1673:
   684                           
   685                           ;main.c: 26:     char str1[10];;main.c: 27:     char str2[10];;main.c: 29:     TRISB = 0
      +                          x0F;
   686  05D6  300F               	movlw	15
   687  05D7  1683               	bsf	3,5	;RP0=1, select bank1
   688  05D8  1303               	bcf	3,6	;RP1=0, select bank1
   689  05D9  0086               	movwf	6	;volatile
   690  05DA                     l1675:
   691                           
   692                           ;main.c: 31:     i2c_master_init(100000);
   693  05DA  3000               	movlw	0
   694  05DB  1283               	bcf	3,5	;RP0=0, select bank0
   695  05DC  1303               	bcf	3,6	;RP1=0, select bank0
   696  05DD  00A3               	movwf	i2c_master_init@baud_rate+3
   697  05DE  3001               	movlw	1
   698  05DF  00A2               	movwf	i2c_master_init@baud_rate+2
   699  05E0  3086               	movlw	134
   700  05E1  00A1               	movwf	i2c_master_init@baud_rate+1
   701  05E2  30A0               	movlw	160
   702  05E3  00A0               	movwf	i2c_master_init@baud_rate
   703  05E4  120A  118A  22C0  120A  118A  	fcall	_i2c_master_init
   704  05E9                     l1677:
   705                           
   706                           ;main.c: 32:     _delay((unsigned long)((200)*(20000000/4000.0)));
   707  05E9  3006               	movlw	6
   708  05EA  1283               	bcf	3,5	;RP0=0, select bank0
   709  05EB  1303               	bcf	3,6	;RP1=0, select bank0
   710  05EC  00B0               	movwf	??_main+2
   711  05ED  3013               	movlw	19
   712  05EE  00AF               	movwf	??_main+1
   713  05EF  30AD               	movlw	173
   714  05F0  00AE               	movwf	??_main
   715  05F1                     u1277:
   716  05F1  0BAE               	decfsz	??_main,f
   717  05F2  2DF1               	goto	u1277
   718  05F3  0BAF               	decfsz	??_main+1,f
   719  05F4  2DF1               	goto	u1277
   720  05F5  0BB0               	decfsz	??_main+2,f
   721  05F6  2DF1               	goto	u1277
   722  05F7                     l1679:
   723                           
   724                           ;main.c: 33:     lcd_init();
   725  05F7  120A  118A  2398  120A  118A  	fcall	_lcd_init
   726  05FC                     l1681:
   727                           
   728                           ;main.c: 34:     _delay((unsigned long)((100)*(20000000/4000.0)));
   729  05FC  3003               	movlw	3
   730  05FD  1283               	bcf	3,5	;RP0=0, select bank0
   731  05FE  1303               	bcf	3,6	;RP1=0, select bank0
   732  05FF  00B0               	movwf	??_main+2
   733  0600  308A               	movlw	138
   734  0601  00AF               	movwf	??_main+1
   735  0602  3055               	movlw	85
   736  0603  00AE               	movwf	??_main
   737  0604                     u1287:
   738  0604  0BAE               	decfsz	??_main,f
   739  0605  2E04               	goto	u1287
   740  0606  0BAF               	decfsz	??_main+1,f
   741  0607  2E04               	goto	u1287
   742  0608  0BB0               	decfsz	??_main+2,f
   743  0609  2E04               	goto	u1287
   744  060A                     l1683:
   745                           
   746                           ;main.c: 35:     lcd_goto_xy(1,1);
   747  060A  01F3               	clrf	lcd_goto_xy@c
   748  060B  0AF3               	incf	lcd_goto_xy@c,f
   749  060C  3001               	movlw	1
   750  060D  120A  118A  2347  120A  118A  	fcall	_lcd_goto_xy
   751  0612                     l1685:
   752                           
   753                           ;main.c: 36:     lcd_write_string("eeprom");
   754  0612  304F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   755  0613  00F6               	movwf	lcd_write_string@str
   756  0614  3080               	movlw	128
   757  0615  00F7               	movwf	lcd_write_string@str+1
   758  0616  120A  118A  227E  120A  118A  	fcall	_lcd_write_string
   759  061B                     l1687:
   760                           
   761                           ;main.c: 37:     lcd_goto_xy(2,1);
   762  061B  01F3               	clrf	lcd_goto_xy@c
   763  061C  0AF3               	incf	lcd_goto_xy@c,f
   764  061D  3002               	movlw	2
   765  061E  120A  118A  2347  120A  118A  	fcall	_lcd_goto_xy
   766  0623                     l1689:
   767                           
   768                           ;main.c: 38:     lcd_write_string("read/write test");
   769  0623  3024               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   770  0624  00F6               	movwf	lcd_write_string@str
   771  0625  3080               	movlw	128
   772  0626  00F7               	movwf	lcd_write_string@str+1
   773  0627  120A  118A  227E  120A  118A  	fcall	_lcd_write_string
   774  062C                     l1691:
   775                           
   776                           ;main.c: 39:     _delay((unsigned long)((3000)*(20000000/4000.0)));
   777  062C  304D               	movlw	77
   778  062D  1283               	bcf	3,5	;RP0=0, select bank0
   779  062E  1303               	bcf	3,6	;RP1=0, select bank0
   780  062F  00B0               	movwf	??_main+2
   781  0630  3019               	movlw	25
   782  0631  00AF               	movwf	??_main+1
   783  0632  304F               	movlw	79
   784  0633  00AE               	movwf	??_main
   785  0634                     u1297:
   786  0634  0BAE               	decfsz	??_main,f
   787  0635  2E34               	goto	u1297
   788  0636  0BAF               	decfsz	??_main+1,f
   789  0637  2E34               	goto	u1297
   790  0638  0BB0               	decfsz	??_main+2,f
   791  0639  2E34               	goto	u1297
   792  063A                     l1693:
   793                           
   794                           ;main.c: 40:     lcd_clear();
   795  063A  120A  118A  217B  120A  118A  	fcall	_lcd_clear
   796  063F                     l1695:
   797                           
   798                           ;main.c: 44:         if(!RB0) {
   799  063F  1283               	bcf	3,5	;RP0=0, select bank0
   800  0640  1303               	bcf	3,6	;RP1=0, select bank0
   801  0641  1806               	btfsc	6,0	;volatile
   802  0642  2E44               	goto	u1171
   803  0643  2E45               	goto	u1170
   804  0644                     u1171:
   805  0644  2EA6               	goto	l1719
   806  0645                     u1170:
   807  0645                     l1697:
   808                           
   809                           ;main.c: 45:             _delay((unsigned long)((150)*(20000000/4000.0)));
   810  0645  3004               	movlw	4
   811  0646  1283               	bcf	3,5	;RP0=0, select bank0
   812  0647  1303               	bcf	3,6	;RP1=0, select bank0
   813  0648  00B0               	movwf	??_main+2
   814  0649  30CF               	movlw	207
   815  064A  00AF               	movwf	??_main+1
   816  064B  3001               	movlw	1
   817  064C  00AE               	movwf	??_main
   818  064D                     u1307:
   819  064D  0BAE               	decfsz	??_main,f
   820  064E  2E4D               	goto	u1307
   821  064F  0BAF               	decfsz	??_main+1,f
   822  0650  2E4D               	goto	u1307
   823  0651  0BB0               	decfsz	??_main+2,f
   824  0652  2E4D               	goto	u1307
   825  0653                     l1699:
   826                           
   827                           ;main.c: 46:             if(!RB0) {
   828  0653  1283               	bcf	3,5	;RP0=0, select bank0
   829  0654  1303               	bcf	3,6	;RP1=0, select bank0
   830  0655  1806               	btfsc	6,0	;volatile
   831  0656  2E58               	goto	u1181
   832  0657  2E59               	goto	u1180
   833  0658                     u1181:
   834  0658  2EA6               	goto	l1719
   835  0659                     u1180:
   836  0659                     l1701:
   837                           
   838                           ;main.c: 47:                 _delay((unsigned long)((150)*(20000000/4000.0)));
   839  0659  3004               	movlw	4
   840  065A  1283               	bcf	3,5	;RP0=0, select bank0
   841  065B  1303               	bcf	3,6	;RP1=0, select bank0
   842  065C  00B0               	movwf	??_main+2
   843  065D  30CF               	movlw	207
   844  065E  00AF               	movwf	??_main+1
   845  065F  3001               	movlw	1
   846  0660  00AE               	movwf	??_main
   847  0661                     u1317:
   848  0661  0BAE               	decfsz	??_main,f
   849  0662  2E61               	goto	u1317
   850  0663  0BAF               	decfsz	??_main+1,f
   851  0664  2E61               	goto	u1317
   852  0665  0BB0               	decfsz	??_main+2,f
   853  0666  2E61               	goto	u1317
   854  0667                     l1703:
   855                           
   856                           ;main.c: 48:                 data++;
   857  0667  3001               	movlw	1
   858  0668  1283               	bcf	3,5	;RP0=0, select bank0
   859  0669  1303               	bcf	3,6	;RP1=0, select bank0
   860  066A  00AE               	movwf	??_main
   861  066B  082E               	movf	??_main,w
   862  066C  07C6               	addwf	main@data,f
   863  066D                     l1705:
   864                           
   865                           ;main.c: 49:                 if(data == 255) {
   866  066D  0A46               	incf	main@data,w
   867  066E  1D03               	btfss	3,2
   868  066F  2E71               	goto	u1191
   869  0670  2E72               	goto	u1190
   870  0671                     u1191:
   871  0671  2E76               	goto	l1709
   872  0672                     u1190:
   873  0672                     l1707:
   874                           
   875                           ;main.c: 50:                     data = 255;
   876  0672  30FF               	movlw	255
   877  0673  00AE               	movwf	??_main
   878  0674  082E               	movf	??_main,w
   879  0675  00C6               	movwf	main@data
   880  0676                     l1709:
   881                           
   882                           ;main.c: 52:                 sprintf(str1, "%d", data);
   883  0676  3056               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   884  0677  00AE               	movwf	??_main
   885  0678  082E               	movf	??_main,w
   886  0679  00A0               	movwf	sprintf@f
   887  067A  0846               	movf	main@data,w
   888  067B  00AF               	movwf	??_main+1
   889  067C  01B0               	clrf	??_main+2
   890  067D  082F               	movf	??_main+1,w
   891  067E  00A1               	movwf	?_sprintf+1
   892  067F  0830               	movf	??_main+2,w
   893  0680  00A2               	movwf	?_sprintf+2
   894  0681  303B               	movlw	(low (main@str1| 0))& (0+255)
   895  0682  120A  118A  2459  120A  118A  	fcall	_sprintf
   896  0687                     l1711:
   897                           
   898                           ;main.c: 53:                 lcd_clear();
   899  0687  120A  118A  217B  120A  118A  	fcall	_lcd_clear
   900  068C                     l1713:
   901                           
   902                           ;main.c: 54:                 lcd_goto_xy(1,1);
   903  068C  01F3               	clrf	lcd_goto_xy@c
   904  068D  0AF3               	incf	lcd_goto_xy@c,f
   905  068E  3001               	movlw	1
   906  068F  120A  118A  2347  120A  118A  	fcall	_lcd_goto_xy
   907  0694                     l1715:
   908                           
   909                           ;main.c: 55:                 lcd_write_string("value: ");
   910  0694  3047               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   911  0695  00F6               	movwf	lcd_write_string@str
   912  0696  3080               	movlw	128
   913  0697  00F7               	movwf	lcd_write_string@str+1
   914  0698  120A  118A  227E  120A  118A  	fcall	_lcd_write_string
   915  069D                     l1717:
   916                           
   917                           ;main.c: 56:                 lcd_write_string(str1);
   918  069D  303B               	movlw	(low (main@str1| 0))& (0+255)
   919  069E  00F6               	movwf	lcd_write_string@str
   920  069F  3000               	movlw	0
   921  06A0  00F7               	movwf	lcd_write_string@str+1
   922  06A1  120A  118A  227E  120A  118A  	fcall	_lcd_write_string
   923  06A6                     l1719:
   924                           
   925                           ;main.c: 60:         if(!RB1) {
   926  06A6  1283               	bcf	3,5	;RP0=0, select bank0
   927  06A7  1303               	bcf	3,6	;RP1=0, select bank0
   928  06A8  1886               	btfsc	6,1	;volatile
   929  06A9  2EAB               	goto	u1201
   930  06AA  2EAC               	goto	u1200
   931  06AB                     u1201:
   932  06AB  2F08               	goto	l1743
   933  06AC                     u1200:
   934  06AC                     l1721:
   935                           
   936                           ;main.c: 61:             _delay((unsigned long)((150)*(20000000/4000.0)));
   937  06AC  3004               	movlw	4
   938  06AD  1283               	bcf	3,5	;RP0=0, select bank0
   939  06AE  1303               	bcf	3,6	;RP1=0, select bank0
   940  06AF  00B0               	movwf	??_main+2
   941  06B0  30CF               	movlw	207
   942  06B1  00AF               	movwf	??_main+1
   943  06B2  3001               	movlw	1
   944  06B3  00AE               	movwf	??_main
   945  06B4                     u1327:
   946  06B4  0BAE               	decfsz	??_main,f
   947  06B5  2EB4               	goto	u1327
   948  06B6  0BAF               	decfsz	??_main+1,f
   949  06B7  2EB4               	goto	u1327
   950  06B8  0BB0               	decfsz	??_main+2,f
   951  06B9  2EB4               	goto	u1327
   952  06BA                     l1723:
   953                           
   954                           ;main.c: 62:             if(!RB1) {
   955  06BA  1283               	bcf	3,5	;RP0=0, select bank0
   956  06BB  1303               	bcf	3,6	;RP1=0, select bank0
   957  06BC  1886               	btfsc	6,1	;volatile
   958  06BD  2EBF               	goto	u1211
   959  06BE  2EC0               	goto	u1210
   960  06BF                     u1211:
   961  06BF  2F08               	goto	l1743
   962  06C0                     u1210:
   963  06C0                     l1725:
   964                           
   965                           ;main.c: 63:                 _delay((unsigned long)((150)*(20000000/4000.0)));
   966  06C0  3004               	movlw	4
   967  06C1  1283               	bcf	3,5	;RP0=0, select bank0
   968  06C2  1303               	bcf	3,6	;RP1=0, select bank0
   969  06C3  00B0               	movwf	??_main+2
   970  06C4  30CF               	movlw	207
   971  06C5  00AF               	movwf	??_main+1
   972  06C6  3001               	movlw	1
   973  06C7  00AE               	movwf	??_main
   974  06C8                     u1337:
   975  06C8  0BAE               	decfsz	??_main,f
   976  06C9  2EC8               	goto	u1337
   977  06CA  0BAF               	decfsz	??_main+1,f
   978  06CB  2EC8               	goto	u1337
   979  06CC  0BB0               	decfsz	??_main+2,f
   980  06CD  2EC8               	goto	u1337
   981  06CE                     l1727:
   982                           
   983                           ;main.c: 64:                 data--;
   984  06CE  3001               	movlw	1
   985  06CF  1283               	bcf	3,5	;RP0=0, select bank0
   986  06D0  1303               	bcf	3,6	;RP1=0, select bank0
   987  06D1  02C6               	subwf	main@data,f
   988  06D2                     l1729:
   989                           
   990                           ;main.c: 65:                 if(data == 0) {
   991  06D2  0846               	movf	main@data,w
   992  06D3  1D03               	btfss	3,2
   993  06D4  2ED6               	goto	u1221
   994  06D5  2ED7               	goto	u1220
   995  06D6                     u1221:
   996  06D6  2ED8               	goto	l1733
   997  06D7                     u1220:
   998  06D7                     l1731:
   999                           
  1000                           ;main.c: 66:                     data = 0;
  1001  06D7  01C6               	clrf	main@data
  1002  06D8                     l1733:
  1003                           
  1004                           ;main.c: 68:                 sprintf(str1, "%d", data);
  1005  06D8  3056               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1006  06D9  00AE               	movwf	??_main
  1007  06DA  082E               	movf	??_main,w
  1008  06DB  00A0               	movwf	sprintf@f
  1009  06DC  0846               	movf	main@data,w
  1010  06DD  00AF               	movwf	??_main+1
  1011  06DE  01B0               	clrf	??_main+2
  1012  06DF  082F               	movf	??_main+1,w
  1013  06E0  00A1               	movwf	?_sprintf+1
  1014  06E1  0830               	movf	??_main+2,w
  1015  06E2  00A2               	movwf	?_sprintf+2
  1016  06E3  303B               	movlw	(low (main@str1| 0))& (0+255)
  1017  06E4  120A  118A  2459  120A  118A  	fcall	_sprintf
  1018  06E9                     l1735:
  1019                           
  1020                           ;main.c: 69:                 lcd_clear();
  1021  06E9  120A  118A  217B  120A  118A  	fcall	_lcd_clear
  1022  06EE                     l1737:
  1023                           
  1024                           ;main.c: 70:                 lcd_goto_xy(1,1);
  1025  06EE  01F3               	clrf	lcd_goto_xy@c
  1026  06EF  0AF3               	incf	lcd_goto_xy@c,f
  1027  06F0  3001               	movlw	1
  1028  06F1  120A  118A  2347  120A  118A  	fcall	_lcd_goto_xy
  1029  06F6                     l1739:
  1030                           
  1031                           ;main.c: 71:                 lcd_write_string("value: ");
  1032  06F6  3047               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1033  06F7  00F6               	movwf	lcd_write_string@str
  1034  06F8  3080               	movlw	128
  1035  06F9  00F7               	movwf	lcd_write_string@str+1
  1036  06FA  120A  118A  227E  120A  118A  	fcall	_lcd_write_string
  1037  06FF                     l1741:
  1038                           
  1039                           ;main.c: 72:                 lcd_write_string(str1);
  1040  06FF  303B               	movlw	(low (main@str1| 0))& (0+255)
  1041  0700  00F6               	movwf	lcd_write_string@str
  1042  0701  3000               	movlw	0
  1043  0702  00F7               	movwf	lcd_write_string@str+1
  1044  0703  120A  118A  227E  120A  118A  	fcall	_lcd_write_string
  1045  0708                     l1743:
  1046                           
  1047                           ;main.c: 76:         if(!RB3) {
  1048  0708  1283               	bcf	3,5	;RP0=0, select bank0
  1049  0709  1303               	bcf	3,6	;RP1=0, select bank0
  1050  070A  1986               	btfsc	6,3	;volatile
  1051  070B  2F0D               	goto	u1231
  1052  070C  2F0E               	goto	u1230
  1053  070D                     u1231:
  1054  070D  2F72               	goto	l1771
  1055  070E                     u1230:
  1056  070E                     l1745:
  1057                           
  1058                           ;main.c: 77:             _delay((unsigned long)((150)*(20000000/4000.0)));
  1059  070E  3004               	movlw	4
  1060  070F  1283               	bcf	3,5	;RP0=0, select bank0
  1061  0710  1303               	bcf	3,6	;RP1=0, select bank0
  1062  0711  00B0               	movwf	??_main+2
  1063  0712  30CF               	movlw	207
  1064  0713  00AF               	movwf	??_main+1
  1065  0714  3001               	movlw	1
  1066  0715  00AE               	movwf	??_main
  1067  0716                     u1347:
  1068  0716  0BAE               	decfsz	??_main,f
  1069  0717  2F16               	goto	u1347
  1070  0718  0BAF               	decfsz	??_main+1,f
  1071  0719  2F16               	goto	u1347
  1072  071A  0BB0               	decfsz	??_main+2,f
  1073  071B  2F16               	goto	u1347
  1074  071C                     l1747:
  1075                           
  1076                           ;main.c: 78:             if(!RB3) {
  1077  071C  1283               	bcf	3,5	;RP0=0, select bank0
  1078  071D  1303               	bcf	3,6	;RP1=0, select bank0
  1079  071E  1986               	btfsc	6,3	;volatile
  1080  071F  2F21               	goto	u1241
  1081  0720  2F22               	goto	u1240
  1082  0721                     u1241:
  1083  0721  2F72               	goto	l1771
  1084  0722                     u1240:
  1085  0722                     l1749:
  1086                           
  1087                           ;main.c: 79:                 _delay((unsigned long)((150)*(20000000/4000.0)));
  1088  0722  3004               	movlw	4
  1089  0723  1283               	bcf	3,5	;RP0=0, select bank0
  1090  0724  1303               	bcf	3,6	;RP1=0, select bank0
  1091  0725  00B0               	movwf	??_main+2
  1092  0726  30CF               	movlw	207
  1093  0727  00AF               	movwf	??_main+1
  1094  0728  3001               	movlw	1
  1095  0729  00AE               	movwf	??_main
  1096  072A                     u1357:
  1097  072A  0BAE               	decfsz	??_main,f
  1098  072B  2F2A               	goto	u1357
  1099  072C  0BAF               	decfsz	??_main+1,f
  1100  072D  2F2A               	goto	u1357
  1101  072E  0BB0               	decfsz	??_main+2,f
  1102  072F  2F2A               	goto	u1357
  1103  0730                     l1751:
  1104                           
  1105                           ;main.c: 80:                 i2c_is_idle();
  1106  0730  120A  118A  212E  120A  118A  	fcall	_i2c_is_idle
  1107  0735                     l1753:
  1108                           
  1109                           ;main.c: 81:                 i2c_start();
  1110  0735  120A  118A  214B  120A  118A  	fcall	_i2c_start
  1111  073A                     l1755:
  1112                           
  1113                           ;main.c: 82:                 i2c_write(0xA0);
  1114  073A  30A0               	movlw	160
  1115  073B  120A  118A  21F0  120A  118A  	fcall	_i2c_write
  1116  0740                     l1757:
  1117                           
  1118                           ;main.c: 83:                 i2c_write(0x10);
  1119  0740  3010               	movlw	16
  1120  0741  120A  118A  21F0  120A  118A  	fcall	_i2c_write
  1121  0746                     l1759:
  1122                           
  1123                           ;main.c: 84:                 i2c_write(data);
  1124  0746  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0747  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0748  0846               	movf	main@data,w
  1127  0749  120A  118A  21F0  120A  118A  	fcall	_i2c_write
  1128  074E                     l1761:
  1129                           
  1130                           ;main.c: 85:                 i2c_stop();
  1131  074E  120A  118A  215B  120A  118A  	fcall	_i2c_stop
  1132  0753                     l1763:
  1133                           
  1134                           ;main.c: 86:                 lcd_clear();
  1135  0753  120A  118A  217B  120A  118A  	fcall	_lcd_clear
  1136  0758                     l1765:
  1137                           
  1138                           ;main.c: 87:                 lcd_goto_xy(1,1);
  1139  0758  01F3               	clrf	lcd_goto_xy@c
  1140  0759  0AF3               	incf	lcd_goto_xy@c,f
  1141  075A  3001               	movlw	1
  1142  075B  120A  118A  2347  120A  118A  	fcall	_lcd_goto_xy
  1143  0760                     l1767:
  1144                           
  1145                           ;main.c: 88:                 lcd_write_string("write = ");
  1146  0760  303E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1147  0761  00F6               	movwf	lcd_write_string@str
  1148  0762  3080               	movlw	128
  1149  0763  00F7               	movwf	lcd_write_string@str+1
  1150  0764  120A  118A  227E  120A  118A  	fcall	_lcd_write_string
  1151  0769                     l1769:
  1152                           
  1153                           ;main.c: 89:                 lcd_write_string(str1);
  1154  0769  303B               	movlw	(low (main@str1| 0))& (0+255)
  1155  076A  00F6               	movwf	lcd_write_string@str
  1156  076B  3000               	movlw	0
  1157  076C  00F7               	movwf	lcd_write_string@str+1
  1158  076D  120A  118A  227E  120A  118A  	fcall	_lcd_write_string
  1159  0772                     l1771:
  1160                           
  1161                           ;main.c: 93:         if(!RB2) {
  1162  0772  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0773  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0774  1906               	btfsc	6,2	;volatile
  1165  0775  2F77               	goto	u1251
  1166  0776  2F78               	goto	u1250
  1167  0777                     u1251:
  1168  0777  2E3F               	goto	l1695
  1169  0778                     u1250:
  1170  0778                     l1773:
  1171                           
  1172                           ;main.c: 94:             _delay((unsigned long)((150)*(20000000/4000.0)));
  1173  0778  3004               	movlw	4
  1174  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1175  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1176  077B  00B0               	movwf	??_main+2
  1177  077C  30CF               	movlw	207
  1178  077D  00AF               	movwf	??_main+1
  1179  077E  3001               	movlw	1
  1180  077F  00AE               	movwf	??_main
  1181  0780                     u1367:
  1182  0780  0BAE               	decfsz	??_main,f
  1183  0781  2F80               	goto	u1367
  1184  0782  0BAF               	decfsz	??_main+1,f
  1185  0783  2F80               	goto	u1367
  1186  0784  0BB0               	decfsz	??_main+2,f
  1187  0785  2F80               	goto	u1367
  1188  0786                     l1775:
  1189                           
  1190                           ;main.c: 95:             if(!RB2) {
  1191  0786  1283               	bcf	3,5	;RP0=0, select bank0
  1192  0787  1303               	bcf	3,6	;RP1=0, select bank0
  1193  0788  1906               	btfsc	6,2	;volatile
  1194  0789  2F8B               	goto	u1261
  1195  078A  2F8C               	goto	u1260
  1196  078B                     u1261:
  1197  078B  2E3F               	goto	l1695
  1198  078C                     u1260:
  1199  078C                     l1777:
  1200                           
  1201                           ;main.c: 96:                 _delay((unsigned long)((150)*(20000000/4000.0)));
  1202  078C  3004               	movlw	4
  1203  078D  1283               	bcf	3,5	;RP0=0, select bank0
  1204  078E  1303               	bcf	3,6	;RP1=0, select bank0
  1205  078F  00B0               	movwf	??_main+2
  1206  0790  30CF               	movlw	207
  1207  0791  00AF               	movwf	??_main+1
  1208  0792  3001               	movlw	1
  1209  0793  00AE               	movwf	??_main
  1210  0794                     u1377:
  1211  0794  0BAE               	decfsz	??_main,f
  1212  0795  2F94               	goto	u1377
  1213  0796  0BAF               	decfsz	??_main+1,f
  1214  0797  2F94               	goto	u1377
  1215  0798  0BB0               	decfsz	??_main+2,f
  1216  0799  2F94               	goto	u1377
  1217  079A                     l1779:
  1218                           
  1219                           ;main.c: 97:                 i2c_is_idle();
  1220  079A  120A  118A  212E  120A  118A  	fcall	_i2c_is_idle
  1221  079F                     l1781:
  1222                           
  1223                           ;main.c: 98:                 i2c_start();
  1224  079F  120A  118A  214B  120A  118A  	fcall	_i2c_start
  1225  07A4                     l1783:
  1226                           
  1227                           ;main.c: 99:                 i2c_write(0xA0);
  1228  07A4  30A0               	movlw	160
  1229  07A5  120A  118A  21F0  120A  118A  	fcall	_i2c_write
  1230  07AA                     l1785:
  1231                           
  1232                           ;main.c: 100:                 i2c_write(0x10);
  1233  07AA  3010               	movlw	16
  1234  07AB  120A  118A  21F0  120A  118A  	fcall	_i2c_write
  1235  07B0                     l1787:
  1236                           
  1237                           ;main.c: 101:                 i2c_rep_start();
  1238  07B0  120A  118A  213B  120A  118A  	fcall	_i2c_rep_start
  1239  07B5                     l1789:
  1240                           
  1241                           ;main.c: 102:                 i2c_write(0xA1);
  1242  07B5  30A1               	movlw	161
  1243  07B6  120A  118A  21F0  120A  118A  	fcall	_i2c_write
  1244  07BB                     l1791:
  1245                           
  1246                           ;main.c: 103:                 uint8_t received = i2c_read(1);
  1247  07BB  3001               	movlw	1
  1248  07BC  120A  118A  21CC  120A  118A  	fcall	_i2c_read
  1249  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1250  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1251  07C3  00AE               	movwf	??_main
  1252  07C4  082E               	movf	??_main,w
  1253  07C5  00C5               	movwf	main@received
  1254  07C6                     l1793:
  1255                           
  1256                           ;main.c: 104:                 i2c_stop();
  1257  07C6  120A  118A  215B  120A  118A  	fcall	_i2c_stop
  1258  07CB                     l1795:
  1259                           
  1260                           ;main.c: 106:                 sprintf(str2, "%x", received);
  1261  07CB  3059               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1262  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1263  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1264  07CE  00AE               	movwf	??_main
  1265  07CF  082E               	movf	??_main,w
  1266  07D0  00A0               	movwf	sprintf@f
  1267  07D1  0845               	movf	main@received,w
  1268  07D2  00AF               	movwf	??_main+1
  1269  07D3  01B0               	clrf	??_main+2
  1270  07D4  082F               	movf	??_main+1,w
  1271  07D5  00A1               	movwf	?_sprintf+1
  1272  07D6  0830               	movf	??_main+2,w
  1273  07D7  00A2               	movwf	?_sprintf+2
  1274  07D8  3031               	movlw	(low (main@str2| 0))& (0+255)
  1275  07D9  120A  118A  2459  120A  118A  	fcall	_sprintf
  1276  07DE                     l1797:
  1277                           
  1278                           ;main.c: 107:                 lcd_goto_xy(2,1);
  1279  07DE  01F3               	clrf	lcd_goto_xy@c
  1280  07DF  0AF3               	incf	lcd_goto_xy@c,f
  1281  07E0  3002               	movlw	2
  1282  07E1  120A  118A  2347  120A  118A  	fcall	_lcd_goto_xy
  1283  07E6                     l1799:
  1284                           
  1285                           ;main.c: 108:                 lcd_write_string("read = 0x");
  1286  07E6  3034               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1287  07E7  00F6               	movwf	lcd_write_string@str
  1288  07E8  3080               	movlw	128
  1289  07E9  00F7               	movwf	lcd_write_string@str+1
  1290  07EA  120A  118A  227E  120A  118A  	fcall	_lcd_write_string
  1291  07EF                     l1801:
  1292                           
  1293                           ;main.c: 109:                 lcd_write_string(str2);
  1294  07EF  3031               	movlw	(low (main@str2| 0))& (0+255)
  1295  07F0  00F6               	movwf	lcd_write_string@str
  1296  07F1  3000               	movlw	0
  1297  07F2  00F7               	movwf	lcd_write_string@str+1
  1298  07F3  120A  118A  227E  120A  118A  	fcall	_lcd_write_string
  1299  07F8  2E3F               	goto	l1695
  1300  07F9  120A  118A  2800   	ljmp	start
  1301  07FC                     __end_of_main:
  1302                           
  1303                           	psect	text1
  1304  0459                     __ptext1:	
  1305 ;; *************** function _sprintf *****************
  1306 ;; Defined at:
  1307 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  sp              1    wreg     PTR unsigned char 
  1310 ;;		 -> main@str2(10), main@str1(10), 
  1311 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1312 ;;		 -> STR_8(3), STR_5(3), STR_3(3), 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  sp              1   10[BANK0 ] PTR unsigned char 
  1315 ;;		 -> main@str2(10), main@str1(10), 
  1316 ;;  idx             1    6[BANK0 ] unsigned char 
  1317 ;;  tmpval          4    0        struct .
  1318 ;;  val             2   11[BANK0 ] unsigned int 
  1319 ;;  cp              2    0        PTR const unsigned char 
  1320 ;;  len             2    0        unsigned int 
  1321 ;;  c               1   13[BANK0 ] unsigned char 
  1322 ;;  flag            1    9[BANK0 ] unsigned char 
  1323 ;;  prec            1    8[BANK0 ] char 
  1324 ;;  ap              1    7[BANK0 ] PTR void [1]
  1325 ;;		 -> ?_sprintf(2), 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  2    0[BANK0 ] int 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         0       3       0       0       0
  1336 ;;      Locals:         0       8       0       0       0
  1337 ;;      Temps:          0       3       0       0       0
  1338 ;;      Totals:         0      14       0       0       0
  1339 ;;Total ram usage:       14 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    1
  1342 ;; This function calls:
  1343 ;;		___lwdiv
  1344 ;;		___lwmod
  1345 ;; This function is called by:
  1346 ;;		_main
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           
  1351                           ;psect for function _sprintf
  1352  0459                     _sprintf:
  1353                           
  1354                           ;incstack = 0
  1355                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1356                           ;sprintf@sp stored from wreg
  1357  0459  1283               	bcf	3,5	;RP0=0, select bank0
  1358  045A  1303               	bcf	3,6	;RP1=0, select bank0
  1359  045B  00AA               	movwf	sprintf@sp
  1360  045C                     l1567:
  1361                           
  1362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1363  045C  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1364  045D  00A3               	movwf	??_sprintf
  1365  045E  0823               	movf	??_sprintf,w
  1366  045F  00A7               	movwf	sprintf@ap
  1367                           
  1368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1369  0460  2DBC               	goto	l1643
  1370  0461                     l1569:
  1371                           
  1372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1373  0461  3025               	movlw	37
  1374  0462  062D               	xorwf	sprintf@c,w
  1375  0463  1903               	btfsc	3,2
  1376  0464  2C66               	goto	u1071
  1377  0465  2C67               	goto	u1070
  1378  0466                     u1071:
  1379  0466  2C73               	goto	l1575
  1380  0467                     u1070:
  1381  0467                     l1571:
  1382                           
  1383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1384  0467  082D               	movf	sprintf@c,w
  1385  0468  00A3               	movwf	??_sprintf
  1386  0469  082A               	movf	sprintf@sp,w
  1387  046A  0084               	movwf	4
  1388  046B  0823               	movf	??_sprintf,w
  1389  046C  1383               	bcf	3,7	;select IRP bank0
  1390  046D  0080               	movwf	0
  1391  046E                     l1573:
  1392  046E  3001               	movlw	1
  1393  046F  00A3               	movwf	??_sprintf
  1394  0470  0823               	movf	??_sprintf,w
  1395  0471  07AA               	addwf	sprintf@sp,f
  1396                           
  1397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1398  0472  2DBC               	goto	l1643
  1399  0473                     l1575:
  1400                           
  1401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1402  0473  01A9               	clrf	sprintf@flag
  1403                           
  1404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1405  0474  2C77               	goto	l1579
  1406  0475                     l255:	
  1407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 744:   case 'x':
  1408                           
  1409                           
  1410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 747:    flag |= 0
      +                          x80;
  1411  0475  17A9               	bsf	sprintf@flag,7
  1412                           
  1413                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 749:    break;
  1414  0476  2C97               	goto	l254
  1415  0477                     l1579:
  1416  0477  3001               	movlw	1
  1417  0478  07A0               	addwf	sprintf@f,f
  1418  0479  30FF               	movlw	-1
  1419  047A  0720               	addwf	sprintf@f,w
  1420  047B  0084               	movwf	4
  1421  047C  120A  118A  200D  120A  118A  	fcall	stringdir
  1422  0481  00AD               	movwf	sprintf@c
  1423  0482  00A3               	movwf	??_sprintf
  1424  0483  01A4               	clrf	??_sprintf+1
  1425                           
  1426                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1427                           ; Switch size 1, requested type "simple"
  1428                           ; Number of cases is 1, Range of values is 0 to 0
  1429                           ; switch strategies available:
  1430                           ; Name         Instructions Cycles
  1431                           ; simple_byte            4     3 (average)
  1432                           ; direct_byte           11     8 (fixed)
  1433                           ; jumptable            260     6 (fixed)
  1434                           ;	Chosen strategy is simple_byte
  1435  0484  0824               	movf	??_sprintf+1,w
  1436  0485  3A00               	xorlw	0	; case 0
  1437  0486  1903               	skipnz
  1438  0487  2C89               	goto	l1893
  1439  0488  2DBC               	goto	l1643
  1440  0489                     l1893:
  1441                           
  1442                           ; Switch size 1, requested type "simple"
  1443                           ; Number of cases is 4, Range of values is 0 to 120
  1444                           ; switch strategies available:
  1445                           ; Name         Instructions Cycles
  1446                           ; simple_byte           13     7 (average)
  1447                           ; jumptable            260     6 (fixed)
  1448                           ;	Chosen strategy is simple_byte
  1449  0489  0823               	movf	??_sprintf,w
  1450  048A  3A00               	xorlw	0	; case 0
  1451  048B  1903               	skipnz
  1452  048C  2DCE               	goto	l1645
  1453  048D  3A64               	xorlw	100	; case 100
  1454  048E  1903               	skipnz
  1455  048F  2C97               	goto	l254
  1456  0490  3A0D               	xorlw	13	; case 105
  1457  0491  1903               	skipnz
  1458  0492  2C97               	goto	l254
  1459  0493  3A11               	xorlw	17	; case 120
  1460  0494  1903               	skipnz
  1461  0495  2C75               	goto	l255
  1462  0496  2DBC               	goto	l1643
  1463  0497                     l254:
  1464                           
  1465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x80) == 0x00)
  1466  0497  1BA9               	btfsc	sprintf@flag,7
  1467  0498  2C9A               	goto	u1081
  1468  0499  2C9B               	goto	u1080
  1469  049A                     u1081:
  1470  049A  2CB5               	goto	l1591
  1471  049B                     u1080:
  1472  049B                     l1581:
  1473                           
  1474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1475  049B  0827               	movf	sprintf@ap,w
  1476  049C  0084               	movwf	4
  1477  049D  1383               	bcf	3,7	;select IRP bank0
  1478  049E  0800               	movf	0,w
  1479  049F  00AB               	movwf	sprintf@val
  1480  04A0  0A84               	incf	4,f
  1481  04A1  0800               	movf	0,w
  1482  04A2  00AC               	movwf	sprintf@val+1
  1483  04A3                     l1583:
  1484  04A3  3002               	movlw	2
  1485  04A4  00A3               	movwf	??_sprintf
  1486  04A5  0823               	movf	??_sprintf,w
  1487  04A6  07A7               	addwf	sprintf@ap,f
  1488  04A7                     l1585:
  1489                           
  1490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1491  04A7  1FAC               	btfss	sprintf@val+1,7
  1492  04A8  2CAA               	goto	u1091
  1493  04A9  2CAB               	goto	u1090
  1494  04AA                     u1091:
  1495  04AA  2D14               	goto	l1617
  1496  04AB                     u1090:
  1497  04AB                     l1587:
  1498                           
  1499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1500  04AB  3003               	movlw	3
  1501  04AC  00A3               	movwf	??_sprintf
  1502  04AD  0823               	movf	??_sprintf,w
  1503  04AE  04A9               	iorwf	sprintf@flag,f
  1504  04AF                     l1589:
  1505                           
  1506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1507  04AF  09AB               	comf	sprintf@val,f
  1508  04B0  09AC               	comf	sprintf@val+1,f
  1509  04B1  0AAB               	incf	sprintf@val,f
  1510  04B2  1903               	skipnz
  1511  04B3  0AAC               	incf	sprintf@val+1,f
  1512  04B4  2D14               	goto	l1617
  1513  04B5                     l1591:
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1516  04B5  0827               	movf	sprintf@ap,w
  1517  04B6  0084               	movwf	4
  1518  04B7  1383               	bcf	3,7	;select IRP bank0
  1519  04B8  0800               	movf	0,w
  1520  04B9  00AB               	movwf	sprintf@val
  1521  04BA  0A84               	incf	4,f
  1522  04BB  0800               	movf	0,w
  1523  04BC  00AC               	movwf	sprintf@val+1
  1524  04BD                     l1593:
  1525  04BD  3002               	movlw	2
  1526  04BE  00A3               	movwf	??_sprintf
  1527  04BF  0823               	movf	??_sprintf,w
  1528  04C0  07A7               	addwf	sprintf@ap,f
  1529  04C1  2D14               	goto	l1617
  1530  04C2                     l261:	
  1531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1325:   case 0x00
      +                          :
  1532                           
  1533                           
  1534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1535  04C2  01AD               	clrf	sprintf@c
  1536  04C3  0AAD               	incf	sprintf@c,f
  1537  04C4                     l1599:
  1538                           
  1539                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1540  04C4  082D               	movf	sprintf@c,w
  1541  04C5  00A3               	movwf	??_sprintf
  1542  04C6  0723               	addwf	??_sprintf,w
  1543  04C7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1544  04C8  0084               	movwf	4
  1545  04C9  120A  118A  200D  120A  118A  	fcall	stringdir
  1546  04CE  00A4               	movwf	??_sprintf+1
  1547  04CF  120A  118A  200D  120A  118A  	fcall	stringdir
  1548  04D4  00A5               	movwf	??_sprintf+2
  1549  04D5  0825               	movf	??_sprintf+2,w
  1550  04D6  022C               	subwf	sprintf@val+1,w
  1551  04D7  1D03               	skipz
  1552  04D8  2CDB               	goto	u1105
  1553  04D9  0824               	movf	??_sprintf+1,w
  1554  04DA  022B               	subwf	sprintf@val,w
  1555  04DB                     u1105:
  1556  04DB  1803               	skipnc
  1557  04DC  2CDE               	goto	u1101
  1558  04DD  2CDF               	goto	u1100
  1559  04DE                     u1101:
  1560  04DE  2CE0               	goto	l1603
  1561  04DF                     u1100:
  1562  04DF  2D25               	goto	l1619
  1563  04E0                     l1603:
  1564  04E0  3001               	movlw	1
  1565  04E1  00A3               	movwf	??_sprintf
  1566  04E2  0823               	movf	??_sprintf,w
  1567  04E3  07AD               	addwf	sprintf@c,f
  1568  04E4  3005               	movlw	5
  1569  04E5  062D               	xorwf	sprintf@c,w
  1570  04E6  1D03               	btfss	3,2
  1571  04E7  2CE9               	goto	u1111
  1572  04E8  2CEA               	goto	u1110
  1573  04E9                     u1111:
  1574  04E9  2CC4               	goto	l1599
  1575  04EA                     u1110:
  1576  04EA  2D25               	goto	l1619
  1577  04EB                     l266:	
  1578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1340:   case 0x80
      +                          :
  1579                           
  1580                           
  1581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1342:    for(c = 
      +                          1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1582  04EB  01AD               	clrf	sprintf@c
  1583  04EC  0AAD               	incf	sprintf@c,f
  1584  04ED                     l1609:
  1585                           
  1586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1343:     if(val 
      +                          < hexpowers[c])
  1587  04ED  082D               	movf	sprintf@c,w
  1588  04EE  00A3               	movwf	??_sprintf
  1589  04EF  0723               	addwf	??_sprintf,w
  1590  04F0  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  1591  04F1  0084               	movwf	4
  1592  04F2  120A  118A  200D  120A  118A  	fcall	stringdir
  1593  04F7  00A4               	movwf	??_sprintf+1
  1594  04F8  120A  118A  200D  120A  118A  	fcall	stringdir
  1595  04FD  00A5               	movwf	??_sprintf+2
  1596  04FE  0825               	movf	??_sprintf+2,w
  1597  04FF  022C               	subwf	sprintf@val+1,w
  1598  0500  1D03               	skipz
  1599  0501  2D04               	goto	u1125
  1600  0502  0824               	movf	??_sprintf+1,w
  1601  0503  022B               	subwf	sprintf@val,w
  1602  0504                     u1125:
  1603  0504  1803               	skipnc
  1604  0505  2D07               	goto	u1121
  1605  0506  2D08               	goto	u1120
  1606  0507                     u1121:
  1607  0507  2D09               	goto	l1613
  1608  0508                     u1120:
  1609  0508  2D25               	goto	l1619
  1610  0509                     l1613:
  1611  0509  3001               	movlw	1
  1612  050A  00A3               	movwf	??_sprintf
  1613  050B  0823               	movf	??_sprintf,w
  1614  050C  07AD               	addwf	sprintf@c,f
  1615  050D  3004               	movlw	4
  1616  050E  062D               	xorwf	sprintf@c,w
  1617  050F  1D03               	btfss	3,2
  1618  0510  2D12               	goto	u1131
  1619  0511  2D13               	goto	u1130
  1620  0512                     u1131:
  1621  0512  2CED               	goto	l1609
  1622  0513                     u1130:
  1623  0513  2D25               	goto	l1619
  1624  0514                     l1617:
  1625  0514  0829               	movf	sprintf@flag,w
  1626  0515  3980               	andlw	128
  1627  0516  00A3               	movwf	??_sprintf
  1628  0517  01A4               	clrf	??_sprintf+1
  1629                           
  1630                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1631                           ; Switch size 1, requested type "simple"
  1632                           ; Number of cases is 1, Range of values is 0 to 0
  1633                           ; switch strategies available:
  1634                           ; Name         Instructions Cycles
  1635                           ; simple_byte            4     3 (average)
  1636                           ; direct_byte           11     8 (fixed)
  1637                           ; jumptable            260     6 (fixed)
  1638                           ;	Chosen strategy is simple_byte
  1639  0518  0824               	movf	??_sprintf+1,w
  1640  0519  3A00               	xorlw	0	; case 0
  1641  051A  1903               	skipnz
  1642  051B  2D1D               	goto	l1895
  1643  051C  2D25               	goto	l1619
  1644  051D                     l1895:
  1645                           
  1646                           ; Switch size 1, requested type "simple"
  1647                           ; Number of cases is 2, Range of values is 0 to 128
  1648                           ; switch strategies available:
  1649                           ; Name         Instructions Cycles
  1650                           ; simple_byte            7     4 (average)
  1651                           ; jumptable            260     6 (fixed)
  1652                           ;	Chosen strategy is simple_byte
  1653  051D  0823               	movf	??_sprintf,w
  1654  051E  3A00               	xorlw	0	; case 0
  1655  051F  1903               	skipnz
  1656  0520  2CC2               	goto	l261
  1657  0521  3A80               	xorlw	128	; case 128
  1658  0522  1903               	skipnz
  1659  0523  2CEB               	goto	l266
  1660  0524  2D25               	goto	l1619
  1661  0525                     l1619:
  1662                           
  1663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1664  0525  0829               	movf	sprintf@flag,w
  1665  0526  3903               	andlw	3
  1666  0527  1903               	btfsc	3,2
  1667  0528  2D2A               	goto	u1141
  1668  0529  2D2B               	goto	u1140
  1669  052A                     u1141:
  1670  052A  2D36               	goto	l1625
  1671  052B                     u1140:
  1672  052B                     l1621:
  1673                           
  1674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1675  052B  302D               	movlw	45
  1676  052C  00A3               	movwf	??_sprintf
  1677  052D  082A               	movf	sprintf@sp,w
  1678  052E  0084               	movwf	4
  1679  052F  0823               	movf	??_sprintf,w
  1680  0530  1383               	bcf	3,7	;select IRP bank0
  1681  0531  0080               	movwf	0
  1682  0532                     l1623:
  1683  0532  3001               	movlw	1
  1684  0533  00A3               	movwf	??_sprintf
  1685  0534  0823               	movf	??_sprintf,w
  1686  0535  07AA               	addwf	sprintf@sp,f
  1687  0536                     l1625:
  1688                           
  1689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1690  0536  082D               	movf	sprintf@c,w
  1691  0537  00A3               	movwf	??_sprintf
  1692  0538  0823               	movf	??_sprintf,w
  1693  0539  00A8               	movwf	sprintf@prec
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1696  053A  2DB3               	goto	l1641
  1697  053B                     l1627:
  1698                           
  1699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (va
      +                          l / dpowers[(unsigned char)prec]) % 10 + '0';
  1700  053B  300A               	movlw	10
  1701  053C  00F8               	movwf	___lwmod@divisor
  1702  053D  3000               	movlw	0
  1703  053E  00F9               	movwf	___lwmod@divisor+1
  1704  053F  0828               	movf	sprintf@prec,w
  1705  0540  00A3               	movwf	??_sprintf
  1706  0541  0723               	addwf	??_sprintf,w
  1707  0542  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1708  0543  0084               	movwf	4
  1709  0544  120A  118A  200D  120A  118A  	fcall	stringdir
  1710  0549  00F0               	movwf	___lwdiv@divisor
  1711  054A  120A  118A  200D  120A  118A  	fcall	stringdir
  1712  054F  00F1               	movwf	___lwdiv@divisor+1
  1713  0550  082C               	movf	sprintf@val+1,w
  1714  0551  00F3               	movwf	___lwdiv@dividend+1
  1715  0552  082B               	movf	sprintf@val,w
  1716  0553  00F2               	movwf	___lwdiv@dividend
  1717  0554  120A  118A  2303  120A  118A  	fcall	___lwdiv
  1718  0559  0871               	movf	?___lwdiv+1,w
  1719  055A  00FB               	movwf	___lwmod@dividend+1
  1720  055B  0870               	movf	?___lwdiv,w
  1721  055C  00FA               	movwf	___lwmod@dividend
  1722  055D  120A  118A  2244  120A  118A  	fcall	___lwmod
  1723  0562  0878               	movf	?___lwmod,w
  1724  0563  3E30               	addlw	48
  1725  0564  1283               	bcf	3,5	;RP0=0, select bank0
  1726  0565  1303               	bcf	3,6	;RP1=0, select bank0
  1727  0566  00A4               	movwf	??_sprintf+1
  1728  0567  0824               	movf	??_sprintf+1,w
  1729  0568  00AD               	movwf	sprintf@c
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1517:     break;
  1732  0569  2DA8               	goto	l1637
  1733  056A                     l1629:
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1525:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1526:     unsigned char 
      +                          idx = (val / hexpowers[(unsigned char)prec]) & 0xF;
  1736  056A  0828               	movf	sprintf@prec,w
  1737  056B  00A3               	movwf	??_sprintf
  1738  056C  0723               	addwf	??_sprintf,w
  1739  056D  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  1740  056E  0084               	movwf	4
  1741  056F  120A  118A  200D  120A  118A  	fcall	stringdir
  1742  0574  00F0               	movwf	___lwdiv@divisor
  1743  0575  120A  118A  200D  120A  118A  	fcall	stringdir
  1744  057A  00F1               	movwf	___lwdiv@divisor+1
  1745  057B  082C               	movf	sprintf@val+1,w
  1746  057C  00F3               	movwf	___lwdiv@dividend+1
  1747  057D  082B               	movf	sprintf@val,w
  1748  057E  00F2               	movwf	___lwdiv@dividend
  1749  057F  120A  118A  2303  120A  118A  	fcall	___lwdiv
  1750  0584  0870               	movf	?___lwdiv,w
  1751  0585  390F               	andlw	15
  1752  0586  1283               	bcf	3,5	;RP0=0, select bank0
  1753  0587  1303               	bcf	3,6	;RP1=0, select bank0
  1754  0588  00A4               	movwf	??_sprintf+1
  1755  0589  0824               	movf	??_sprintf+1,w
  1756  058A  00A6               	movwf	sprintf@idx
  1757  058B                     l1631:
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1532:     c = "01
      +                          23456789abcdef"[idx];
  1760  058B  0826               	movf	sprintf@idx,w
  1761  058C  3E13               	addlw	low ((STR_10-__stringbase)| (0+32768))
  1762  058D  0084               	movwf	4
  1763  058E  120A  118A  200D  120A  118A  	fcall	stringdir
  1764  0593  00A3               	movwf	??_sprintf
  1765  0594  0823               	movf	??_sprintf,w
  1766  0595  00AD               	movwf	sprintf@c
  1767                           
  1768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1534:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1536:     break;
  1769  0596  2DA8               	goto	l1637
  1770  0597                     l1635:
  1771  0597  0829               	movf	sprintf@flag,w
  1772  0598  3980               	andlw	128
  1773  0599  00A3               	movwf	??_sprintf
  1774  059A  01A4               	clrf	??_sprintf+1
  1775                           
  1776                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1777                           ; Switch size 1, requested type "simple"
  1778                           ; Number of cases is 1, Range of values is 0 to 0
  1779                           ; switch strategies available:
  1780                           ; Name         Instructions Cycles
  1781                           ; simple_byte            4     3 (average)
  1782                           ; direct_byte           11     8 (fixed)
  1783                           ; jumptable            260     6 (fixed)
  1784                           ;	Chosen strategy is simple_byte
  1785  059B  0824               	movf	??_sprintf+1,w
  1786  059C  3A00               	xorlw	0	; case 0
  1787  059D  1903               	skipnz
  1788  059E  2DA0               	goto	l1897
  1789  059F  2DA8               	goto	l1637
  1790  05A0                     l1897:
  1791                           
  1792                           ; Switch size 1, requested type "simple"
  1793                           ; Number of cases is 2, Range of values is 0 to 128
  1794                           ; switch strategies available:
  1795                           ; Name         Instructions Cycles
  1796                           ; simple_byte            7     4 (average)
  1797                           ; jumptable            260     6 (fixed)
  1798                           ;	Chosen strategy is simple_byte
  1799  05A0  0823               	movf	??_sprintf,w
  1800  05A1  3A00               	xorlw	0	; case 0
  1801  05A2  1903               	skipnz
  1802  05A3  2D3B               	goto	l1627
  1803  05A4  3A80               	xorlw	128	; case 128
  1804  05A5  1903               	skipnz
  1805  05A6  2D6A               	goto	l1629
  1806  05A7  2DA8               	goto	l1637
  1807  05A8                     l1637:
  1808                           
  1809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ 
      +                          = (c)));
  1810  05A8  082D               	movf	sprintf@c,w
  1811  05A9  00A3               	movwf	??_sprintf
  1812  05AA  082A               	movf	sprintf@sp,w
  1813  05AB  0084               	movwf	4
  1814  05AC  0823               	movf	??_sprintf,w
  1815  05AD  1383               	bcf	3,7	;select IRP bank0
  1816  05AE  0080               	movwf	0
  1817  05AF                     l1639:
  1818  05AF  3001               	movlw	1
  1819  05B0  00A3               	movwf	??_sprintf
  1820  05B1  0823               	movf	??_sprintf,w
  1821  05B2  07AA               	addwf	sprintf@sp,f
  1822  05B3                     l1641:
  1823                           
  1824                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1825  05B3  30FF               	movlw	255
  1826  05B4  00A3               	movwf	??_sprintf
  1827  05B5  0823               	movf	??_sprintf,w
  1828  05B6  07A8               	addwf	sprintf@prec,f
  1829  05B7  0A28               	incf	sprintf@prec,w
  1830  05B8  1D03               	btfss	3,2
  1831  05B9  2DBB               	goto	u1151
  1832  05BA  2DBC               	goto	u1150
  1833  05BB                     u1151:
  1834  05BB  2D97               	goto	l1635
  1835  05BC                     u1150:
  1836  05BC                     l1643:
  1837                           
  1838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1839  05BC  3001               	movlw	1
  1840  05BD  07A0               	addwf	sprintf@f,f
  1841  05BE  30FF               	movlw	-1
  1842  05BF  0720               	addwf	sprintf@f,w
  1843  05C0  0084               	movwf	4
  1844  05C1  120A  118A  200D  120A  118A  	fcall	stringdir
  1845  05C6  00A3               	movwf	??_sprintf
  1846  05C7  0823               	movf	??_sprintf,w
  1847  05C8  00AD               	movwf	sprintf@c
  1848  05C9  082D               	movf	sprintf@c,w
  1849  05CA  1D03               	btfss	3,2
  1850  05CB  2DCD               	goto	u1161
  1851  05CC  2DCE               	goto	u1160
  1852  05CD                     u1161:
  1853  05CD  2C61               	goto	l1569
  1854  05CE                     u1160:
  1855  05CE                     l1645:
  1856                           
  1857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1858  05CE  082A               	movf	sprintf@sp,w
  1859  05CF  0084               	movwf	4
  1860  05D0  1383               	bcf	3,7	;select IRP bank0
  1861  05D1  0180               	clrf	0
  1862  05D2                     l279:
  1863  05D2  0008               	return
  1864  05D3                     __end_of_sprintf:
  1865                           
  1866                           	psect	text2
  1867  0244                     __ptext2:	
  1868 ;; *************** function ___lwmod *****************
  1869 ;; Defined at:
  1870 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  divisor         2    8[COMMON] unsigned int 
  1873 ;;  dividend        2   10[COMMON] unsigned int 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  counter         1   13[COMMON] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2    8[COMMON] unsigned int 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         4       0       0       0       0
  1886 ;;      Locals:         1       0       0       0       0
  1887 ;;      Temps:          1       0       0       0       0
  1888 ;;      Totals:         6       0       0       0       0
  1889 ;;Total ram usage:        6 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_sprintf
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           
  1899                           ;psect for function ___lwmod
  1900  0244                     ___lwmod:
  1901  0244                     l1433:	
  1902                           ;incstack = 0
  1903                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1904                           
  1905  0244  0878               	movf	___lwmod@divisor,w
  1906  0245  0479               	iorwf	___lwmod@divisor+1,w
  1907  0246  1903               	btfsc	3,2
  1908  0247  2A49               	goto	u861
  1909  0248  2A4A               	goto	u860
  1910  0249                     u861:
  1911  0249  2A79               	goto	l1451
  1912  024A                     u860:
  1913  024A                     l1435:
  1914  024A  01FD               	clrf	___lwmod@counter
  1915  024B  0AFD               	incf	___lwmod@counter,f
  1916  024C  2A58               	goto	l1441
  1917  024D                     l1437:
  1918  024D  3001               	movlw	1
  1919  024E                     u875:
  1920  024E  1003               	clrc
  1921  024F  0DF8               	rlf	___lwmod@divisor,f
  1922  0250  0DF9               	rlf	___lwmod@divisor+1,f
  1923  0251  3EFF               	addlw	-1
  1924  0252  1D03               	skipz
  1925  0253  2A4E               	goto	u875
  1926  0254                     l1439:
  1927  0254  3001               	movlw	1
  1928  0255  00FC               	movwf	??___lwmod
  1929  0256  087C               	movf	??___lwmod,w
  1930  0257  07FD               	addwf	___lwmod@counter,f
  1931  0258                     l1441:
  1932  0258  1FF9               	btfss	___lwmod@divisor+1,7
  1933  0259  2A5B               	goto	u881
  1934  025A  2A5C               	goto	u880
  1935  025B                     u881:
  1936  025B  2A4D               	goto	l1437
  1937  025C                     u880:
  1938  025C                     l1443:
  1939  025C  0879               	movf	___lwmod@divisor+1,w
  1940  025D  027B               	subwf	___lwmod@dividend+1,w
  1941  025E  1D03               	skipz
  1942  025F  2A62               	goto	u895
  1943  0260  0878               	movf	___lwmod@divisor,w
  1944  0261  027A               	subwf	___lwmod@dividend,w
  1945  0262                     u895:
  1946  0262  1C03               	skipc
  1947  0263  2A65               	goto	u891
  1948  0264  2A66               	goto	u890
  1949  0265                     u891:
  1950  0265  2A6C               	goto	l1447
  1951  0266                     u890:
  1952  0266                     l1445:
  1953  0266  0878               	movf	___lwmod@divisor,w
  1954  0267  02FA               	subwf	___lwmod@dividend,f
  1955  0268  0879               	movf	___lwmod@divisor+1,w
  1956  0269  1C03               	skipc
  1957  026A  03FB               	decf	___lwmod@dividend+1,f
  1958  026B  02FB               	subwf	___lwmod@dividend+1,f
  1959  026C                     l1447:
  1960  026C  3001               	movlw	1
  1961  026D                     u905:
  1962  026D  1003               	clrc
  1963  026E  0CF9               	rrf	___lwmod@divisor+1,f
  1964  026F  0CF8               	rrf	___lwmod@divisor,f
  1965  0270  3EFF               	addlw	-1
  1966  0271  1D03               	skipz
  1967  0272  2A6D               	goto	u905
  1968  0273                     l1449:
  1969  0273  3001               	movlw	1
  1970  0274  02FD               	subwf	___lwmod@counter,f
  1971  0275  1D03               	btfss	3,2
  1972  0276  2A78               	goto	u911
  1973  0277  2A79               	goto	u910
  1974  0278                     u911:
  1975  0278  2A5C               	goto	l1443
  1976  0279                     u910:
  1977  0279                     l1451:
  1978  0279  087B               	movf	___lwmod@dividend+1,w
  1979  027A  00F9               	movwf	?___lwmod+1
  1980  027B  087A               	movf	___lwmod@dividend,w
  1981  027C  00F8               	movwf	?___lwmod
  1982  027D                     l565:
  1983  027D  0008               	return
  1984  027E                     __end_of___lwmod:
  1985                           
  1986                           	psect	text3
  1987  0303                     __ptext3:	
  1988 ;; *************** function ___lwdiv *****************
  1989 ;; Defined at:
  1990 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  divisor         2    0[COMMON] unsigned int 
  1993 ;;  dividend        2    2[COMMON] unsigned int 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  quotient        2    5[COMMON] unsigned int 
  1996 ;;  counter         1    7[COMMON] unsigned char 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  2    0[COMMON] unsigned int 
  1999 ;; Registers used:
  2000 ;;		wreg, status,2, status,0
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2006 ;;      Params:         4       0       0       0       0
  2007 ;;      Locals:         3       0       0       0       0
  2008 ;;      Temps:          1       0       0       0       0
  2009 ;;      Totals:         8       0       0       0       0
  2010 ;;Total ram usage:        8 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; This function calls:
  2013 ;;		Nothing
  2014 ;; This function is called by:
  2015 ;;		_sprintf
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           
  2020                           ;psect for function ___lwdiv
  2021  0303                     ___lwdiv:
  2022  0303                     l1407:	
  2023                           ;incstack = 0
  2024                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2025                           
  2026  0303  01F5               	clrf	___lwdiv@quotient
  2027  0304  01F6               	clrf	___lwdiv@quotient+1
  2028  0305                     l1409:
  2029  0305  0870               	movf	___lwdiv@divisor,w
  2030  0306  0471               	iorwf	___lwdiv@divisor+1,w
  2031  0307  1903               	btfsc	3,2
  2032  0308  2B0A               	goto	u791
  2033  0309  2B0B               	goto	u790
  2034  030A                     u791:
  2035  030A  2B42               	goto	l1429
  2036  030B                     u790:
  2037  030B                     l1411:
  2038  030B  01F7               	clrf	___lwdiv@counter
  2039  030C  0AF7               	incf	___lwdiv@counter,f
  2040  030D  2B19               	goto	l1417
  2041  030E                     l1413:
  2042  030E  3001               	movlw	1
  2043  030F                     u805:
  2044  030F  1003               	clrc
  2045  0310  0DF0               	rlf	___lwdiv@divisor,f
  2046  0311  0DF1               	rlf	___lwdiv@divisor+1,f
  2047  0312  3EFF               	addlw	-1
  2048  0313  1D03               	skipz
  2049  0314  2B0F               	goto	u805
  2050  0315                     l1415:
  2051  0315  3001               	movlw	1
  2052  0316  00F4               	movwf	??___lwdiv
  2053  0317  0874               	movf	??___lwdiv,w
  2054  0318  07F7               	addwf	___lwdiv@counter,f
  2055  0319                     l1417:
  2056  0319  1FF1               	btfss	___lwdiv@divisor+1,7
  2057  031A  2B1C               	goto	u811
  2058  031B  2B1D               	goto	u810
  2059  031C                     u811:
  2060  031C  2B0E               	goto	l1413
  2061  031D                     u810:
  2062  031D                     l1419:
  2063  031D  3001               	movlw	1
  2064  031E                     u825:
  2065  031E  1003               	clrc
  2066  031F  0DF5               	rlf	___lwdiv@quotient,f
  2067  0320  0DF6               	rlf	___lwdiv@quotient+1,f
  2068  0321  3EFF               	addlw	-1
  2069  0322  1D03               	skipz
  2070  0323  2B1E               	goto	u825
  2071  0324  0871               	movf	___lwdiv@divisor+1,w
  2072  0325  0273               	subwf	___lwdiv@dividend+1,w
  2073  0326  1D03               	skipz
  2074  0327  2B2A               	goto	u835
  2075  0328  0870               	movf	___lwdiv@divisor,w
  2076  0329  0272               	subwf	___lwdiv@dividend,w
  2077  032A                     u835:
  2078  032A  1C03               	skipc
  2079  032B  2B2D               	goto	u831
  2080  032C  2B2E               	goto	u830
  2081  032D                     u831:
  2082  032D  2B35               	goto	l1425
  2083  032E                     u830:
  2084  032E                     l1421:
  2085  032E  0870               	movf	___lwdiv@divisor,w
  2086  032F  02F2               	subwf	___lwdiv@dividend,f
  2087  0330  0871               	movf	___lwdiv@divisor+1,w
  2088  0331  1C03               	skipc
  2089  0332  03F3               	decf	___lwdiv@dividend+1,f
  2090  0333  02F3               	subwf	___lwdiv@dividend+1,f
  2091  0334                     l1423:
  2092  0334  1475               	bsf	___lwdiv@quotient,0
  2093  0335                     l1425:
  2094  0335  3001               	movlw	1
  2095  0336                     u845:
  2096  0336  1003               	clrc
  2097  0337  0CF1               	rrf	___lwdiv@divisor+1,f
  2098  0338  0CF0               	rrf	___lwdiv@divisor,f
  2099  0339  3EFF               	addlw	-1
  2100  033A  1D03               	skipz
  2101  033B  2B36               	goto	u845
  2102  033C                     l1427:
  2103  033C  3001               	movlw	1
  2104  033D  02F7               	subwf	___lwdiv@counter,f
  2105  033E  1D03               	btfss	3,2
  2106  033F  2B41               	goto	u851
  2107  0340  2B42               	goto	u850
  2108  0341                     u851:
  2109  0341  2B1D               	goto	l1419
  2110  0342                     u850:
  2111  0342                     l1429:
  2112  0342  0876               	movf	___lwdiv@quotient+1,w
  2113  0343  00F1               	movwf	?___lwdiv+1
  2114  0344  0875               	movf	___lwdiv@quotient,w
  2115  0345  00F0               	movwf	?___lwdiv
  2116  0346                     l555:
  2117  0346  0008               	return
  2118  0347                     __end_of___lwdiv:
  2119                           
  2120                           	psect	text4
  2121  027E                     __ptext4:	
  2122 ;; *************** function _lcd_write_string *****************
  2123 ;; Defined at:
  2124 ;;		line 124 in file "./lcd-4bit.h"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;  str             2    6[COMMON] PTR unsigned char 
  2127 ;;		 -> STR_9(10), main@str2(10), STR_7(9), STR_6(8), 
  2128 ;;		 -> STR_4(8), main@str1(10), STR_2(16), STR_1(7), 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  i               2   11[COMMON] int 
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2140 ;;      Params:         2       0       0       0       0
  2141 ;;      Locals:         2       0       0       0       0
  2142 ;;      Temps:          3       0       0       0       0
  2143 ;;      Totals:         7       0       0       0       0
  2144 ;;Total ram usage:        7 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; Hardware stack levels required when called:    2
  2147 ;; This function calls:
  2148 ;;		_lcd_write
  2149 ;; This function is called by:
  2150 ;;		_main
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           
  2155                           ;psect for function _lcd_write_string
  2156  027E                     _lcd_write_string:
  2157  027E                     l1559:	
  2158                           ;incstack = 0
  2159                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2160                           
  2161                           
  2162                           ;./lcd-4bit.h: 126:     for (int i = 0; str[i] != '\0'; i++) {
  2163  027E  01FB               	clrf	lcd_write_string@i
  2164  027F  01FC               	clrf	lcd_write_string@i+1
  2165  0280  2AA3               	goto	l1565
  2166  0281                     l1561:
  2167                           
  2168                           ;./lcd-4bit.h: 127:         lcd_write(str[i]);
  2169  0281  087B               	movf	lcd_write_string@i,w
  2170  0282  0776               	addwf	lcd_write_string@str,w
  2171  0283  00F9               	movwf	??_lcd_write_string+1
  2172  0284  0877               	movf	lcd_write_string@str+1,w
  2173  0285  00F8               	movwf	??_lcd_write_string
  2174  0286  1803               	skipnc
  2175  0287  0AF8               	incf	??_lcd_write_string,f
  2176  0288  1FFB               	btfss	lcd_write_string@i,7
  2177  0289  2A8B               	goto	u1040
  2178  028A  03F8               	decf	??_lcd_write_string,f
  2179  028B                     u1040:
  2180  028B  0878               	movf	??_lcd_write_string,w
  2181  028C  00FA               	movwf	??_lcd_write_string+2
  2182  028D  087A               	movf	??_lcd_write_string+2,w
  2183  028E  1283               	bcf	3,5	;RP0=0, select bank0
  2184  028F  1303               	bcf	3,6	;RP1=0, select bank0
  2185  0290  00FF               	movwf	btemp+1
  2186  0291  0879               	movf	??_lcd_write_string+1,w
  2187  0292  0084               	movwf	4
  2188  0293  120A  118A  2003  120A  118A  	fcall	stringtab
  2189  0298  120A  118A  2217  120A  118A  	fcall	_lcd_write
  2190  029D                     l1563:
  2191                           
  2192                           ;./lcd-4bit.h: 128:     }
  2193  029D  3001               	movlw	1
  2194  029E  07FB               	addwf	lcd_write_string@i,f
  2195  029F  1803               	skipnc
  2196  02A0  0AFC               	incf	lcd_write_string@i+1,f
  2197  02A1  3000               	movlw	0
  2198  02A2  07FC               	addwf	lcd_write_string@i+1,f
  2199  02A3                     l1565:
  2200  02A3  087B               	movf	lcd_write_string@i,w
  2201  02A4  0776               	addwf	lcd_write_string@str,w
  2202  02A5  00F9               	movwf	??_lcd_write_string+1
  2203  02A6  0877               	movf	lcd_write_string@str+1,w
  2204  02A7  00F8               	movwf	??_lcd_write_string
  2205  02A8  1803               	skipnc
  2206  02A9  0AF8               	incf	??_lcd_write_string,f
  2207  02AA  1FFB               	btfss	lcd_write_string@i,7
  2208  02AB  2AAD               	goto	u1050
  2209  02AC  03F8               	decf	??_lcd_write_string,f
  2210  02AD                     u1050:
  2211  02AD  0878               	movf	??_lcd_write_string,w
  2212  02AE  00FA               	movwf	??_lcd_write_string+2
  2213  02AF  087A               	movf	??_lcd_write_string+2,w
  2214  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2215  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  2216  02B2  00FF               	movwf	btemp+1
  2217  02B3  0879               	movf	??_lcd_write_string+1,w
  2218  02B4  0084               	movwf	4
  2219  02B5  120A  118A  2003  120A  118A  	fcall	stringtab
  2220  02BA  3A00               	xorlw	0
  2221  02BB  1D03               	skipz
  2222  02BC  2ABE               	goto	u1061
  2223  02BD  2ABF               	goto	u1060
  2224  02BE                     u1061:
  2225  02BE  2A81               	goto	l1561
  2226  02BF                     u1060:
  2227  02BF                     l129:
  2228  02BF  0008               	return
  2229  02C0                     __end_of_lcd_write_string:
  2230                           
  2231                           	psect	text5
  2232  0217                     __ptext5:	
  2233 ;; *************** function _lcd_write *****************
  2234 ;; Defined at:
  2235 ;;		line 110 in file "./lcd-4bit.h"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  byte            1    wreg     unsigned char 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  byte            1    5[COMMON] unsigned char 
  2240 ;;  high_nibble     1    4[COMMON] unsigned char 
  2241 ;;  low_nibble      1    3[COMMON] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0, pclath, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2251 ;;      Params:         0       0       0       0       0
  2252 ;;      Locals:         3       0       0       0       0
  2253 ;;      Temps:          1       0       0       0       0
  2254 ;;      Totals:         4       0       0       0       0
  2255 ;;Total ram usage:        4 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    1
  2258 ;; This function calls:
  2259 ;;		_lcd_clock
  2260 ;;		_lcd_data
  2261 ;; This function is called by:
  2262 ;;		_lcd_write_string
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           
  2267                           ;psect for function _lcd_write
  2268  0217                     _lcd_write:
  2269                           
  2270                           ;incstack = 0
  2271                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  2272                           ;lcd_write@byte stored from wreg
  2273  0217  00F5               	movwf	lcd_write@byte
  2274  0218                     l1371:
  2275                           
  2276                           ;./lcd-4bit.h: 112:     char low_nibble, high_nibble;;./lcd-4bit.h: 114:     low_nibble 
      +                          = byte & 0x0F;
  2277  0218  0875               	movf	lcd_write@byte,w
  2278  0219  390F               	andlw	15
  2279  021A  00F2               	movwf	??_lcd_write
  2280  021B  0872               	movf	??_lcd_write,w
  2281  021C  00F3               	movwf	lcd_write@low_nibble
  2282                           
  2283                           ;./lcd-4bit.h: 115:     high_nibble = byte & 0xF0;
  2284  021D  0875               	movf	lcd_write@byte,w
  2285  021E  39F0               	andlw	240
  2286  021F  00F2               	movwf	??_lcd_write
  2287  0220  0872               	movf	??_lcd_write,w
  2288  0221  00F4               	movwf	lcd_write@high_nibble
  2289  0222                     l1373:
  2290                           
  2291                           ;./lcd-4bit.h: 117:     RD2 = 1;
  2292  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2293  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2294  0224  1508               	bsf	8,2	;volatile
  2295  0225                     l1375:
  2296                           
  2297                           ;./lcd-4bit.h: 118:     lcd_data(high_nibble >> 4);
  2298  0225  0874               	movf	lcd_write@high_nibble,w
  2299  0226  00F2               	movwf	??_lcd_write
  2300  0227  3004               	movlw	4
  2301  0228                     u715:
  2302  0228  1003               	clrc
  2303  0229  0CF2               	rrf	??_lcd_write,f
  2304  022A  3EFF               	addlw	-1
  2305  022B  1D03               	skipz
  2306  022C  2A28               	goto	u715
  2307  022D  0872               	movf	??_lcd_write,w
  2308  022E  120A  118A  21AA  120A  118A  	fcall	_lcd_data
  2309  0233                     l1377:
  2310                           
  2311                           ;./lcd-4bit.h: 119:     lcd_clock();
  2312  0233  120A  118A  2191  120A  118A  	fcall	_lcd_clock
  2313  0238                     l1379:
  2314                           
  2315                           ;./lcd-4bit.h: 120:     lcd_data(low_nibble);
  2316  0238  0873               	movf	lcd_write@low_nibble,w
  2317  0239  120A  118A  21AA  120A  118A  	fcall	_lcd_data
  2318  023E                     l1381:
  2319                           
  2320                           ;./lcd-4bit.h: 121:     lcd_clock();
  2321  023E  120A  118A  2191  120A  118A  	fcall	_lcd_clock
  2322  0243                     l123:
  2323  0243  0008               	return
  2324  0244                     __end_of_lcd_write:
  2325                           
  2326                           	psect	text6
  2327  0398                     __ptext6:	
  2328 ;; *************** function _lcd_init *****************
  2329 ;; Defined at:
  2330 ;;		line 93 in file "./lcd-4bit.h"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0, pclath, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0
  2346 ;;      Temps:          2       0       0       0       0
  2347 ;;      Totals:         2       0       0       0       0
  2348 ;;Total ram usage:        2 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    2
  2351 ;; This function calls:
  2352 ;;		_lcd_cmd
  2353 ;; This function is called by:
  2354 ;;		_main
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           
  2359                           ;psect for function _lcd_init
  2360  0398                     _lcd_init:
  2361  0398                     l1531:	
  2362                           ;incstack = 0
  2363                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2364                           
  2365                           
  2366                           ;./lcd-4bit.h: 94:     _delay((unsigned long)((20)*(20000000/4000.0)));
  2367  0398  3082               	movlw	130
  2368  0399  00F4               	movwf	??_lcd_init+1
  2369  039A  30DD               	movlw	221
  2370  039B  00F3               	movwf	??_lcd_init
  2371  039C                     u1387:
  2372  039C  0BF3               	decfsz	??_lcd_init,f
  2373  039D  2B9C               	goto	u1387
  2374  039E  0BF4               	decfsz	??_lcd_init+1,f
  2375  039F  2B9C               	goto	u1387
  2376  03A0  2BA1               	nop2
  2377  03A1                     l1533:
  2378                           
  2379                           ;./lcd-4bit.h: 95:     TRISD = TRISD & 0x03;
  2380  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  2381  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  2382  03A3  0808               	movf	8,w	;volatile
  2383  03A4  3903               	andlw	3
  2384  03A5  0088               	movwf	8	;volatile
  2385  03A6                     l1535:
  2386                           
  2387                           ;./lcd-4bit.h: 96:     lcd_cmd(0x03);
  2388  03A6  3003               	movlw	3
  2389  03A7  120A  118A  216B  120A  118A  	fcall	_lcd_cmd
  2390  03AC                     l1537:
  2391                           
  2392                           ;./lcd-4bit.h: 97:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2393  03AC  3021               	movlw	33
  2394  03AD  00F4               	movwf	??_lcd_init+1
  2395  03AE  3076               	movlw	118
  2396  03AF  00F3               	movwf	??_lcd_init
  2397  03B0                     u1397:
  2398  03B0  0BF3               	decfsz	??_lcd_init,f
  2399  03B1  2BB0               	goto	u1397
  2400  03B2  0BF4               	decfsz	??_lcd_init+1,f
  2401  03B3  2BB0               	goto	u1397
  2402  03B4  0000               	nop
  2403  03B5                     l1539:
  2404                           
  2405                           ;./lcd-4bit.h: 98:     lcd_cmd(0x03);
  2406  03B5  3003               	movlw	3
  2407  03B6  120A  118A  216B  120A  118A  	fcall	_lcd_cmd
  2408  03BB                     l1541:
  2409                           
  2410                           ;./lcd-4bit.h: 99:     _delay((unsigned long)((200)*(20000000/4000000.0)));
  2411  03BB  30C7               	movlw	199
  2412  03BC  00F3               	movwf	??_lcd_init
  2413  03BD                     u1407:
  2414  03BD  2BBE               	nop2
  2415  03BE  0BF3               	decfsz	??_lcd_init,f
  2416  03BF  2BBD               	goto	u1407
  2417  03C0  2BC1               	nop2
  2418  03C1  2BC2               	nop2
  2419  03C2                     l1543:
  2420                           
  2421                           ;./lcd-4bit.h: 100:     lcd_cmd(0x03);
  2422  03C2  3003               	movlw	3
  2423  03C3  120A  118A  216B  120A  118A  	fcall	_lcd_cmd
  2424  03C8                     l1545:
  2425                           
  2426                           ;./lcd-4bit.h: 101:     lcd_cmd(0x02);
  2427  03C8  3002               	movlw	2
  2428  03C9  120A  118A  216B  120A  118A  	fcall	_lcd_cmd
  2429  03CE                     l1547:
  2430                           
  2431                           ;./lcd-4bit.h: 102:     lcd_cmd(0x02);
  2432  03CE  3002               	movlw	2
  2433  03CF  120A  118A  216B  120A  118A  	fcall	_lcd_cmd
  2434  03D4                     l1549:
  2435                           
  2436                           ;./lcd-4bit.h: 103:     lcd_cmd(0x08);
  2437  03D4  3008               	movlw	8
  2438  03D5  120A  118A  216B  120A  118A  	fcall	_lcd_cmd
  2439  03DA                     l1551:
  2440                           
  2441                           ;./lcd-4bit.h: 104:     lcd_cmd(0x00);
  2442  03DA  3000               	movlw	0
  2443  03DB  120A  118A  216B  120A  118A  	fcall	_lcd_cmd
  2444  03E0                     l1553:
  2445                           
  2446                           ;./lcd-4bit.h: 105:     lcd_cmd(0x0C);
  2447  03E0  300C               	movlw	12
  2448  03E1  120A  118A  216B  120A  118A  	fcall	_lcd_cmd
  2449  03E6                     l1555:
  2450                           
  2451                           ;./lcd-4bit.h: 106:     lcd_cmd(0x00);
  2452  03E6  3000               	movlw	0
  2453  03E7  120A  118A  216B  120A  118A  	fcall	_lcd_cmd
  2454  03EC                     l1557:
  2455                           
  2456                           ;./lcd-4bit.h: 107:     lcd_cmd(0x06);
  2457  03EC  3006               	movlw	6
  2458  03ED  120A  118A  216B  120A  118A  	fcall	_lcd_cmd
  2459  03F2                     l120:
  2460  03F2  0008               	return
  2461  03F3                     __end_of_lcd_init:
  2462                           
  2463                           	psect	text7
  2464  0347                     __ptext7:	
  2465 ;; *************** function _lcd_goto_xy *****************
  2466 ;; Defined at:
  2467 ;;		line 75 in file "./lcd-4bit.h"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  r               1    wreg     unsigned char 
  2470 ;;  c               1    3[COMMON] unsigned char 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  r               1    6[COMMON] unsigned char 
  2473 ;;  temp            1    9[COMMON] unsigned char 
  2474 ;;  high4           1    8[COMMON] unsigned char 
  2475 ;;  low4            1    7[COMMON] unsigned char 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0, pclath, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2485 ;;      Params:         1       0       0       0       0
  2486 ;;      Locals:         4       0       0       0       0
  2487 ;;      Temps:          2       0       0       0       0
  2488 ;;      Totals:         7       0       0       0       0
  2489 ;;Total ram usage:        7 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    2
  2492 ;; This function calls:
  2493 ;;		_lcd_cmd
  2494 ;; This function is called by:
  2495 ;;		_main
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           
  2500                           ;psect for function _lcd_goto_xy
  2501  0347                     _lcd_goto_xy:
  2502                           
  2503                           ;incstack = 0
  2504                           ; Regs used in _lcd_goto_xy: [wreg+status,2+status,0+pclath+cstack]
  2505                           ;lcd_goto_xy@r stored from wreg
  2506  0347  00F6               	movwf	lcd_goto_xy@r
  2507  0348                     l1511:
  2508                           
  2509                           ;./lcd-4bit.h: 76:     unsigned char temp, low4, high4;;./lcd-4bit.h: 77:     if (r == 1
      +                          ) {
  2510  0348  0376               	decf	lcd_goto_xy@r,w
  2511  0349  1D03               	btfss	3,2
  2512  034A  2B4C               	goto	u1001
  2513  034B  2B4D               	goto	u1000
  2514  034C                     u1001:
  2515  034C  2B6F               	goto	l1521
  2516  034D                     u1000:
  2517  034D                     l1513:
  2518                           
  2519                           ;./lcd-4bit.h: 78:         temp = 0x80 + c - 1;
  2520  034D  0873               	movf	lcd_goto_xy@c,w
  2521  034E  3E7F               	addlw	127
  2522  034F  00F4               	movwf	??_lcd_goto_xy
  2523  0350  0874               	movf	??_lcd_goto_xy,w
  2524  0351  00F9               	movwf	lcd_goto_xy@temp
  2525                           
  2526                           ;./lcd-4bit.h: 79:         high4 = temp >> 4;
  2527  0352  0879               	movf	lcd_goto_xy@temp,w
  2528  0353  00F4               	movwf	??_lcd_goto_xy
  2529  0354  3004               	movlw	4
  2530  0355                     u1015:
  2531  0355  1003               	clrc
  2532  0356  0CF4               	rrf	??_lcd_goto_xy,f
  2533  0357  3EFF               	addlw	-1
  2534  0358  1D03               	skipz
  2535  0359  2B55               	goto	u1015
  2536  035A  0874               	movf	??_lcd_goto_xy,w
  2537  035B  00F5               	movwf	??_lcd_goto_xy+1
  2538  035C  0875               	movf	??_lcd_goto_xy+1,w
  2539  035D  00F8               	movwf	lcd_goto_xy@high4
  2540  035E                     l1515:
  2541                           
  2542                           ;./lcd-4bit.h: 80:         low4 = temp & 0x0F;
  2543  035E  0879               	movf	lcd_goto_xy@temp,w
  2544  035F  390F               	andlw	15
  2545  0360  00F4               	movwf	??_lcd_goto_xy
  2546  0361  0874               	movf	??_lcd_goto_xy,w
  2547  0362  00F7               	movwf	lcd_goto_xy@low4
  2548  0363                     l1517:
  2549                           
  2550                           ;./lcd-4bit.h: 81:         lcd_cmd(high4);
  2551  0363  0878               	movf	lcd_goto_xy@high4,w
  2552  0364  120A  118A  216B  120A  118A  	fcall	_lcd_cmd
  2553  0369                     l1519:
  2554                           
  2555                           ;./lcd-4bit.h: 82:         lcd_cmd(low4);
  2556  0369  0877               	movf	lcd_goto_xy@low4,w
  2557  036A  120A  118A  216B  120A  118A  	fcall	_lcd_cmd
  2558  036F                     l1521:
  2559                           
  2560                           ;./lcd-4bit.h: 84:     if (r == 2) {
  2561  036F  3002               	movlw	2
  2562  0370  0676               	xorwf	lcd_goto_xy@r,w
  2563  0371  1D03               	btfss	3,2
  2564  0372  2B74               	goto	u1021
  2565  0373  2B75               	goto	u1020
  2566  0374                     u1021:
  2567  0374  2B97               	goto	l117
  2568  0375                     u1020:
  2569  0375                     l1523:
  2570                           
  2571                           ;./lcd-4bit.h: 85:         temp = 0xC0 + c - 1;
  2572  0375  0873               	movf	lcd_goto_xy@c,w
  2573  0376  3EBF               	addlw	191
  2574  0377  00F4               	movwf	??_lcd_goto_xy
  2575  0378  0874               	movf	??_lcd_goto_xy,w
  2576  0379  00F9               	movwf	lcd_goto_xy@temp
  2577                           
  2578                           ;./lcd-4bit.h: 86:         high4 = temp >> 4;
  2579  037A  0879               	movf	lcd_goto_xy@temp,w
  2580  037B  00F4               	movwf	??_lcd_goto_xy
  2581  037C  3004               	movlw	4
  2582  037D                     u1035:
  2583  037D  1003               	clrc
  2584  037E  0CF4               	rrf	??_lcd_goto_xy,f
  2585  037F  3EFF               	addlw	-1
  2586  0380  1D03               	skipz
  2587  0381  2B7D               	goto	u1035
  2588  0382  0874               	movf	??_lcd_goto_xy,w
  2589  0383  00F5               	movwf	??_lcd_goto_xy+1
  2590  0384  0875               	movf	??_lcd_goto_xy+1,w
  2591  0385  00F8               	movwf	lcd_goto_xy@high4
  2592  0386                     l1525:
  2593                           
  2594                           ;./lcd-4bit.h: 87:         low4 = temp & 0x0F;
  2595  0386  0879               	movf	lcd_goto_xy@temp,w
  2596  0387  390F               	andlw	15
  2597  0388  00F4               	movwf	??_lcd_goto_xy
  2598  0389  0874               	movf	??_lcd_goto_xy,w
  2599  038A  00F7               	movwf	lcd_goto_xy@low4
  2600  038B                     l1527:
  2601                           
  2602                           ;./lcd-4bit.h: 88:         lcd_cmd(high4);
  2603  038B  0878               	movf	lcd_goto_xy@high4,w
  2604  038C  120A  118A  216B  120A  118A  	fcall	_lcd_cmd
  2605  0391                     l1529:
  2606                           
  2607                           ;./lcd-4bit.h: 89:         lcd_cmd(low4);
  2608  0391  0877               	movf	lcd_goto_xy@low4,w
  2609  0392  120A  118A  216B  120A  118A  	fcall	_lcd_cmd
  2610  0397                     l117:
  2611  0397  0008               	return
  2612  0398                     __end_of_lcd_goto_xy:
  2613                           
  2614                           	psect	text8
  2615  017B                     __ptext8:	
  2616 ;; *************** function _lcd_clear *****************
  2617 ;; Defined at:
  2618 ;;		line 69 in file "./lcd-4bit.h"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      void 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2, status,0, pclath, cstack
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2632 ;;      Params:         0       0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0
  2634 ;;      Temps:          2       0       0       0       0
  2635 ;;      Totals:         2       0       0       0       0
  2636 ;;Total ram usage:        2 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    2
  2639 ;; This function calls:
  2640 ;;		_lcd_cmd
  2641 ;; This function is called by:
  2642 ;;		_main
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           
  2647                           ;psect for function _lcd_clear
  2648  017B                     _lcd_clear:
  2649  017B                     l1507:	
  2650                           ;incstack = 0
  2651                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2652                           
  2653                           
  2654                           ;./lcd-4bit.h: 70:     lcd_cmd(0);
  2655  017B  3000               	movlw	0
  2656  017C  120A  118A  216B  120A  118A  	fcall	_lcd_cmd
  2657                           
  2658                           ;./lcd-4bit.h: 71:     lcd_cmd(1);
  2659  0181  3001               	movlw	1
  2660  0182  120A  118A  216B  120A  118A  	fcall	_lcd_cmd
  2661  0187                     l1509:
  2662                           
  2663                           ;./lcd-4bit.h: 72:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2664  0187  300D               	movlw	13
  2665  0188  00F4               	movwf	??_lcd_clear+1
  2666  0189  30FB               	movlw	251
  2667  018A  00F3               	movwf	??_lcd_clear
  2668  018B                     u1417:
  2669  018B  0BF3               	decfsz	??_lcd_clear,f
  2670  018C  298B               	goto	u1417
  2671  018D  0BF4               	decfsz	??_lcd_clear+1,f
  2672  018E  298B               	goto	u1417
  2673  018F  2990               	nop2
  2674  0190                     l112:
  2675  0190  0008               	return
  2676  0191                     __end_of_lcd_clear:
  2677                           
  2678                           	psect	text9
  2679  016B                     __ptext9:	
  2680 ;; *************** function _lcd_cmd *****************
  2681 ;; Defined at:
  2682 ;;		line 61 in file "./lcd-4bit.h"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  cmd             1    wreg     unsigned char 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  cmd             1    2[COMMON] unsigned char 
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2, status,0, pclath, cstack
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2696 ;;      Params:         0       0       0       0       0
  2697 ;;      Locals:         1       0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0
  2699 ;;      Totals:         1       0       0       0       0
  2700 ;;Total ram usage:        1 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    1
  2703 ;; This function calls:
  2704 ;;		_lcd_clock
  2705 ;;		_lcd_data
  2706 ;; This function is called by:
  2707 ;;		_lcd_clear
  2708 ;;		_lcd_goto_xy
  2709 ;;		_lcd_init
  2710 ;;		_lcd_shift_left
  2711 ;;		_lcd_shift_right
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           
  2716                           ;psect for function _lcd_cmd
  2717  016B                     _lcd_cmd:
  2718                           
  2719                           ;incstack = 0
  2720                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2721                           ;lcd_cmd@cmd stored from wreg
  2722  016B  00F2               	movwf	lcd_cmd@cmd
  2723  016C                     l1367:
  2724                           
  2725                           ;./lcd-4bit.h: 63:     RD2 = 0;
  2726  016C  1283               	bcf	3,5	;RP0=0, select bank0
  2727  016D  1303               	bcf	3,6	;RP1=0, select bank0
  2728  016E  1108               	bcf	8,2	;volatile
  2729  016F                     l1369:
  2730                           
  2731                           ;./lcd-4bit.h: 64:     lcd_data(cmd);
  2732  016F  0872               	movf	lcd_cmd@cmd,w
  2733  0170  120A  118A  21AA  120A  118A  	fcall	_lcd_data
  2734                           
  2735                           ;./lcd-4bit.h: 65:     lcd_clock();
  2736  0175  120A  118A  2191  120A  118A  	fcall	_lcd_clock
  2737  017A                     l109:
  2738  017A  0008               	return
  2739  017B                     __end_of_lcd_cmd:
  2740                           
  2741                           	psect	text10
  2742  01AA                     __ptext10:	
  2743 ;; *************** function _lcd_data *****************
  2744 ;; Defined at:
  2745 ;;		line 38 in file "./lcd-4bit.h"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  data            1    wreg     unsigned char 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  data            1    0[COMMON] unsigned char 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      void 
  2752 ;; Registers used:
  2753 ;;		wreg
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2759 ;;      Params:         0       0       0       0       0
  2760 ;;      Locals:         1       0       0       0       0
  2761 ;;      Temps:          0       0       0       0       0
  2762 ;;      Totals:         1       0       0       0       0
  2763 ;;Total ram usage:        1 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_lcd_cmd
  2769 ;;		_lcd_write
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           
  2774                           ;psect for function _lcd_data
  2775  01AA                     _lcd_data:
  2776                           
  2777                           ;incstack = 0
  2778                           ; Regs used in _lcd_data: [wreg]
  2779                           ;lcd_data@data stored from wreg
  2780  01AA  00F0               	movwf	lcd_data@data
  2781  01AB                     l1353:
  2782                           
  2783                           ;./lcd-4bit.h: 40:     if (data & 1)
  2784  01AB  1C70               	btfss	lcd_data@data,0
  2785  01AC  29AE               	goto	u661
  2786  01AD  29AF               	goto	u660
  2787  01AE                     u661:
  2788  01AE  29B3               	goto	l98
  2789  01AF                     u660:
  2790  01AF                     l1355:
  2791                           
  2792                           ;./lcd-4bit.h: 41:         RD4 = 1;
  2793  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  2794  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  2795  01B1  1608               	bsf	8,4	;volatile
  2796  01B2  29B6               	goto	l99
  2797  01B3                     l98:	
  2798                           ;./lcd-4bit.h: 42:     else
  2799                           
  2800                           
  2801                           ;./lcd-4bit.h: 43:         RD4 = 0;
  2802  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  2803  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  2804  01B5  1208               	bcf	8,4	;volatile
  2805  01B6                     l99:
  2806                           
  2807                           ;./lcd-4bit.h: 45:     if (data & 2)
  2808  01B6  1CF0               	btfss	lcd_data@data,1
  2809  01B7  29B9               	goto	u671
  2810  01B8  29BA               	goto	u670
  2811  01B9                     u671:
  2812  01B9  29BC               	goto	l100
  2813  01BA                     u670:
  2814  01BA                     l1357:
  2815                           
  2816                           ;./lcd-4bit.h: 46:         RD5 = 1;
  2817  01BA  1688               	bsf	8,5	;volatile
  2818  01BB  29BD               	goto	l101
  2819  01BC                     l100:	
  2820                           ;./lcd-4bit.h: 47:     else
  2821                           
  2822                           
  2823                           ;./lcd-4bit.h: 48:         RD5 = 0;
  2824  01BC  1288               	bcf	8,5	;volatile
  2825  01BD                     l101:
  2826                           
  2827                           ;./lcd-4bit.h: 50:     if (data & 4)
  2828  01BD  1D70               	btfss	lcd_data@data,2
  2829  01BE  29C0               	goto	u681
  2830  01BF  29C1               	goto	u680
  2831  01C0                     u681:
  2832  01C0  29C3               	goto	l102
  2833  01C1                     u680:
  2834  01C1                     l1359:
  2835                           
  2836                           ;./lcd-4bit.h: 51:         RD6 = 1;
  2837  01C1  1708               	bsf	8,6	;volatile
  2838  01C2  29C4               	goto	l103
  2839  01C3                     l102:	
  2840                           ;./lcd-4bit.h: 52:     else
  2841                           
  2842                           
  2843                           ;./lcd-4bit.h: 53:         RD6 = 0;
  2844  01C3  1308               	bcf	8,6	;volatile
  2845  01C4                     l103:
  2846                           
  2847                           ;./lcd-4bit.h: 55:     if (data & 8)
  2848  01C4  1DF0               	btfss	lcd_data@data,3
  2849  01C5  29C7               	goto	u691
  2850  01C6  29C8               	goto	u690
  2851  01C7                     u691:
  2852  01C7  29CA               	goto	l104
  2853  01C8                     u690:
  2854  01C8                     l1361:
  2855                           
  2856                           ;./lcd-4bit.h: 56:         RD7 = 1;
  2857  01C8  1788               	bsf	8,7	;volatile
  2858  01C9  29CB               	goto	l106
  2859  01CA                     l104:	
  2860                           ;./lcd-4bit.h: 57:     else
  2861                           
  2862                           
  2863                           ;./lcd-4bit.h: 58:         RD7 = 0;
  2864  01CA  1388               	bcf	8,7	;volatile
  2865  01CB                     l106:
  2866  01CB  0008               	return
  2867  01CC                     __end_of_lcd_data:
  2868                           
  2869                           	psect	text11
  2870  0191                     __ptext11:	
  2871 ;; *************** function _lcd_clock *****************
  2872 ;; Defined at:
  2873 ;;		line 30 in file "./lcd-4bit.h"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2887 ;;      Params:         0       0       0       0       0
  2888 ;;      Locals:         0       0       0       0       0
  2889 ;;      Temps:          2       0       0       0       0
  2890 ;;      Totals:         2       0       0       0       0
  2891 ;;Total ram usage:        2 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; This function calls:
  2894 ;;		Nothing
  2895 ;; This function is called by:
  2896 ;;		_lcd_cmd
  2897 ;;		_lcd_write
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           
  2902                           ;psect for function _lcd_clock
  2903  0191                     _lcd_clock:
  2904  0191                     l1347:	
  2905                           ;incstack = 0
  2906                           ; Regs used in _lcd_clock: [wreg]
  2907                           
  2908                           
  2909                           ;./lcd-4bit.h: 32:     RD3 = 1;
  2910  0191  1283               	bcf	3,5	;RP0=0, select bank0
  2911  0192  1303               	bcf	3,6	;RP1=0, select bank0
  2912  0193  1588               	bsf	8,3	;volatile
  2913  0194                     l1349:
  2914                           
  2915                           ;./lcd-4bit.h: 33:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  2916  0194  3004               	movlw	4
  2917  0195  00F1               	movwf	??_lcd_clock+1
  2918  0196  303D               	movlw	61
  2919  0197  00F0               	movwf	??_lcd_clock
  2920  0198                     u1427:
  2921  0198  0BF0               	decfsz	??_lcd_clock,f
  2922  0199  2998               	goto	u1427
  2923  019A  0BF1               	decfsz	??_lcd_clock+1,f
  2924  019B  2998               	goto	u1427
  2925  019C  299D               	nop2
  2926  019D                     l1351:
  2927                           
  2928                           ;./lcd-4bit.h: 34:     RD3 = 0;
  2929  019D  1283               	bcf	3,5	;RP0=0, select bank0
  2930  019E  1303               	bcf	3,6	;RP1=0, select bank0
  2931  019F  1188               	bcf	8,3	;volatile
  2932                           
  2933                           ;./lcd-4bit.h: 35:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  2934  01A0  3004               	movlw	4
  2935  01A1  00F1               	movwf	??_lcd_clock+1
  2936  01A2  303D               	movlw	61
  2937  01A3  00F0               	movwf	??_lcd_clock
  2938  01A4                     u1437:
  2939  01A4  0BF0               	decfsz	??_lcd_clock,f
  2940  01A5  29A4               	goto	u1437
  2941  01A6  0BF1               	decfsz	??_lcd_clock+1,f
  2942  01A7  29A4               	goto	u1437
  2943  01A8  29A9               	nop2
  2944  01A9                     l95:
  2945  01A9  0008               	return
  2946  01AA                     __end_of_lcd_clock:
  2947                           
  2948                           	psect	text12
  2949  01F0                     __ptext12:	
  2950 ;; *************** function _i2c_write *****************
  2951 ;; Defined at:
  2952 ;;		line 58 in file "./i2c-master.h"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  d_addr          1    wreg     unsigned char 
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  d_addr          1    0[COMMON] unsigned char 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      unsigned char 
  2959 ;; Registers used:
  2960 ;;		wreg, status,2, status,0, pclath, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2966 ;;      Params:         0       0       0       0       0
  2967 ;;      Locals:         1       0       0       0       0
  2968 ;;      Temps:          0       0       0       0       0
  2969 ;;      Totals:         1       0       0       0       0
  2970 ;;Total ram usage:        1 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    2
  2973 ;; This function calls:
  2974 ;;		_i2c_is_idle
  2975 ;;		_i2c_stop
  2976 ;; This function is called by:
  2977 ;;		_main
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           
  2982                           ;psect for function _i2c_write
  2983  01F0                     _i2c_write:
  2984                           
  2985                           ;incstack = 0
  2986                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  2987                           ;i2c_write@d_addr stored from wreg
  2988  01F0  00F0               	movwf	i2c_write@d_addr
  2989  01F1                     l1475:
  2990                           
  2991                           ;./i2c-master.h: 59:     i2c_is_idle();
  2992  01F1  120A  118A  212E  120A  118A  	fcall	_i2c_is_idle
  2993  01F6                     l1477:
  2994                           
  2995                           ;./i2c-master.h: 60:     SSPBUF = d_addr;
  2996  01F6  0870               	movf	i2c_write@d_addr,w
  2997  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  2998  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  2999  01F9  0093               	movwf	19	;volatile
  3000  01FA                     l1479:
  3001                           
  3002                           ;./i2c-master.h: 61:     if (SSPCONbits.WCOL) {
  3003  01FA  1F94               	btfss	20,7	;volatile
  3004  01FB  29FD               	goto	u951
  3005  01FC  29FE               	goto	u950
  3006  01FD                     u951:
  3007  01FD  2A01               	goto	l79
  3008  01FE                     u950:
  3009  01FE                     l1481:
  3010                           
  3011                           ;./i2c-master.h: 62:         SSPCONbits.WCOL = 0;
  3012  01FE  1394               	bcf	20,7	;volatile
  3013  01FF                     l1483:
  3014                           
  3015                           ;./i2c-master.h: 63:         SSPBUF = d_addr;
  3016  01FF  0870               	movf	i2c_write@d_addr,w
  3017  0200  0093               	movwf	19	;volatile
  3018  0201                     l79:
  3019  0201  1D8C               	btfss	12,3	;volatile
  3020  0202  2A04               	goto	u961
  3021  0203  2A05               	goto	u960
  3022  0204                     u961:
  3023  0204  2A01               	goto	l79
  3024  0205                     u960:
  3025  0205                     l81:
  3026                           
  3027                           ;./i2c-master.h: 66:     if(SSPCON2bits.ACKSTAT) {
  3028  0205  1683               	bsf	3,5	;RP0=1, select bank1
  3029  0206  1303               	bcf	3,6	;RP1=0, select bank1
  3030  0207  1F11               	btfss	17,6	;volatile
  3031  0208  2A0A               	goto	u971
  3032  0209  2A0B               	goto	u970
  3033  020A                     u971:
  3034  020A  2A10               	goto	l1487
  3035  020B                     u970:
  3036  020B                     l1485:
  3037                           
  3038                           ;./i2c-master.h: 67:         i2c_stop();
  3039  020B  120A  118A  215B  120A  118A  	fcall	_i2c_stop
  3040  0210                     l1487:
  3041                           
  3042                           ;./i2c-master.h: 69:     PIR1bits.SSPIF = 0;
  3043  0210  1283               	bcf	3,5	;RP0=0, select bank0
  3044  0211  1303               	bcf	3,6	;RP1=0, select bank0
  3045  0212  118C               	bcf	12,3	;volatile
  3046  0213                     l1489:
  3047                           
  3048                           ;./i2c-master.h: 70:     return SSPCON2bits.ACKSTAT;;	Return value of _i2c_write is neve
      +                          r used
  3049  0213  1683               	bsf	3,5	;RP0=1, select bank1
  3050  0214  1303               	bcf	3,6	;RP1=0, select bank1
  3051  0215  0811               	movf	17,w	;volatile
  3052  0216                     l83:
  3053  0216  0008               	return
  3054  0217                     __end_of_i2c_write:
  3055                           
  3056                           	psect	text13
  3057  015B                     __ptext13:	
  3058 ;; *************** function _i2c_stop *****************
  3059 ;; Defined at:
  3060 ;;		line 51 in file "./i2c-master.h"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;		None
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  1    wreg      void 
  3067 ;; Registers used:
  3068 ;;		wreg, status,2, status,0, pclath, cstack
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3074 ;;      Params:         0       0       0       0       0
  3075 ;;      Locals:         0       0       0       0       0
  3076 ;;      Temps:          0       0       0       0       0
  3077 ;;      Totals:         0       0       0       0       0
  3078 ;;Total ram usage:        0 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; Hardware stack levels required when called:    1
  3081 ;; This function calls:
  3082 ;;		_i2c_is_idle
  3083 ;; This function is called by:
  3084 ;;		_i2c_write
  3085 ;;		_main
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           
  3090                           ;psect for function _i2c_stop
  3091  015B                     _i2c_stop:
  3092  015B                     l1363:	
  3093                           ;incstack = 0
  3094                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  3095                           
  3096                           
  3097                           ;./i2c-master.h: 52:     i2c_is_idle();
  3098  015B  120A  118A  212E  120A  118A  	fcall	_i2c_is_idle
  3099  0160                     l1365:
  3100                           
  3101                           ;./i2c-master.h: 53:     SSPCON2bits.PEN = 1;
  3102  0160  1683               	bsf	3,5	;RP0=1, select bank1
  3103  0161  1303               	bcf	3,6	;RP1=0, select bank1
  3104  0162  1511               	bsf	17,2	;volatile
  3105  0163                     l72:	
  3106                           ;./i2c-master.h: 54:     while(SSPCON2bits.PEN);
  3107                           
  3108  0163  1911               	btfsc	17,2	;volatile
  3109  0164  2966               	goto	u701
  3110  0165  2967               	goto	u700
  3111  0166                     u701:
  3112  0166  2963               	goto	l72
  3113  0167                     u700:
  3114  0167                     l74:
  3115                           
  3116                           ;./i2c-master.h: 55:     PIR1bits.SSPIF = 0;
  3117  0167  1283               	bcf	3,5	;RP0=0, select bank0
  3118  0168  1303               	bcf	3,6	;RP1=0, select bank0
  3119  0169  118C               	bcf	12,3	;volatile
  3120  016A                     l75:
  3121  016A  0008               	return
  3122  016B                     __end_of_i2c_stop:
  3123                           
  3124                           	psect	text14
  3125  014B                     __ptext14:	
  3126 ;; *************** function _i2c_start *****************
  3127 ;; Defined at:
  3128 ;;		line 37 in file "./i2c-master.h"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;		None
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;		None
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1    wreg      void 
  3135 ;; Registers used:
  3136 ;;		wreg, status,2, status,0, pclath, cstack
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3142 ;;      Params:         0       0       0       0       0
  3143 ;;      Locals:         0       0       0       0       0
  3144 ;;      Temps:          0       0       0       0       0
  3145 ;;      Totals:         0       0       0       0       0
  3146 ;;Total ram usage:        0 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    1
  3149 ;; This function calls:
  3150 ;;		_i2c_is_idle
  3151 ;; This function is called by:
  3152 ;;		_main
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           
  3157                           ;psect for function _i2c_start
  3158  014B                     _i2c_start:
  3159  014B                     l1467:	
  3160                           ;incstack = 0
  3161                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  3162                           
  3163                           
  3164                           ;./i2c-master.h: 38:     i2c_is_idle();
  3165  014B  120A  118A  212E  120A  118A  	fcall	_i2c_is_idle
  3166  0150                     l1469:
  3167                           
  3168                           ;./i2c-master.h: 39:     SSPCON2bits.SEN = 1;
  3169  0150  1683               	bsf	3,5	;RP0=1, select bank1
  3170  0151  1303               	bcf	3,6	;RP1=0, select bank1
  3171  0152  1411               	bsf	17,0	;volatile
  3172  0153                     l60:	
  3173                           ;./i2c-master.h: 40:     while(SSPCON2bits.SEN);
  3174                           
  3175  0153  1811               	btfsc	17,0	;volatile
  3176  0154  2956               	goto	u931
  3177  0155  2957               	goto	u930
  3178  0156                     u931:
  3179  0156  2953               	goto	l60
  3180  0157                     u930:
  3181  0157                     l62:
  3182                           
  3183                           ;./i2c-master.h: 41:     PIR1bits.SSPIF = 0;
  3184  0157  1283               	bcf	3,5	;RP0=0, select bank0
  3185  0158  1303               	bcf	3,6	;RP1=0, select bank0
  3186  0159  118C               	bcf	12,3	;volatile
  3187  015A                     l63:
  3188  015A  0008               	return
  3189  015B                     __end_of_i2c_start:
  3190                           
  3191                           	psect	text15
  3192  013B                     __ptext15:	
  3193 ;; *************** function _i2c_rep_start *****************
  3194 ;; Defined at:
  3195 ;;		line 44 in file "./i2c-master.h"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;		None
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;		None
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      void 
  3202 ;; Registers used:
  3203 ;;		wreg, status,2, status,0, pclath, cstack
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3209 ;;      Params:         0       0       0       0       0
  3210 ;;      Locals:         0       0       0       0       0
  3211 ;;      Temps:          0       0       0       0       0
  3212 ;;      Totals:         0       0       0       0       0
  3213 ;;Total ram usage:        0 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; Hardware stack levels required when called:    1
  3216 ;; This function calls:
  3217 ;;		_i2c_is_idle
  3218 ;; This function is called by:
  3219 ;;		_main
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           
  3224                           ;psect for function _i2c_rep_start
  3225  013B                     _i2c_rep_start:
  3226  013B                     l1471:	
  3227                           ;incstack = 0
  3228                           ; Regs used in _i2c_rep_start: [wreg+status,2+status,0+pclath+cstack]
  3229                           
  3230                           
  3231                           ;./i2c-master.h: 45:     i2c_is_idle();
  3232  013B  120A  118A  212E  120A  118A  	fcall	_i2c_is_idle
  3233  0140                     l1473:
  3234                           
  3235                           ;./i2c-master.h: 46:     SSPCON2bits.RSEN = 1;
  3236  0140  1683               	bsf	3,5	;RP0=1, select bank1
  3237  0141  1303               	bcf	3,6	;RP1=0, select bank1
  3238  0142  1491               	bsf	17,1	;volatile
  3239  0143                     l66:	
  3240                           ;./i2c-master.h: 47:     while(SSPCON2bits.RSEN);
  3241                           
  3242  0143  1891               	btfsc	17,1	;volatile
  3243  0144  2946               	goto	u941
  3244  0145  2947               	goto	u940
  3245  0146                     u941:
  3246  0146  2943               	goto	l66
  3247  0147                     u940:
  3248  0147                     l68:
  3249                           
  3250                           ;./i2c-master.h: 48:     PIR1bits.SSPIF = 0;
  3251  0147  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0148  1303               	bcf	3,6	;RP1=0, select bank0
  3253  0149  118C               	bcf	12,3	;volatile
  3254  014A                     l69:
  3255  014A  0008               	return
  3256  014B                     __end_of_i2c_rep_start:
  3257                           
  3258                           	psect	text16
  3259  01CC                     __ptext16:	
  3260 ;; *************** function _i2c_read *****************
  3261 ;; Defined at:
  3262 ;;		line 73 in file "./i2c-master.h"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  ack             1    wreg     unsigned char 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  ack             1    1[COMMON] unsigned char 
  3267 ;;  data            1    2[COMMON] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      unsigned char 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2, status,0, pclath, cstack
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3277 ;;      Params:         0       0       0       0       0
  3278 ;;      Locals:         2       0       0       0       0
  3279 ;;      Temps:          1       0       0       0       0
  3280 ;;      Totals:         3       0       0       0       0
  3281 ;;Total ram usage:        3 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    1
  3284 ;; This function calls:
  3285 ;;		_i2c_is_idle
  3286 ;; This function is called by:
  3287 ;;		_main
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           
  3292                           ;psect for function _i2c_read
  3293  01CC                     _i2c_read:
  3294                           
  3295                           ;incstack = 0
  3296                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  3297                           ;i2c_read@ack stored from wreg
  3298  01CC  00F1               	movwf	i2c_read@ack
  3299  01CD                     l1493:
  3300                           
  3301                           ;./i2c-master.h: 74:     uint8_t data;;./i2c-master.h: 75:     i2c_is_idle();
  3302  01CD  120A  118A  212E  120A  118A  	fcall	_i2c_is_idle
  3303  01D2                     l1495:
  3304                           
  3305                           ;./i2c-master.h: 76:     SSPCON2bits.RCEN = 1;
  3306  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  3307  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  3308  01D4  1591               	bsf	17,3	;volatile
  3309  01D5                     l86:	
  3310                           ;./i2c-master.h: 77:     while(SSPSTATbits.BF != 1);
  3311                           
  3312  01D5  1C14               	btfss	20,0	;volatile
  3313  01D6  29D8               	goto	u981
  3314  01D7  29D9               	goto	u980
  3315  01D8                     u981:
  3316  01D8  29D5               	goto	l86
  3317  01D9                     u980:
  3318  01D9                     l1497:
  3319                           
  3320                           ;./i2c-master.h: 78:     data = SSPBUF;
  3321  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  3322  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  3323  01DB  0813               	movf	19,w	;volatile
  3324  01DC  00F0               	movwf	??_i2c_read
  3325  01DD  0870               	movf	??_i2c_read,w
  3326  01DE  00F2               	movwf	i2c_read@data
  3327  01DF                     l1499:
  3328                           
  3329                           ;./i2c-master.h: 79:     SSPCON2bits.ACKDT = ack;
  3330  01DF  0C71               	rrf	i2c_read@ack,w
  3331  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  3332  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  3333  01E2  1C03               	skipc
  3334  01E3  1291               	bcf	17,5	;volatile
  3335  01E4  1803               	skipnc
  3336  01E5  1691               	bsf	17,5	;volatile
  3337  01E6                     l1501:
  3338                           
  3339                           ;./i2c-master.h: 80:     SSPCON2bits.ACKEN = 1;
  3340  01E6  1611               	bsf	17,4	;volatile
  3341  01E7                     l89:	
  3342                           ;./i2c-master.h: 81:     while(SSPCON2bits.ACKEN);
  3343                           
  3344  01E7  1A11               	btfsc	17,4	;volatile
  3345  01E8  29EA               	goto	u991
  3346  01E9  29EB               	goto	u990
  3347  01EA                     u991:
  3348  01EA  29E7               	goto	l89
  3349  01EB                     u990:
  3350  01EB                     l91:
  3351                           
  3352                           ;./i2c-master.h: 82:     PIR1bits.SSPIF = 0;
  3353  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  3354  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  3355  01ED  118C               	bcf	12,3	;volatile
  3356  01EE                     l1503:
  3357                           
  3358                           ;./i2c-master.h: 83:     return data;
  3359  01EE  0872               	movf	i2c_read@data,w
  3360  01EF                     l92:
  3361  01EF  0008               	return
  3362  01F0                     __end_of_i2c_read:
  3363                           
  3364                           	psect	text17
  3365  012E                     __ptext17:	
  3366 ;; *************** function _i2c_is_idle *****************
  3367 ;; Defined at:
  3368 ;;		line 33 in file "./i2c-master.h"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3382 ;;      Params:         0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0
  3385 ;;      Totals:         0       0       0       0       0
  3386 ;;Total ram usage:        0 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		_i2c_start
  3392 ;;		_i2c_rep_start
  3393 ;;		_i2c_stop
  3394 ;;		_i2c_write
  3395 ;;		_i2c_read
  3396 ;;		_main
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           
  3401                           ;psect for function _i2c_is_idle
  3402  012E                     _i2c_is_idle:
  3403  012E                     l1341:	
  3404                           ;incstack = 0
  3405                           ; Regs used in _i2c_is_idle: [wreg+status,2]
  3406                           
  3407  012E                     l1343:	
  3408                           ;./i2c-master.h: 34:     while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  3409                           
  3410  012E  1683               	bsf	3,5	;RP0=1, select bank1
  3411  012F  1303               	bcf	3,6	;RP1=0, select bank1
  3412  0130  0811               	movf	17,w	;volatile
  3413  0131  391F               	andlw	31
  3414  0132  1D03               	btfss	3,2
  3415  0133  2935               	goto	u641
  3416  0134  2936               	goto	u640
  3417  0135                     u641:
  3418  0135  292E               	goto	l1343
  3419  0136                     u640:
  3420  0136                     l1345:
  3421  0136  1914               	btfsc	20,2	;volatile
  3422  0137  2939               	goto	u651
  3423  0138  293A               	goto	u650
  3424  0139                     u651:
  3425  0139  292E               	goto	l1343
  3426  013A                     u650:
  3427  013A                     l57:
  3428  013A  0008               	return
  3429  013B                     __end_of_i2c_is_idle:
  3430                           
  3431                           	psect	text18
  3432  02C0                     __ptext18:	
  3433 ;; *************** function _i2c_master_init *****************
  3434 ;; Defined at:
  3435 ;;		line 24 in file "./i2c-master.h"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  baud_rate       4    0[BANK0 ] unsigned long 
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;		None
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  1    wreg      void 
  3442 ;; Registers used:
  3443 ;;		wreg, status,2, status,0, pclath, cstack
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3449 ;;      Params:         0       4       0       0       0
  3450 ;;      Locals:         0       0       0       0       0
  3451 ;;      Temps:          0       4       0       0       0
  3452 ;;      Totals:         0       8       0       0       0
  3453 ;;Total ram usage:        8 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; Hardware stack levels required when called:    1
  3456 ;; This function calls:
  3457 ;;		___lldiv
  3458 ;; This function is called by:
  3459 ;;		_main
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           
  3464                           ;psect for function _i2c_master_init
  3465  02C0                     _i2c_master_init:
  3466  02C0                     l1455:	
  3467                           ;incstack = 0
  3468                           ; Regs used in _i2c_master_init: [wreg+status,2+status,0+pclath+cstack]
  3469                           
  3470                           
  3471                           ;./i2c-master.h: 25:     TRISC |= 0x18;
  3472  02C0  3018               	movlw	24
  3473  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  3474  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  3475  02C3  00A4               	movwf	??_i2c_master_init
  3476  02C4  0824               	movf	??_i2c_master_init,w
  3477  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  3478  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  3479  02C7  0487               	iorwf	7,f	;volatile
  3480  02C8                     l1457:
  3481                           
  3482                           ;./i2c-master.h: 26:     SSPADD = (uint8_t)((20000000 / (4 * baud_rate)) - 1);
  3483  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  3484  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  3485  02CA  0820               	movf	i2c_master_init@baud_rate,w
  3486  02CB  00A4               	movwf	??_i2c_master_init
  3487  02CC  0821               	movf	i2c_master_init@baud_rate+1,w
  3488  02CD  00A5               	movwf	??_i2c_master_init+1
  3489  02CE  0822               	movf	i2c_master_init@baud_rate+2,w
  3490  02CF  00A6               	movwf	??_i2c_master_init+2
  3491  02D0  0823               	movf	i2c_master_init@baud_rate+3,w
  3492  02D1  00A7               	movwf	??_i2c_master_init+3
  3493  02D2  3002               	movlw	2
  3494  02D3                     u925:
  3495  02D3  1003               	clrc
  3496  02D4  0DA4               	rlf	??_i2c_master_init,f
  3497  02D5  0DA5               	rlf	??_i2c_master_init+1,f
  3498  02D6  0DA6               	rlf	??_i2c_master_init+2,f
  3499  02D7  0DA7               	rlf	??_i2c_master_init+3,f
  3500  02D8                     u920:
  3501  02D8  3EFF               	addlw	-1
  3502  02D9  1D03               	skipz
  3503  02DA  2AD3               	goto	u925
  3504  02DB  0827               	movf	??_i2c_master_init+3,w
  3505  02DC  00F3               	movwf	___lldiv@divisor+3
  3506  02DD  0826               	movf	??_i2c_master_init+2,w
  3507  02DE  00F2               	movwf	___lldiv@divisor+2
  3508  02DF  0825               	movf	??_i2c_master_init+1,w
  3509  02E0  00F1               	movwf	___lldiv@divisor+1
  3510  02E1  0824               	movf	??_i2c_master_init,w
  3511  02E2  00F0               	movwf	___lldiv@divisor
  3512  02E3  3001               	movlw	1
  3513  02E4  00F7               	movwf	___lldiv@dividend+3
  3514  02E5  3031               	movlw	49
  3515  02E6  00F6               	movwf	___lldiv@dividend+2
  3516  02E7  302D               	movlw	45
  3517  02E8  00F5               	movwf	___lldiv@dividend+1
  3518  02E9  3000               	movlw	0
  3519  02EA  00F4               	movwf	___lldiv@dividend
  3520  02EB  120A  118A  23F3  120A  118A  	fcall	___lldiv
  3521  02F0  0870               	movf	?___lldiv,w
  3522  02F1  3EFF               	addlw	255
  3523  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  3524  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  3525  02F4  0093               	movwf	19	;volatile
  3526  02F5                     l1459:
  3527                           
  3528                           ;./i2c-master.h: 27:     SSPSTAT |= 0x80;
  3529  02F5  1794               	bsf	20,7	;volatile
  3530  02F6                     l1461:
  3531                           
  3532                           ;./i2c-master.h: 28:     SSPCON |= 0x28;
  3533  02F6  3028               	movlw	40
  3534  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  3535  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  3536  02F9  00A4               	movwf	??_i2c_master_init
  3537  02FA  0824               	movf	??_i2c_master_init,w
  3538  02FB  0494               	iorwf	20,f	;volatile
  3539  02FC                     l1463:
  3540                           
  3541                           ;./i2c-master.h: 29:     SSPCON2 |= 0x00;
  3542  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  3543  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  3544  02FE  0811               	movf	17,w	;volatile
  3545  02FF                     l1465:
  3546                           
  3547                           ;./i2c-master.h: 30:     PIR1bits.SSPIF = 0;
  3548  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  3549  0300  1303               	bcf	3,6	;RP1=0, select bank0
  3550  0301  118C               	bcf	12,3	;volatile
  3551  0302                     l51:
  3552  0302  0008               	return
  3553  0303                     __end_of_i2c_master_init:
  3554                           
  3555                           	psect	text19
  3556  03F3                     __ptext19:	
  3557 ;; *************** function ___lldiv *****************
  3558 ;; Defined at:
  3559 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  divisor         4    0[COMMON] unsigned long 
  3562 ;;  dividend        4    4[COMMON] unsigned long 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  quotient        4    9[COMMON] unsigned long 
  3565 ;;  counter         1   13[COMMON] unsigned char 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  4    0[COMMON] unsigned long 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3575 ;;      Params:         8       0       0       0       0
  3576 ;;      Locals:         5       0       0       0       0
  3577 ;;      Temps:          1       0       0       0       0
  3578 ;;      Totals:        14       0       0       0       0
  3579 ;;Total ram usage:       14 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		_i2c_master_init
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           
  3589                           ;psect for function ___lldiv
  3590  03F3                     ___lldiv:
  3591  03F3                     l1383:	
  3592                           ;incstack = 0
  3593                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3594                           
  3595  03F3  3000               	movlw	0
  3596  03F4  00FC               	movwf	___lldiv@quotient+3
  3597  03F5  3000               	movlw	0
  3598  03F6  00FB               	movwf	___lldiv@quotient+2
  3599  03F7  3000               	movlw	0
  3600  03F8  00FA               	movwf	___lldiv@quotient+1
  3601  03F9  3000               	movlw	0
  3602  03FA  00F9               	movwf	___lldiv@quotient
  3603  03FB  0873               	movf	___lldiv@divisor+3,w
  3604  03FC  0472               	iorwf	___lldiv@divisor+2,w
  3605  03FD  0471               	iorwf	___lldiv@divisor+1,w
  3606  03FE  0470               	iorwf	___lldiv@divisor,w
  3607  03FF  1903               	skipnz
  3608  0400  2C02               	goto	u721
  3609  0401  2C03               	goto	u720
  3610  0402                     u721:
  3611  0402  2C50               	goto	l1403
  3612  0403                     u720:
  3613  0403                     l1385:
  3614  0403  01FD               	clrf	___lldiv@counter
  3615  0404  0AFD               	incf	___lldiv@counter,f
  3616  0405  2C13               	goto	l1389
  3617  0406                     l1387:
  3618  0406  3001               	movlw	1
  3619  0407  00F8               	movwf	??___lldiv
  3620  0408                     u735:
  3621  0408  1003               	clrc
  3622  0409  0DF0               	rlf	___lldiv@divisor,f
  3623  040A  0DF1               	rlf	___lldiv@divisor+1,f
  3624  040B  0DF2               	rlf	___lldiv@divisor+2,f
  3625  040C  0DF3               	rlf	___lldiv@divisor+3,f
  3626  040D  0BF8               	decfsz	??___lldiv,f
  3627  040E  2C08               	goto	u735
  3628  040F  3001               	movlw	1
  3629  0410  00F8               	movwf	??___lldiv
  3630  0411  0878               	movf	??___lldiv,w
  3631  0412  07FD               	addwf	___lldiv@counter,f
  3632  0413                     l1389:
  3633  0413  1FF3               	btfss	___lldiv@divisor+3,7
  3634  0414  2C16               	goto	u741
  3635  0415  2C17               	goto	u740
  3636  0416                     u741:
  3637  0416  2C06               	goto	l1387
  3638  0417                     u740:
  3639  0417                     l1391:
  3640  0417  3001               	movlw	1
  3641  0418  00F8               	movwf	??___lldiv
  3642  0419                     u755:
  3643  0419  1003               	clrc
  3644  041A  0DF9               	rlf	___lldiv@quotient,f
  3645  041B  0DFA               	rlf	___lldiv@quotient+1,f
  3646  041C  0DFB               	rlf	___lldiv@quotient+2,f
  3647  041D  0DFC               	rlf	___lldiv@quotient+3,f
  3648  041E  0BF8               	decfsz	??___lldiv,f
  3649  041F  2C19               	goto	u755
  3650  0420                     l1393:
  3651  0420  0873               	movf	___lldiv@divisor+3,w
  3652  0421  0277               	subwf	___lldiv@dividend+3,w
  3653  0422  1D03               	skipz
  3654  0423  2C2E               	goto	u765
  3655  0424  0872               	movf	___lldiv@divisor+2,w
  3656  0425  0276               	subwf	___lldiv@dividend+2,w
  3657  0426  1D03               	skipz
  3658  0427  2C2E               	goto	u765
  3659  0428  0871               	movf	___lldiv@divisor+1,w
  3660  0429  0275               	subwf	___lldiv@dividend+1,w
  3661  042A  1D03               	skipz
  3662  042B  2C2E               	goto	u765
  3663  042C  0870               	movf	___lldiv@divisor,w
  3664  042D  0274               	subwf	___lldiv@dividend,w
  3665  042E                     u765:
  3666  042E  1C03               	skipc
  3667  042F  2C31               	goto	u761
  3668  0430  2C32               	goto	u760
  3669  0431                     u761:
  3670  0431  2C41               	goto	l1399
  3671  0432                     u760:
  3672  0432                     l1395:
  3673  0432  0870               	movf	___lldiv@divisor,w
  3674  0433  02F4               	subwf	___lldiv@dividend,f
  3675  0434  0871               	movf	___lldiv@divisor+1,w
  3676  0435  1C03               	skipc
  3677  0436  0F71               	incfsz	___lldiv@divisor+1,w
  3678  0437  02F5               	subwf	___lldiv@dividend+1,f
  3679  0438  0872               	movf	___lldiv@divisor+2,w
  3680  0439  1C03               	skipc
  3681  043A  0F72               	incfsz	___lldiv@divisor+2,w
  3682  043B  02F6               	subwf	___lldiv@dividend+2,f
  3683  043C  0873               	movf	___lldiv@divisor+3,w
  3684  043D  1C03               	skipc
  3685  043E  0F73               	incfsz	___lldiv@divisor+3,w
  3686  043F  02F7               	subwf	___lldiv@dividend+3,f
  3687  0440                     l1397:
  3688  0440  1479               	bsf	___lldiv@quotient,0
  3689  0441                     l1399:
  3690  0441  3001               	movlw	1
  3691  0442                     u775:
  3692  0442  1003               	clrc
  3693  0443  0CF3               	rrf	___lldiv@divisor+3,f
  3694  0444  0CF2               	rrf	___lldiv@divisor+2,f
  3695  0445  0CF1               	rrf	___lldiv@divisor+1,f
  3696  0446  0CF0               	rrf	___lldiv@divisor,f
  3697  0447  3EFF               	addlw	-1
  3698  0448  1D03               	skipz
  3699  0449  2C42               	goto	u775
  3700  044A                     l1401:
  3701  044A  3001               	movlw	1
  3702  044B  02FD               	subwf	___lldiv@counter,f
  3703  044C  1D03               	btfss	3,2
  3704  044D  2C4F               	goto	u781
  3705  044E  2C50               	goto	u780
  3706  044F                     u781:
  3707  044F  2C17               	goto	l1391
  3708  0450                     u780:
  3709  0450                     l1403:
  3710  0450  087C               	movf	___lldiv@quotient+3,w
  3711  0451  00F3               	movwf	?___lldiv+3
  3712  0452  087B               	movf	___lldiv@quotient+2,w
  3713  0453  00F2               	movwf	?___lldiv+2
  3714  0454  087A               	movf	___lldiv@quotient+1,w
  3715  0455  00F1               	movwf	?___lldiv+1
  3716  0456  0879               	movf	___lldiv@quotient,w
  3717  0457  00F0               	movwf	?___lldiv
  3718  0458                     l319:
  3719  0458  0008               	return
  3720  0459                     __end_of___lldiv:
  3721  007E                     btemp	set	126	;btemp
  3722  007E                     wtemp0	set	126
  3723                           
  3724                           	psect	config
  3725                           
  3726                           ;Config register CONFIG @ 0x2007
  3727                           ;	Oscillator Selection bits
  3728                           ;	FOSC = HS, HS oscillator
  3729                           ;	Watchdog Timer Enable bit
  3730                           ;	WDTE = OFF, WDT disabled
  3731                           ;	Power-up Timer Enable bit
  3732                           ;	PWRTE = OFF, PWRT disabled
  3733                           ;	Brown-out Reset Enable bit
  3734                           ;	BOREN = OFF, BOR disabled
  3735                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3736                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3737                           ;	Data EEPROM Memory Code Protection bit
  3738                           ;	CPD = OFF, Data EEPROM code protection off
  3739                           ;	Flash Program Memory Write Enable bits
  3740                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3741                           ;	In-Circuit Debugger Mode bit
  3742                           ;	DEBUG = 0x1, unprogrammed default
  3743                           ;	Flash Program Memory Code Protection bit
  3744                           ;	CP = OFF, Code protection off
  3745  2007                     	org	8199
  3746  2007  3F3A               	dw	16186

Data Sizes:
    Strings     73
    Constant    18
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     39      39
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_8(CODE[3]), STR_5(CODE[3]), STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> main@str2(BANK0[10]), main@str1(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_write_string@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_9(CODE[10]), main@str2(BANK0[10]), STR_7(CODE[9]), STR_6(CODE[8]), 
		 -> STR_4(CODE[8]), main@str1(BANK0[10]), STR_2(CODE[16]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_write_string->_lcd_write
    _lcd_write->_lcd_clock
    _lcd_init->_lcd_cmd
    _lcd_goto_xy->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_cmd->_lcd_clock
    _i2c_master_init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0    4727
                                             14 BANK0     25    25      0
                        _i2c_is_idle
                    _i2c_master_init
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
                          _lcd_clear
                        _lcd_goto_xy
                           _lcd_init
                   _lcd_write_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    19      3    1830
                                              0 BANK0     14    11      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_write_string                                     7     5      2    1028
                                              6 COMMON     7     5      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            4     4      0     178
                                              2 COMMON     4     4      0
                          _lcd_clock
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     110
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_goto_xy                                          7     6      1     836
                                              3 COMMON     7     6      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            2     2      0     110
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0     110
                                              2 COMMON     1     1      0
                          _lcd_clock
                           _lcd_data
 ---------------------------------------------------------------------------------
 (3) _lcd_data                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_clock                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _i2c_write                                            1     1      0      44
                                              0 COMMON     1     1      0
                        _i2c_is_idle
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
                        _i2c_is_idle
 ---------------------------------------------------------------------------------
 (1) _i2c_start                                            0     0      0       0
                        _i2c_is_idle
 ---------------------------------------------------------------------------------
 (1) _i2c_rep_start                                        0     0      0       0
                        _i2c_is_idle
 ---------------------------------------------------------------------------------
 (1) _i2c_read                                             3     3      0      45
                                              0 COMMON     3     3      0
                        _i2c_is_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_is_idle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_master_init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_is_idle
   _i2c_master_init
     ___lldiv
   _i2c_read
     _i2c_is_idle
   _i2c_rep_start
     _i2c_is_idle
   _i2c_start
     _i2c_is_idle
   _i2c_stop
     _i2c_is_idle
   _i2c_write
     _i2c_is_idle
     _i2c_stop
       _i2c_is_idle
   _lcd_clear
     _lcd_cmd
       _lcd_clock
       _lcd_data
   _lcd_goto_xy
     _lcd_cmd
       _lcd_clock
       _lcd_data
   _lcd_init
     _lcd_cmd
       _lcd_clock
       _lcd_data
   _lcd_write_string
     _lcd_write
       _lcd_clock
       _lcd_data
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      27       5       48.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 26 23:25:56 2021

                        pc 0002               lcd_data@data 0070                _SSPSTATbits 0094  
                       l51 0302                         l60 0153                         l62 0157  
                       l63 015A                         l72 0163                         l57 013A  
                       l81 0205                         l66 0143                         l74 0167  
                       l91 01EB                         l75 016A                         l83 0216  
                       l92 01EF                         l68 0147                         l69 014A  
                       l86 01D5                         l79 0201                         l95 01A9  
                       l89 01E7                         l98 01B3                         l99 01B6  
                       fsr 0004                        l100 01BC                        l101 01BD  
                      l102 01C3                        l103 01C4                        l104 01CA  
                      l112 0190                        l120 03F2                        l106 01CB  
                      l123 0243                        l109 017A                        l117 0397  
                      l129 02BF                        l261 04C2                        l254 0497  
                      l319 0458                        l255 0475                        l266 04EB  
                      l279 05D2                        l555 0346                        l565 027D  
                      _RB0 0030                        _RB1 0031                        _RB2 0032  
                      _RB3 0033                        _RD2 0042                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        u700 0167                        u701 0166  
                      u720 0403                        u640 0136                        u721 0402  
                      u641 0135                        u650 013A                        u810 031D  
                      u651 0139                        u715 0228                        u811 031C  
                      u740 0417                        u660 01AF                        u741 0416  
                      u661 01AE                        u805 030F                        u670 01BA  
                      u830 032E                        u910 0279                        u735 0408  
                      u671 01B9                        u831 032D                        u911 0278  
                      u760 0432                        u920 02D8                        u680 01C1  
                      u761 0431                        u681 01C0                        u825 031E  
                      u905 026D                        u930 0157                        u690 01C8  
                      u850 0342                        u755 0419                        u931 0156  
                      u691 01C7                        u851 0341                        u835 032A  
                      u780 0450                        u940 0147                        u860 024A  
                      u781 044F                        u765 042E                        u925 02D3  
                      u941 0146                        u845 0336                        u861 0249  
                      u950 01FE                        u790 030B                        u775 0442  
                      u951 01FD                        u791 030A                        u960 0205  
                      u880 025C                        u961 0204                        u881 025B  
                      u970 020B                        u890 0266                        u971 020A  
                      u891 0265                        u875 024E                        u980 01D9  
                      u981 01D8                        u990 01EB                        u991 01EA  
                      u895 0262                        fsr0 0004                        indf 0000  
                     l1401 044A                       l1403 0450                       l1411 030B  
                     l1341 012E                       l1501 01E6                       l1421 032E  
                     l1413 030E                       l1343 012E                       l1503 01EE  
                     l1351 019D                       l1511 0348                       l1423 0334  
                     l1415 0315                       l1407 0303                       l1345 0136  
                     l1361 01C8                       l1353 01AB                       l1513 034D  
                     l1521 036F                       l1425 0335                       l1417 0319  
                     l1409 0305                       l1441 0258                       l1433 0244  
                     l1363 015B                       l1347 0191                       l1355 01AF  
                     l1507 017B                       l1523 0375                       l1515 035E  
                     l1531 0398                       l1371 0218                       l1427 033C  
                     l1419 031D                       l1443 025C                       l1435 024A  
                     l1451 0279                       l1603 04E0                       l1461 02F6  
                     l1365 0160                       l1349 0194                       l1357 01BA  
                     l1509 0187                       l1525 0386                       l1517 0363  
                     l1541 03BB                       l1533 03A1                       l1381 023E  
                     l1373 0222                       l1429 0342                       l1445 0266  
                     l1437 024D                       l1621 052B                       l1613 0509  
                     l1701 0659                       l1391 0417                       l1383 03F3  
                     l1463 02FC                       l1455 02C0                       l1471 013B  
                     l1359 01C1                       l1367 016C                       l1527 038B  
                     l1519 0369                       l1551 03DA                       l1543 03C2  
                     l1535 03A6                       l1375 0225                       l1447 026C  
                     l1439 0254                       l1631 058B                       l1623 0532  
                     l1711 0687                       l1703 0667                       l1393 0420  
                     l1385 0403                       l1465 02FF                       l1457 02C8  
                     l1473 0140                       l1481 01FE                       l1369 016F  
                     l1529 0391                       l1553 03E0                       l1545 03C8  
                     l1537 03AC                       l1377 0233                       l1561 0281  
                     l1449 0273                       l1641 05B3                       l1625 0536  
                     l1609 04ED                       l1617 0514                       l1801 07EF  
                     l1721 06AC                       l1713 068C                       l1705 066D  
                     l1395 0432                       l1387 0406                       l1459 02F5  
                     l1467 014B                       l1483 01FF                       l1475 01F1  
                     l1555 03E6                       l1547 03CE                       l1539 03B5  
                     l1379 0238                       l1563 029D                       l1635 0597  
                     l1627 053B                       l1619 0525                       l1571 0467  
                     l1643 05BC                       l1731 06D7                       l1723 06BA  
                     l1715 0694                       l1707 0672                       l1397 0440  
                     l1389 0413                       l1493 01CD                       l1469 0150  
                     l1485 020B                       l1477 01F6                       l1557 03EC  
                     l1549 03D4                       l1565 02A3                       l1629 056A  
                     l1637 05A8                       l1581 049B                       l1645 05CE  
                     l1573 046E                       l1741 06FF                       l1733 06D8  
                     l1725 06C0                       l1717 069D                       l1709 0676  
                     l1399 0441                       l1495 01D2                       l1487 0210  
                     l1479 01FA                       l1559 027E                       l1639 05AF  
                     l1583 04A3                       l1591 04B5                       l1575 0473  
                     l1567 045C                       l1751 0730                       l1735 06E9  
                     l1727 06CE                       l1743 0708                       l1719 06A6  
                     l1671 05D3                       l1497 01D9                       l1489 0213  
                     l1593 04BD                       l1585 04A7                       l1569 0461  
                     l1761 074E                       l1753 0735                       l1745 070E  
                     l1737 06EE                       l1729 06D2                       l1681 05FC  
                     l1673 05D6                       l1499 01DF                       l1587 04AB  
                     l1579 0477                       l1763 0753                       l1755 073A  
                     l1747 071C                       l1771 0772                       l1739 06F6  
                     l1691 062C                       l1683 060A                       l1675 05DA  
                     l1589 04AF                       l1781 079F                       l1773 0778  
                     l1765 0758                       l1757 0740                       l1749 0722  
                     l1693 063A                       l1685 0612                       l1677 05E9  
                     l1599 04C4                       l1791 07BB                       l1783 07A4  
                     l1775 0786                       l1767 0760                       l1759 0746  
                     l1695 063F                       l1687 061B                       l1679 05F7  
                     l1793 07C6                       l1785 07AA                       l1777 078C  
                     l1769 0769                       l1697 0645                       l1689 0623  
                     l1795 07CB                       l1787 07B0                       l1779 079A  
                     l1699 0653                       l1893 0489                       l1797 07DE  
                     l1789 07B5                       l1895 051D                       l1799 07E6  
                     l1897 05A0                       STR_1 0061                       STR_2 0036  
                     STR_3 0068                       STR_4 0059                       STR_5 0068  
                     STR_6 0059                       STR_7 0050                       STR_8 006B  
                     STR_9 0046                       u1000 034D                       u1001 034C  
                     u1020 0375                       u1100 04DF                       u1021 0374  
                     u1101 04DE                       u1110 04EA                       u1015 0355  
                     u1111 04E9                       u1040 028B                       u1120 0508  
                     u1200 06AC                       u1121 0507                       u1105 04DB  
                     u1201 06AB                       u1050 02AD                       u1130 0513  
                     u1210 06C0                       u1035 037D                       u1131 0512  
                     u1211 06BF                       u1060 02BF                       u1140 052B  
                     u1220 06D7                       u1061 02BE                       u1141 052A  
                     u1125 0504                       u1221 06D6                       u1150 05BC  
                     u1070 0467                       u1230 070E                       u1151 05BB  
                     u1071 0466                       u1231 070D                       u1160 05CE  
                     u1080 049B                       u1240 0722                       u1161 05CD  
                     u1081 049A                       u1241 0721                       u1090 04AB  
                     u1250 0778                       u1170 0645                       u1091 04AA  
                     u1251 0777                       u1307 064D                       u1171 0644  
                     u1260 078C                       u1180 0659                       u1261 078B  
                     u1317 0661                       u1181 0658                       u1190 0672  
                     u1407 03BD                       u1327 06B4                       u1191 0671  
                     u1417 018B                       u1337 06C8                       u1427 0198  
                     u1347 0716                       u1437 01A4                       u1357 072A  
                     u1277 05F1                       u1367 0780                       u1287 0604  
                     u1377 0794                       u1297 0634                       u1387 039C  
                     u1397 03B0                       _main 05D3                       btemp 007E  
            ??_i2c_is_idle 0070                       start 0000               lcd_goto_xy@c 0073  
             lcd_goto_xy@r 0076              _i2c_rep_start 013B           lcd_goto_xy@high4 0078  
                    ?_main 0070                      STR_10 0025            __end_of___lldiv 0459  
              i2c_read@ack 0071            __end_of___lwdiv 0347            __end_of___lwmod 027E  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
             main@received 0045            __end_of_lcd_cmd 017B            __end_of_dpowers 001D  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 05D3            __initialization 07FC             ?_i2c_rep_start 0070  
             __end_of_main 07FC           __end_of_i2c_read 01F0        __end_of_i2c_is_idle 013B  
         __end_of_i2c_stop 016B                     ??_main 002E               i2c_read@data 0072  
                   _SSPADD 0093                     _SSPCON 0014                     _SSPBUF 0013  
       __size_of_i2c_start 0010         __size_of_i2c_write 0027           __end_of_lcd_data 01CC  
         __end_of_lcd_init 03F3            _i2c_master_init 02C0                  ??___lldiv 0078  
     __size_of_lcd_goto_xy 0051                  ??___lwdiv 0074                  ??___lwmod 007C  
 __end_of_lcd_write_string 02C0                  ??_lcd_cmd 0072                  ??_sprintf 0023  
        lcd_write_string@i 007B    __end_of__initialization 07FC              lcd_write@byte 0075  
          ??_i2c_rep_start 0070                _i2c_is_idle 012E   i2c_master_init@baud_rate 0020  
           __pcstackCOMMON 0070          __end_of_i2c_start 015B          __end_of_i2c_write 0217  
       __size_of_lcd_clear 0016         __size_of_lcd_clock 0019         __size_of_lcd_write 002D  
                ?_i2c_read 0070                  ?_i2c_stop 0070    __end_of_i2c_master_init 0303  
               __pmaintext 05D3                    _SSPCON2 0091                  ?_lcd_data 0070  
                ?_lcd_init 0070                    _SSPSTAT 0094                 __stringtab 0003  
               ??_i2c_read 0070                 ??_i2c_stop 0070        lcd_write@low_nibble 0073  
        __end_of_lcd_clear 0191          __end_of_lcd_clock 01AA          __end_of_lcd_write 0244  
                  ___lldiv 03F3                    ___lwdiv 0303                    ___lwmod 0244  
                  __ptext1 0459                    __ptext2 0244                    __ptext3 0303  
                  __ptext4 027E                    __ptext5 0217                    __ptext6 0398  
                  __ptext7 0347                    __ptext8 017B                    __ptext9 016B  
                  _lcd_cmd 016B          __end_of_hexpowers 0025                    _dpowers 0013  
               ??_lcd_data 0070                    _sprintf 0459                 ??_lcd_init 0073  
     end_of_initialization 07FC           ?_i2c_master_init 0020            ___lldiv@divisor 0070  
          ___lldiv@counter 007D          ?_lcd_write_string 0076         ??_lcd_write_string 0078  
               lcd_cmd@cmd 0072               ?_i2c_is_idle 0070              ??_lcd_goto_xy 0074  
          lcd_goto_xy@low4 0077            lcd_goto_xy@temp 0079        start_initialization 07FC  
                _i2c_start 014B                  _i2c_write 01F0          __size_of_i2c_read 0024  
        __size_of_i2c_stop 0010      __end_of_i2c_rep_start 014B       lcd_write@high_nibble 0074  
      __end_of_lcd_goto_xy 0398                  ___latbits 0002              __pcstackBANK0 0020  
               ?_i2c_start 0070                 ?_i2c_write 0070          __size_of_lcd_data 0022  
        __size_of_lcd_init 005B                sprintf@flag 0029                sprintf@prec 0028  
         ___lwdiv@dividend 0072                   ?___lldiv 0070                   ?___lwdiv 0070  
                 ?___lwmod 0078                  _lcd_clear 017B                  _lcd_clock 0191  
                __pstrings 0003                   ?_lcd_cmd 0070                  _lcd_write 0217  
                _hexpowers 001D           ___lwdiv@quotient 0075                   ?_sprintf 0020  
                 _PIR1bits 000C                _lcd_goto_xy 0347       __size_of_i2c_is_idle 000D  
               ?_lcd_clear 0070                 ?_lcd_clock 0070                __stringbase 0012  
               ?_lcd_write 0070                ??_i2c_start 0070                ??_i2c_write 0070  
__size_of_lcd_write_string 0042                   _i2c_read 01CC                   _i2c_stop 015B  
 __size_of_i2c_master_init 0043           __size_of___lldiv 0066           __size_of___lwdiv 0044  
         __size_of___lwmod 003A         __end_of__stringtab 0013           __size_of_lcd_cmd 0010  
               sprintf@idx 0026                 sprintf@val 002B            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 01AA                   __ptext11 0191  
                 __ptext12 01F0                   __ptext13 015B                   __ptext14 014B  
                 __ptext15 013B                   __ptext16 01CC                   __ptext17 012E  
                 __ptext18 02C0                   __ptext19 03F3                   _lcd_data 01AA  
                 _lcd_init 0398           __size_of_sprintf 017A              __size_of_main 0229  
                 main@data 0046                ??_lcd_clear 0073                ??_lcd_clock 0070  
                 main@str1 003B                   main@str2 0031                ??_lcd_write 0072  
                sprintf@ap 0027                  sprintf@sp 002A           ___lwmod@dividend 007A  
         ___lldiv@dividend 0074                  stringcode 000D                   sprintf@c 002D  
                 sprintf@f 0020           ___lldiv@quotient 0079            ___lwmod@divisor 0078  
          ___lwmod@counter 007D          ??_i2c_master_init 0024                   stringdir 000D  
                 stringtab 0003                _SSPCON2bits 0091     __size_of_i2c_rep_start 0010  
          i2c_write@d_addr 0070           _lcd_write_string 027E                 _SSPCONbits 0014  
      lcd_write_string@str 0076               ?_lcd_goto_xy 0073  
