

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jan 28 13:23:32 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.31
    17                           ; Generated 13/10/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0088                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  001A                     _RCREG	set	26
   172  0018                     _RCSTAbits	set	24
   173  0019                     _TXREG	set	25
   174  0065                     _RCIF	set	101
   175  0064                     _TXIF	set	100
   176  00C6                     _RX9	set	198
   177  005E                     _PEIE	set	94
   178  005F                     _GIE	set	95
   179  00C4                     _CREN	set	196
   180  00C7                     _SPEN	set	199
   181  0099                     _SPBRG	set	153
   182  04C5                     _TXEN	set	1221
   183  04C6                     _TX9	set	1222
   184  0465                     _RCIE	set	1125
   185  0464                     _TXIE	set	1124
   186  04C4                     _SYNC	set	1220
   187  04C2                     _BRGH	set	1218
   188  043F                     _TRISC7	set	1087
   189  043E                     _TRISC6	set	1086
   190                           
   191                           	psect	cinit
   192  07FC                     start_initialization:	
   193                           ; #config settings
   194                           
   195  07FC                     __initialization:
   196  07FC                     end_of_initialization:	
   197                           ;End of C runtime variable initialization code
   198                           
   199  07FC                     __end_of__initialization:
   200  07FC  0183               	clrf	3
   201  07FD  120A  118A  2F91   	ljmp	_main	;jump to C main() function
   202                           
   203                           	psect	cstackCOMMON
   204  0070                     __pcstackCOMMON:
   205  0070                     ?_uart_init:
   206  0070                     ??_uart_init:	
   207                           ; 1 bytes @ 0x0
   208                           
   209  0070                     ?_uart_tx_char:	
   210                           ; 1 bytes @ 0x0
   211                           
   212  0070                     ??_uart_tx_char:	
   213                           ; 1 bytes @ 0x0
   214                           
   215  0070                     ?_uart_rx_char:	
   216                           ; 1 bytes @ 0x0
   217                           
   218  0070                     ??_uart_rx_char:	
   219                           ; 1 bytes @ 0x0
   220                           
   221  0070                     ?_uart_tx_str:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0070                     ?_uart_rx_str:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0070                     ?_main:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0070                     uart_tx_char@data:	
   231                           ; 1 bytes @ 0x0
   232                           
   233                           
   234                           ; 1 bytes @ 0x0
   235  0070                     	ds	1
   236  0071                     ??_uart_tx_str:
   237  0071                     ??_uart_rx_str:	
   238                           ; 1 bytes @ 0x1
   239                           
   240                           
   241                           ; 1 bytes @ 0x1
   242  0071                     	ds	1
   243  0072                     uart_tx_str@i:
   244                           
   245                           ; 1 bytes @ 0x2
   246  0072                     	ds	1
   247  0073                     uart_tx_str@str:
   248  0073                     uart_rx_str@p_str:	
   249                           ; 1 bytes @ 0x3
   250                           
   251                           
   252                           ; 1 bytes @ 0x3
   253  0073                     	ds	1
   254  0074                     uart_rx_str@len:
   255                           
   256                           ; 1 bytes @ 0x4
   257  0074                     	ds	1
   258  0075                     uart_rx_str@ch:
   259                           
   260                           ; 1 bytes @ 0x5
   261  0075                     	ds	1
   262  0076                     ??_main:
   263                           
   264                           ; 1 bytes @ 0x6
   265  0076                     	ds	3
   266                           
   267                           	psect	cstackBANK0
   268  0020                     __pcstackBANK0:
   269  0020                     main@str:
   270                           
   271                           ; 20 bytes @ 0x0
   272  0020                     	ds	20
   273                           
   274                           	psect	maintext
   275  0791                     __pmaintext:	
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 9 in file "main.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;  str            20    0[BANK0 ] unsigned char [20]
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : B00/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   295 ;;      Params:         0       0       0       0       0
   296 ;;      Locals:         0      20       0       0       0
   297 ;;      Temps:          3       0       0       0       0
   298 ;;      Totals:         3      20       0       0       0
   299 ;;Total ram usage:       23 bytes
   300 ;; Hardware stack levels required when called:    2
   301 ;; This function calls:
   302 ;;		_uart_init
   303 ;;		_uart_rx_str
   304 ;;		_uart_tx_str
   305 ;; This function is called by:
   306 ;;		Startup code after reset
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310                           
   311                           ;psect for function _main
   312  0791                     _main:
   313  0791                     l743:	
   314                           ;incstack = 0
   315                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   316                           
   317                           
   318                           ;main.c: 11:     char str[20];;main.c: 13:     uart_init();
   319  0791  120A  118A  2755  120A  118A  	fcall	_uart_init
   320  0796                     l745:
   321                           
   322                           ;main.c: 14:     _delay((unsigned long)((200)*(20000000/4000.0)));
   323  0796  3006               	movlw	6
   324  0797  00F8               	movwf	??_main+2
   325  0798  3013               	movlw	19
   326  0799  00F7               	movwf	??_main+1
   327  079A  30AD               	movlw	173
   328  079B  00F6               	movwf	??_main
   329  079C                     u107:
   330  079C  0BF6               	decfsz	??_main,f
   331  079D  2F9C               	goto	u107
   332  079E  0BF7               	decfsz	??_main+1,f
   333  079F  2F9C               	goto	u107
   334  07A0  0BF8               	decfsz	??_main+2,f
   335  07A1  2F9C               	goto	u107
   336  07A2  2FA3               	nop2
   337  07A3                     l747:
   338                           
   339                           ;main.c: 17:         uart_rx_str(str);
   340  07A3  3020               	movlw	(low (main@str| 0))& (0+255)
   341  07A4  120A  118A  27C0  120A  118A  	fcall	_uart_rx_str
   342  07A9                     l749:
   343                           
   344                           ;main.c: 18:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   345  07A9  301A               	movlw	26
   346  07AA  00F8               	movwf	??_main+2
   347  07AB  305E               	movlw	94
   348  07AC  00F7               	movwf	??_main+1
   349  07AD  306E               	movlw	110
   350  07AE  00F6               	movwf	??_main
   351  07AF                     u117:
   352  07AF  0BF6               	decfsz	??_main,f
   353  07B0  2FAF               	goto	u117
   354  07B1  0BF7               	decfsz	??_main+1,f
   355  07B2  2FAF               	goto	u117
   356  07B3  0BF8               	decfsz	??_main+2,f
   357  07B4  2FAF               	goto	u117
   358  07B5  0000               	nop
   359  07B6                     l751:
   360                           
   361                           ;main.c: 19:         uart_tx_str(str);
   362  07B6  3020               	movlw	(low (main@str| 0))& (0+255)
   363  07B7  120A  118A  2773  120A  118A  	fcall	_uart_tx_str
   364  07BC  2FA3               	goto	l747
   365  07BD  120A  118A  2800   	ljmp	start
   366  07C0                     __end_of_main:
   367                           
   368                           	psect	text1
   369  0773                     __ptext1:	
   370 ;; *************** function _uart_tx_str *****************
   371 ;; Defined at:
   372 ;;		line 55 in file "./../../includes/uart.h"
   373 ;; Parameters:    Size  Location     Type
   374 ;;  str             1    wreg     PTR const unsigned char 
   375 ;;		 -> main@str(20), 
   376 ;; Auto vars:     Size  Location     Type
   377 ;;  str             1    3[COMMON] PTR const unsigned char 
   378 ;;		 -> main@str(20), 
   379 ;;  i               1    2[COMMON] unsigned char 
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   389 ;;      Params:         0       0       0       0       0
   390 ;;      Locals:         2       0       0       0       0
   391 ;;      Temps:          1       0       0       0       0
   392 ;;      Totals:         3       0       0       0       0
   393 ;;Total ram usage:        3 bytes
   394 ;; Hardware stack levels used:    1
   395 ;; Hardware stack levels required when called:    1
   396 ;; This function calls:
   397 ;;		_uart_tx_char
   398 ;; This function is called by:
   399 ;;		_main
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           
   404                           ;psect for function _uart_tx_str
   405  0773                     _uart_tx_str:
   406                           
   407                           ;incstack = 0
   408                           ; Regs used in _uart_tx_str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   409                           ;uart_tx_str@str stored from wreg
   410  0773  00F3               	movwf	uart_tx_str@str
   411  0774                     l713:
   412                           
   413                           ;./../../includes/uart.h: 57:     for (uint8_t i = 0; str[i] != '\0'; i++)
   414  0774  01F2               	clrf	uart_tx_str@i
   415  0775  2F85               	goto	l719
   416  0776                     l715:
   417                           
   418                           ;./../../includes/uart.h: 58:         uart_tx_char(str[i]);
   419  0776  0872               	movf	uart_tx_str@i,w
   420  0777  0773               	addwf	uart_tx_str@str,w
   421  0778  00F1               	movwf	??_uart_tx_str
   422  0779  0871               	movf	??_uart_tx_str,w
   423  077A  0084               	movwf	4
   424  077B  0800               	movf	0,w
   425  077C  120A  118A  2738  120A  118A  	fcall	_uart_tx_char
   426  0781                     l717:
   427  0781  3001               	movlw	1
   428  0782  00F1               	movwf	??_uart_tx_str
   429  0783  0871               	movf	??_uart_tx_str,w
   430  0784  07F2               	addwf	uart_tx_str@i,f
   431  0785                     l719:
   432  0785  0872               	movf	uart_tx_str@i,w
   433  0786  0773               	addwf	uart_tx_str@str,w
   434  0787  00F1               	movwf	??_uart_tx_str
   435  0788  0871               	movf	??_uart_tx_str,w
   436  0789  0084               	movwf	4
   437  078A  1383               	bcf	3,7	;select IRP bank0
   438  078B  0800               	movf	0,w
   439  078C  1D03               	btfss	3,2
   440  078D  2F8F               	goto	u51
   441  078E  2F90               	goto	u50
   442  078F                     u51:
   443  078F  2F76               	goto	l715
   444  0790                     u50:
   445  0790                     l63:
   446  0790  0008               	return
   447  0791                     __end_of_uart_tx_str:
   448                           
   449                           	psect	text2
   450  0738                     __ptext2:	
   451 ;; *************** function _uart_tx_char *****************
   452 ;; Defined at:
   453 ;;		line 36 in file "./../../includes/uart.h"
   454 ;; Parameters:    Size  Location     Type
   455 ;;  data            1    wreg     const unsigned char 
   456 ;; Auto vars:     Size  Location     Type
   457 ;;  data            1    0[COMMON] const unsigned char 
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		wreg
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   467 ;;      Params:         0       0       0       0       0
   468 ;;      Locals:         1       0       0       0       0
   469 ;;      Temps:          0       0       0       0       0
   470 ;;      Totals:         1       0       0       0       0
   471 ;;Total ram usage:        1 bytes
   472 ;; Hardware stack levels used:    1
   473 ;; This function calls:
   474 ;;		Nothing
   475 ;; This function is called by:
   476 ;;		_uart_tx_str
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           
   481                           ;psect for function _uart_tx_char
   482  0738                     _uart_tx_char:
   483                           
   484                           ;incstack = 0
   485                           ; Regs used in _uart_tx_char: [wreg]
   486                           ;uart_tx_char@data stored from wreg
   487  0738  00F0               	movwf	uart_tx_char@data
   488  0739                     l675:
   489  0739                     l46:	
   490                           ;./../../includes/uart.h: 38:     while (TXIF == 0);
   491                           
   492  0739  1283               	bcf	3,5	;RP0=0, select bank0
   493  073A  1303               	bcf	3,6	;RP1=0, select bank0
   494  073B  1E0C               	btfss	12,4	;volatile
   495  073C  2F3E               	goto	u11
   496  073D  2F3F               	goto	u10
   497  073E                     u11:
   498  073E  2F39               	goto	l46
   499  073F                     u10:
   500  073F                     l677:
   501                           
   502                           ;./../../includes/uart.h: 39:     TXREG = data;
   503  073F  0870               	movf	uart_tx_char@data,w
   504  0740  0099               	movwf	25	;volatile
   505  0741                     l49:
   506  0741  0008               	return
   507  0742                     __end_of_uart_tx_char:
   508                           
   509                           	psect	text3
   510  07C0                     __ptext3:	
   511 ;; *************** function _uart_rx_str *****************
   512 ;; Defined at:
   513 ;;		line 61 in file "./../../includes/uart.h"
   514 ;; Parameters:    Size  Location     Type
   515 ;;  p_str           1    wreg     PTR unsigned char 
   516 ;;		 -> main@str(20), 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  p_str           1    3[COMMON] PTR unsigned char 
   519 ;;		 -> main@str(20), 
   520 ;;  ch              1    5[COMMON] unsigned char 
   521 ;;  len             1    4[COMMON] unsigned char 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   531 ;;      Params:         0       0       0       0       0
   532 ;;      Locals:         3       0       0       0       0
   533 ;;      Temps:          2       0       0       0       0
   534 ;;      Totals:         5       0       0       0       0
   535 ;;Total ram usage:        5 bytes
   536 ;; Hardware stack levels used:    1
   537 ;; Hardware stack levels required when called:    1
   538 ;; This function calls:
   539 ;;		_uart_rx_char
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           
   546                           ;psect for function _uart_rx_str
   547  07C0                     _uart_rx_str:
   548                           
   549                           ;incstack = 0
   550                           ; Regs used in _uart_rx_str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   551                           ;uart_rx_str@p_str stored from wreg
   552  07C0  00F3               	movwf	uart_rx_str@p_str
   553  07C1                     l721:
   554                           
   555                           ;./../../includes/uart.h: 63:     char ch;;./../../includes/uart.h: 64:     char len = 0
      +                          ;
   556  07C1  01F4               	clrf	uart_rx_str@len
   557  07C2                     l723:
   558                           
   559                           ;./../../includes/uart.h: 67:         ch = uart_rx_char();
   560  07C2  120A  118A  2742  120A  118A  	fcall	_uart_rx_char
   561  07C7  00F1               	movwf	??_uart_rx_str
   562  07C8  0871               	movf	??_uart_rx_str,w
   563  07C9  00F5               	movwf	uart_rx_str@ch
   564  07CA                     l725:
   565                           
   566                           ;./../../includes/uart.h: 69:         if((ch=='\r') || (ch=='\n'))
   567  07CA  300D               	movlw	13
   568  07CB  0675               	xorwf	uart_rx_str@ch,w
   569  07CC  1903               	btfsc	3,2
   570  07CD  2FCF               	goto	u61
   571  07CE  2FD0               	goto	u60
   572  07CF                     u61:
   573  07CF  2FD6               	goto	l729
   574  07D0                     u60:
   575  07D0                     l727:
   576  07D0  300A               	movlw	10
   577  07D1  0675               	xorwf	uart_rx_str@ch,w
   578  07D2  1D03               	btfss	3,2
   579  07D3  2FD5               	goto	u71
   580  07D4  2FD6               	goto	u70
   581  07D5                     u71:
   582  07D5  2FDE               	goto	l733
   583  07D6                     u70:
   584  07D6                     l729:
   585                           
   586                           ;./../../includes/uart.h: 70:         {;./../../includes/uart.h: 71:             p_str[l
      +                          en] = 0;
   587  07D6  0874               	movf	uart_rx_str@len,w
   588  07D7  0773               	addwf	uart_rx_str@p_str,w
   589  07D8  00F1               	movwf	??_uart_rx_str
   590  07D9  0871               	movf	??_uart_rx_str,w
   591  07DA  0084               	movwf	4
   592  07DB  1383               	bcf	3,7	;select IRP bank0
   593  07DC  0180               	clrf	0
   594                           
   595                           ;./../../includes/uart.h: 72:             break;
   596  07DD  2FFB               	goto	l75
   597  07DE                     l733:
   598  07DE  3008               	movlw	8
   599  07DF  0675               	xorwf	uart_rx_str@ch,w
   600  07E0  1D03               	btfss	3,2
   601  07E1  2FE3               	goto	u81
   602  07E2  2FE4               	goto	u80
   603  07E3                     u81:
   604  07E3  2FEC               	goto	l739
   605  07E4                     u80:
   606  07E4                     l735:
   607  07E4  0874               	movf	uart_rx_str@len,w
   608  07E5  1903               	btfsc	3,2
   609  07E6  2FE8               	goto	u91
   610  07E7  2FE9               	goto	u90
   611  07E8                     u91:
   612  07E8  2FEC               	goto	l739
   613  07E9                     u90:
   614  07E9                     l737:
   615                           
   616                           ;./../../includes/uart.h: 75:         {;./../../includes/uart.h: 76:             len--;
   617  07E9  3001               	movlw	1
   618  07EA  02F4               	subwf	uart_rx_str@len,f
   619                           
   620                           ;./../../includes/uart.h: 77:         }
   621  07EB  2FC2               	goto	l723
   622  07EC                     l739:
   623                           
   624                           ;./../../includes/uart.h: 79:         {;./../../includes/uart.h: 80:             p_str[l
      +                          en] = ch;
   625  07EC  0875               	movf	uart_rx_str@ch,w
   626  07ED  00F1               	movwf	??_uart_rx_str
   627  07EE  0874               	movf	uart_rx_str@len,w
   628  07EF  0773               	addwf	uart_rx_str@p_str,w
   629  07F0  00F2               	movwf	??_uart_rx_str+1
   630  07F1  0872               	movf	??_uart_rx_str+1,w
   631  07F2  0084               	movwf	4
   632  07F3  0871               	movf	??_uart_rx_str,w
   633  07F4  1383               	bcf	3,7	;select IRP bank0
   634  07F5  0080               	movwf	0
   635  07F6                     l741:
   636                           
   637                           ;./../../includes/uart.h: 81:             len++;
   638  07F6  3001               	movlw	1
   639  07F7  00F1               	movwf	??_uart_rx_str
   640  07F8  0871               	movf	??_uart_rx_str,w
   641  07F9  07F4               	addwf	uart_rx_str@len,f
   642  07FA  2FC2               	goto	l723
   643  07FB                     l75:
   644  07FB  0008               	return
   645  07FC                     __end_of_uart_rx_str:
   646                           
   647                           	psect	text4
   648  0742                     __ptext4:	
   649 ;; *************** function _uart_rx_char *****************
   650 ;; Defined at:
   651 ;;		line 42 in file "./../../includes/uart.h"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  framing_erro    1    0        unsigned char 
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      unsigned char 
   658 ;; Registers used:
   659 ;;		wreg
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   665 ;;      Params:         0       0       0       0       0
   666 ;;      Locals:         1       0       0       0       0
   667 ;;      Temps:          0       0       0       0       0
   668 ;;      Totals:         1       0       0       0       0
   669 ;;Total ram usage:        1 bytes
   670 ;; Hardware stack levels used:    1
   671 ;; This function calls:
   672 ;;		Nothing
   673 ;; This function is called by:
   674 ;;		_uart_rx_str
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           
   679                           ;psect for function _uart_rx_char
   680  0742                     _uart_rx_char:
   681  0742                     l679:	
   682                           ;incstack = 0
   683                           ; Regs used in _uart_rx_char: [wreg]
   684                           
   685                           
   686                           ;./../../includes/uart.h: 44:     if(RCSTAbits.FERR) {
   687  0742  1283               	bcf	3,5	;RP0=0, select bank0
   688  0743  1303               	bcf	3,6	;RP1=0, select bank0
   689  0744  1D18               	btfss	24,2	;volatile
   690  0745  2F47               	goto	u21
   691  0746  2F48               	goto	u20
   692  0747                     u21:
   693  0747  2F49               	goto	l683
   694  0748                     u20:
   695  0748                     l681:
   696  0748  081A               	movf	26,w	;volatile
   697  0749                     l683:
   698                           
   699                           ;./../../includes/uart.h: 47:     if (RCSTAbits.OERR) {
   700  0749  1C98               	btfss	24,1	;volatile
   701  074A  2F4C               	goto	u31
   702  074B  2F4D               	goto	u30
   703  074C                     u31:
   704  074C  2F4F               	goto	l54
   705  074D                     u30:
   706  074D                     l685:
   707                           
   708                           ;./../../includes/uart.h: 48:         CREN = 0;
   709  074D  1218               	bcf	24,4	;volatile
   710                           
   711                           ;./../../includes/uart.h: 49:         CREN = 1;
   712  074E  1618               	bsf	24,4	;volatile
   713  074F                     l54:
   714  074F  1E8C               	btfss	12,5	;volatile
   715  0750  2F52               	goto	u41
   716  0751  2F53               	goto	u40
   717  0752                     u41:
   718  0752  2F4F               	goto	l54
   719  0753                     u40:
   720  0753                     l687:
   721                           
   722                           ;./../../includes/uart.h: 52:     return RCREG;
   723  0753  081A               	movf	26,w	;volatile
   724  0754                     l57:
   725  0754  0008               	return
   726  0755                     __end_of_uart_rx_char:
   727                           
   728                           	psect	text5
   729  0755                     __ptext5:	
   730 ;; *************** function _uart_init *****************
   731 ;; Defined at:
   732 ;;		line 16 in file "./../../includes/uart.h"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   746 ;;      Params:         0       0       0       0       0
   747 ;;      Locals:         0       0       0       0       0
   748 ;;      Temps:          0       0       0       0       0
   749 ;;      Totals:         0       0       0       0       0
   750 ;;Total ram usage:        0 bytes
   751 ;; Hardware stack levels used:    1
   752 ;; This function calls:
   753 ;;		Nothing
   754 ;; This function is called by:
   755 ;;		_main
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           
   760                           ;psect for function _uart_init
   761  0755                     _uart_init:
   762  0755                     l691:	
   763                           ;incstack = 0
   764                           ; Regs used in _uart_init: [wreg]
   765                           
   766                           
   767                           ;./../../includes/uart.h: 18:     TRISC6 = 1;
   768  0755  1683               	bsf	3,5	;RP0=1, select bank1
   769  0756  1303               	bcf	3,6	;RP1=0, select bank1
   770  0757  1707               	bsf	7,6	;volatile
   771                           
   772                           ;./../../includes/uart.h: 19:     TRISC7 = 1;
   773  0758  1787               	bsf	7,7	;volatile
   774                           
   775                           ;./../../includes/uart.h: 20:     SPEN = 1;
   776  0759  1283               	bcf	3,5	;RP0=0, select bank0
   777  075A  1303               	bcf	3,6	;RP1=0, select bank0
   778  075B  1798               	bsf	24,7	;volatile
   779                           
   780                           ;./../../includes/uart.h: 21:     BRGH = 1;
   781  075C  1683               	bsf	3,5	;RP0=1, select bank1
   782  075D  1303               	bcf	3,6	;RP1=0, select bank1
   783  075E  1518               	bsf	24,2	;volatile
   784  075F                     l693:
   785                           
   786                           ;./../../includes/uart.h: 22:     SPBRG = 129;
   787  075F  3081               	movlw	129
   788  0760  0099               	movwf	25	;volatile
   789  0761                     l695:
   790                           
   791                           ;./../../includes/uart.h: 23:     SYNC = 0;
   792  0761  1218               	bcf	24,4	;volatile
   793  0762                     l697:
   794                           
   795                           ;./../../includes/uart.h: 24:     CREN = 1;
   796  0762  1283               	bcf	3,5	;RP0=0, select bank0
   797  0763  1303               	bcf	3,6	;RP1=0, select bank0
   798  0764  1618               	bsf	24,4	;volatile
   799  0765                     l699:
   800                           
   801                           ;./../../includes/uart.h: 26:     GIE = 1;
   802  0765  178B               	bsf	11,7	;volatile
   803  0766                     l701:
   804                           
   805                           ;./../../includes/uart.h: 27:     PEIE = 1;
   806  0766  170B               	bsf	11,6	;volatile
   807  0767                     l703:
   808                           
   809                           ;./../../includes/uart.h: 28:     TXIE = 1;
   810  0767  1683               	bsf	3,5	;RP0=1, select bank1
   811  0768  1303               	bcf	3,6	;RP1=0, select bank1
   812  0769  160C               	bsf	12,4	;volatile
   813  076A                     l705:
   814                           
   815                           ;./../../includes/uart.h: 29:     RCIE = 1;
   816  076A  168C               	bsf	12,5	;volatile
   817  076B                     l707:
   818                           
   819                           ;./../../includes/uart.h: 31:     TX9 = 0;
   820  076B  1318               	bcf	24,6	;volatile
   821  076C                     l709:
   822                           
   823                           ;./../../includes/uart.h: 32:     RX9 = 0;
   824  076C  1283               	bcf	3,5	;RP0=0, select bank0
   825  076D  1303               	bcf	3,6	;RP1=0, select bank0
   826  076E  1318               	bcf	24,6	;volatile
   827  076F                     l711:
   828                           
   829                           ;./../../includes/uart.h: 33:     TXEN = 1;
   830  076F  1683               	bsf	3,5	;RP0=1, select bank1
   831  0770  1303               	bcf	3,6	;RP1=0, select bank1
   832  0771  1698               	bsf	24,5	;volatile
   833  0772                     l43:
   834  0772  0008               	return
   835  0773                     __end_of_uart_init:
   836  007E                     btemp	set	126	;btemp
   837  007E                     wtemp0	set	126
   838                           
   839                           	psect	config
   840                           
   841                           ;Config register CONFIG @ 0x2007
   842                           ;	Oscillator Selection bits
   843                           ;	FOSC = HS, HS oscillator
   844                           ;	Watchdog Timer Enable bit
   845                           ;	WDTE = OFF, WDT disabled
   846                           ;	Power-up Timer Enable bit
   847                           ;	PWRTE = OFF, PWRT disabled
   848                           ;	Brown-out Reset Enable bit
   849                           ;	BOREN = OFF, BOR disabled
   850                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   851                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   852                           ;	Data EEPROM Memory Code Protection bit
   853                           ;	CPD = OFF, Data EEPROM code protection off
   854                           ;	Flash Program Memory Write Enable bits
   855                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   856                           ;	In-Circuit Debugger Mode bit
   857                           ;	DEBUG = 0x1, unprogrammed default
   858                           ;	Flash Program Memory Code Protection bit
   859                           ;	CP = OFF, Code protection off
   860  2007                     	org	8199
   861  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     20      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    uart_rx_str@p_str	PTR unsigned char  size(1) Largest target is 20
		 -> main@str(BANK0[20]), 

    uart_tx_str@str	PTR const unsigned char  size(1) Largest target is 20
		 -> main@str(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_uart_rx_str
    _uart_tx_str->_uart_tx_char
    _uart_rx_str->_uart_rx_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0     300
                                              6 COMMON     3     3      0
                                              0 BANK0     20    20      0
                          _uart_init
                        _uart_rx_str
                        _uart_tx_str
 ---------------------------------------------------------------------------------
 (1) _uart_tx_str                                          3     3      0     105
                                              1 COMMON     3     3      0
                       _uart_tx_char
 ---------------------------------------------------------------------------------
 (2) _uart_tx_char                                         1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_rx_str                                          5     5      0     165
                                              1 COMMON     5     5      0
                       _uart_rx_char
 ---------------------------------------------------------------------------------
 (2) _uart_rx_char                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _uart_init
   _uart_rx_str
     _uart_rx_char
   _uart_tx_str
     _uart_tx_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jan 28 13:23:32 2021

         uart_tx_str@str 0073                       l43 0772                       l54 074F  
                     l46 0739                       l63 0790                       l57 0754  
                     l49 0741                       l75 07FB                       u10 073F  
                     u11 073E                       u20 0748                       u21 0747  
                     u30 074D                       u31 074C                       u40 0753  
                     u41 0752                       u50 0790                       u51 078F  
                     u60 07D0                       u61 07CF                       u70 07D6  
                     u71 07D5                       u80 07E4                       u81 07E3  
                     u90 07E9                       u91 07E8                      l701 0766  
                    l711 076F                      l703 0767                      l705 076A  
                    l721 07C1                      l713 0774                      l707 076B  
                    l723 07C2                      l715 0776                      l709 076C  
                    l741 07F6                      l733 07DE                      l725 07CA  
                    l717 0781                      l735 07E4                      l727 07D0  
                    l719 0785                      l751 07B6                      l743 0791  
                    l681 0748                      l737 07E9                      l729 07D6  
                    l745 0796                      l691 0755                      l683 0749  
                    l739 07EC                      l675 0739                      l747 07A3  
                    l693 075F                      l685 074D                      l677 073F  
                    l749 07A9                      l695 0761                      l687 0753  
                    l679 0742                      l697 0762                      l699 0765  
                    _GIE 005F                      u107 079C                      u117 07AF  
                    _RX9 00C6                      _TX9 04C6                      fsr0 0004  
                    indf 0000                     _BRGH 04C2                     _CREN 00C4  
                   _PEIE 005E                     _RCIE 0465                     _RCIF 0065  
                   _SPEN 00C7                     _TXIE 0464                     _TXEN 04C5  
                   _TXIF 0064                     _SYNC 04C4                     _main 0791  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _RCREG 001A                    _SPBRG 0099                    _TXREG 0019  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07C0                   ??_main 0076                   _TRISC6 043E  
                 _TRISC7 043F             ?_uart_rx_str 0070             ?_uart_tx_str 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0791  
     __size_of_uart_init 001E                  __ptext1 0773                  __ptext2 0738  
                __ptext3 07C0                  __ptext4 0742                  __ptext5 0755  
   __size_of_uart_rx_str 003C                  main@str 0020     __size_of_uart_tx_str 001E  
   end_of_initialization 07FC            ?_uart_rx_char 0070        __end_of_uart_init 0773  
          ?_uart_tx_char 0070                _RCSTAbits 0018           ??_uart_rx_char 0070  
         ??_uart_tx_char 0070      start_initialization 07FC                ___latbits 0002  
          __pcstackBANK0 0020     __end_of_uart_rx_char 0755     __end_of_uart_tx_char 0742  
              _uart_init 0755            ??_uart_rx_str 0071            ??_uart_tx_str 0071  
             ?_uart_init 0070      __end_of_uart_rx_str 07FC      __end_of_uart_tx_str 0791  
          __size_of_main 002F    __size_of_uart_rx_char 0013    __size_of_uart_tx_char 000A  
       uart_tx_char@data 0070             _uart_rx_char 0742             _uart_tx_char 0738  
            ??_uart_init 0070         uart_rx_str@p_str 0073              _uart_rx_str 07C0  
            _uart_tx_str 0773           uart_rx_str@len 0074            uart_rx_str@ch 0075  
           uart_tx_str@i 0072  
