

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Dec 27 18:45:30 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.31
    14                           ; Generated 13/10/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168                           
   169                           	psect	nvCOMMON
   170  0076                     __pnvCOMMON:
   171  0076                     _value:
   172  0076                     	ds	2
   173  0012                     _T2CONbits	set	18
   174  0015                     _CCPR1L	set	21
   175  0017                     _CCP1CONbits	set	23
   176  0092                     _PR2	set	146
   177  043A                     _TRISC2	set	1082
   178                           
   179                           	psect	cinit
   180  07FC                     start_initialization:	
   181                           ; #config settings
   182                           
   183  07FC                     __initialization:
   184  07FC                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187  07FC                     __end_of__initialization:
   188  07FC  0183               	clrf	3
   189  07FD  120A  118A  2FB1   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	cstackCOMMON
   192  0070                     __pcstackCOMMON:
   193  0070                     ?_pwm_duty_cycle:
   194  0070                     ?_pwm_init:	
   195                           ; 1 bytes @ 0x0
   196                           
   197  0070                     ??_pwm_init:	
   198                           ; 1 bytes @ 0x0
   199                           
   200  0070                     ?_main:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0070                     pwm_init@PR2_VAL:	
   204                           ; 1 bytes @ 0x0
   205                           
   206  0070                     pwm_duty_cycle@DUTY_CYCLE_VAL:	
   207                           ; 1 bytes @ 0x0
   208                           
   209                           
   210                           ; 2 bytes @ 0x0
   211  0070                     	ds	2
   212  0072                     ??_pwm_duty_cycle:
   213                           
   214                           ; 1 bytes @ 0x2
   215  0072                     	ds	2
   216  0074                     ??_main:
   217                           
   218                           ; 1 bytes @ 0x4
   219  0074                     	ds	2
   220                           
   221                           	psect	maintext
   222  07B1                     __pmaintext:	
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 17 in file "main.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0, pclath, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : B00/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         0       0       0       0       0
   244 ;;      Temps:          2       0       0       0       0
   245 ;;      Totals:         2       0       0       0       0
   246 ;;Total ram usage:        2 bytes
   247 ;; Hardware stack levels required when called:    1
   248 ;; This function calls:
   249 ;;		_pwm_duty_cycle
   250 ;;		_pwm_init
   251 ;; This function is called by:
   252 ;;		Startup code after reset
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256                           
   257                           ;psect for function _main
   258  07B1                     _main:
   259  07B1                     l664:	
   260                           ;incstack = 0
   261                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   262                           
   263                           
   264                           ;main.c: 19:     pwm_init(249);
   265  07B1  30F9               	movlw	249
   266  07B2  120A  118A  2781  120A  118A  	fcall	_pwm_init
   267  07B7                     l666:
   268                           
   269                           ;main.c: 23:         value = 0;
   270  07B7  01F6               	clrf	_value
   271  07B8  01F7               	clrf	_value+1
   272                           
   273                           ;main.c: 25:         while(value < 1000) {
   274  07B9  2FD1               	goto	l674
   275  07BA                     l668:
   276                           
   277                           ;main.c: 26:             pwm_duty_cycle(value);
   278  07BA  0877               	movf	_value+1,w
   279  07BB  00F1               	movwf	pwm_duty_cycle@DUTY_CYCLE_VAL+1
   280  07BC  0876               	movf	_value,w
   281  07BD  00F0               	movwf	pwm_duty_cycle@DUTY_CYCLE_VAL
   282  07BE  120A  118A  278F  120A  118A  	fcall	_pwm_duty_cycle
   283  07C3                     l670:
   284                           
   285                           ;main.c: 27:             value++;
   286  07C3  3001               	movlw	1
   287  07C4  07F6               	addwf	_value,f
   288  07C5  1803               	skipnc
   289  07C6  0AF7               	incf	_value+1,f
   290  07C7  3000               	movlw	0
   291  07C8  07F7               	addwf	_value+1,f
   292  07C9                     l672:
   293                           
   294                           ;main.c: 28:             _delay((unsigned long)((1)*(20000000/4000.0)));
   295  07C9  3007               	movlw	7
   296  07CA  00F5               	movwf	??_main+1
   297  07CB  307D               	movlw	125
   298  07CC  00F4               	movwf	??_main
   299  07CD                     u57:
   300  07CD  0BF4               	decfsz	??_main,f
   301  07CE  2FCD               	goto	u57
   302  07CF  0BF5               	decfsz	??_main+1,f
   303  07D0  2FCD               	goto	u57
   304  07D1                     l674:
   305                           
   306                           ;main.c: 25:         while(value < 1000) {
   307  07D1  3003               	movlw	3
   308  07D2  0277               	subwf	_value+1,w
   309  07D3  30E8               	movlw	232
   310  07D4  1903               	skipnz
   311  07D5  0276               	subwf	_value,w
   312  07D6  1C03               	skipc
   313  07D7  2FD9               	goto	u31
   314  07D8  2FDA               	goto	u30
   315  07D9                     u31:
   316  07D9  2FBA               	goto	l668
   317  07DA                     u30:
   318  07DA  2FF2               	goto	l682
   319  07DB                     l676:
   320                           
   321                           ;main.c: 32:             pwm_duty_cycle(value);
   322  07DB  0877               	movf	_value+1,w
   323  07DC  00F1               	movwf	pwm_duty_cycle@DUTY_CYCLE_VAL+1
   324  07DD  0876               	movf	_value,w
   325  07DE  00F0               	movwf	pwm_duty_cycle@DUTY_CYCLE_VAL
   326  07DF  120A  118A  278F  120A  118A  	fcall	_pwm_duty_cycle
   327  07E4                     l678:
   328                           
   329                           ;main.c: 33:             value--;
   330  07E4  3001               	movlw	1
   331  07E5  02F6               	subwf	_value,f
   332  07E6  3000               	movlw	0
   333  07E7  1C03               	skipc
   334  07E8  03F7               	decf	_value+1,f
   335  07E9  02F7               	subwf	_value+1,f
   336  07EA                     l680:
   337                           
   338                           ;main.c: 34:             _delay((unsigned long)((1)*(20000000/4000.0)));
   339  07EA  3007               	movlw	7
   340  07EB  00F5               	movwf	??_main+1
   341  07EC  307D               	movlw	125
   342  07ED  00F4               	movwf	??_main
   343  07EE                     u67:
   344  07EE  0BF4               	decfsz	??_main,f
   345  07EF  2FEE               	goto	u67
   346  07F0  0BF5               	decfsz	??_main+1,f
   347  07F1  2FEE               	goto	u67
   348  07F2                     l682:
   349                           
   350                           ;main.c: 31:         while(value > 0) {
   351  07F2  0876               	movf	_value,w
   352  07F3  0477               	iorwf	_value+1,w
   353  07F4  1D03               	btfss	3,2
   354  07F5  2FF7               	goto	u41
   355  07F6  2FF8               	goto	u40
   356  07F7                     u41:
   357  07F7  2FDB               	goto	l676
   358  07F8                     u40:
   359  07F8  2FB7               	goto	l666
   360  07F9  120A  118A  2800   	ljmp	start
   361  07FC                     __end_of_main:
   362                           
   363                           	psect	text1
   364  0781                     __ptext1:	
   365 ;; *************** function _pwm_init *****************
   366 ;; Defined at:
   367 ;;		line 61 in file "../libraries-headers\pwm.h"
   368 ;; Parameters:    Size  Location     Type
   369 ;;  PR2_VAL         1    wreg     unsigned char 
   370 ;; Auto vars:     Size  Location     Type
   371 ;;  PR2_VAL         1    0[COMMON] unsigned char 
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   381 ;;      Params:         0       0       0       0       0
   382 ;;      Locals:         1       0       0       0       0
   383 ;;      Temps:          0       0       0       0       0
   384 ;;      Totals:         1       0       0       0       0
   385 ;;Total ram usage:        1 bytes
   386 ;; Hardware stack levels used:    1
   387 ;; This function calls:
   388 ;;		Nothing
   389 ;; This function is called by:
   390 ;;		_main
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           
   395                           ;psect for function _pwm_init
   396  0781                     _pwm_init:
   397                           
   398                           ;incstack = 0
   399                           ; Regs used in _pwm_init: [wreg]
   400                           ;pwm_init@PR2_VAL stored from wreg
   401  0781  00F0               	movwf	pwm_init@PR2_VAL
   402  0782                     l628:
   403                           
   404                           ;../libraries-headers\pwm.h: 63:     PR2 = PR2_VAL;
   405  0782  0870               	movf	pwm_init@PR2_VAL,w
   406  0783  1683               	bsf	3,5	;RP0=1, select bank1
   407  0784  1303               	bcf	3,6	;RP1=0, select bank1
   408  0785  0092               	movwf	18	;volatile
   409  0786                     l630:
   410                           
   411                           ;../libraries-headers\pwm.h: 64:     TRISC2 = 0;
   412  0786  1107               	bcf	7,2	;volatile
   413  0787                     l632:
   414                           
   415                           ;../libraries-headers\pwm.h: 65:     T2CONbits.T2CKPS0 = 0;
   416  0787  1283               	bcf	3,5	;RP0=0, select bank0
   417  0788  1303               	bcf	3,6	;RP1=0, select bank0
   418  0789  1012               	bcf	18,0	;volatile
   419  078A                     l634:
   420                           
   421                           ;../libraries-headers\pwm.h: 66:     T2CONbits.T2CKPS1 = 0;
   422  078A  1092               	bcf	18,1	;volatile
   423  078B                     l636:
   424                           
   425                           ;../libraries-headers\pwm.h: 67:     CCP1CONbits.CCP1M3 = 1;
   426  078B  1597               	bsf	23,3	;volatile
   427  078C                     l638:
   428                           
   429                           ;../libraries-headers\pwm.h: 68:     CCP1CONbits.CCP1M2 = 1;
   430  078C  1517               	bsf	23,2	;volatile
   431  078D                     l640:
   432                           
   433                           ;../libraries-headers\pwm.h: 69:     T2CONbits.TMR2ON = 1;
   434  078D  1512               	bsf	18,2	;volatile
   435  078E                     l18:
   436  078E  0008               	return
   437  078F                     __end_of_pwm_init:
   438                           
   439                           	psect	text2
   440  078F                     __ptext2:	
   441 ;; *************** function _pwm_duty_cycle *****************
   442 ;; Defined at:
   443 ;;		line 53 in file "../libraries-headers\pwm.h"
   444 ;; Parameters:    Size  Location     Type
   445 ;;  DUTY_CYCLE_V    2    0[COMMON] unsigned int 
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, status,2, status,0
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   457 ;;      Params:         2       0       0       0       0
   458 ;;      Locals:         0       0       0       0       0
   459 ;;      Temps:          2       0       0       0       0
   460 ;;      Totals:         4       0       0       0       0
   461 ;;Total ram usage:        4 bytes
   462 ;; Hardware stack levels used:    1
   463 ;; This function calls:
   464 ;;		Nothing
   465 ;; This function is called by:
   466 ;;		_main
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           
   471                           ;psect for function _pwm_duty_cycle
   472  078F                     _pwm_duty_cycle:
   473  078F                     l662:	
   474                           ;incstack = 0
   475                           ; Regs used in _pwm_duty_cycle: [wreg+status,2+status,0]
   476                           
   477                           
   478                           ;../libraries-headers\pwm.h: 55:     CCP1CONbits.CCP1Y = (DUTY_CYCLE_VAL) & 1;
   479  078F  0870               	movf	pwm_duty_cycle@DUTY_CYCLE_VAL,w
   480  0790  3901               	andlw	1
   481  0791  00F2               	movwf	??_pwm_duty_cycle
   482  0792  0EF2               	swapf	??_pwm_duty_cycle,f
   483  0793  1283               	bcf	3,5	;RP0=0, select bank0
   484  0794  1303               	bcf	3,6	;RP1=0, select bank0
   485  0795  0817               	movf	23,w	;volatile
   486  0796  0672               	xorwf	??_pwm_duty_cycle,w
   487  0797  39EF               	andlw	-17
   488  0798  0672               	xorwf	??_pwm_duty_cycle,w
   489  0799  0097               	movwf	23	;volatile
   490                           
   491                           ;../libraries-headers\pwm.h: 56:     CCP1CONbits.CCP1X = (DUTY_CYCLE_VAL) & 2;
   492  079A  0870               	movf	pwm_duty_cycle@DUTY_CYCLE_VAL,w
   493  079B  3902               	andlw	2
   494  079C  00F2               	movwf	??_pwm_duty_cycle
   495  079D  0EF2               	swapf	??_pwm_duty_cycle,f
   496  079E  0DF2               	rlf	??_pwm_duty_cycle,f
   497  079F  0817               	movf	23,w	;volatile
   498  07A0  0672               	xorwf	??_pwm_duty_cycle,w
   499  07A1  39DF               	andlw	-33
   500  07A2  0672               	xorwf	??_pwm_duty_cycle,w
   501  07A3  0097               	movwf	23	;volatile
   502                           
   503                           ;../libraries-headers\pwm.h: 57:     CCPR1L = (DUTY_CYCLE_VAL) >> 2;
   504  07A4  0871               	movf	pwm_duty_cycle@DUTY_CYCLE_VAL+1,w
   505  07A5  00F3               	movwf	??_pwm_duty_cycle+1
   506  07A6  0870               	movf	pwm_duty_cycle@DUTY_CYCLE_VAL,w
   507  07A7  00F2               	movwf	??_pwm_duty_cycle
   508  07A8  1003               	clrc
   509  07A9  0CF3               	rrf	??_pwm_duty_cycle+1,f
   510  07AA  0CF2               	rrf	??_pwm_duty_cycle,f
   511  07AB  1003               	clrc
   512  07AC  0CF3               	rrf	??_pwm_duty_cycle+1,f
   513  07AD  0CF2               	rrf	??_pwm_duty_cycle,f
   514  07AE  0872               	movf	??_pwm_duty_cycle,w
   515  07AF  0095               	movwf	21	;volatile
   516  07B0                     l15:
   517  07B0  0008               	return
   518  07B1                     __end_of_pwm_duty_cycle:
   519  007E                     btemp	set	126	;btemp
   520  007E                     wtemp0	set	126
   521                           
   522                           	psect	config
   523                           
   524                           ;Config register CONFIG @ 0x2007
   525                           ;	Oscillator Selection bits
   526                           ;	FOSC = HS, HS oscillator
   527                           ;	Watchdog Timer Enable bit
   528                           ;	WDTE = OFF, WDT disabled
   529                           ;	Power-up Timer Enable bit
   530                           ;	PWRTE = OFF, PWRT disabled
   531                           ;	Brown-out Reset Enable bit
   532                           ;	BOREN = OFF, BOR disabled
   533                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   534                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   535                           ;	Data EEPROM Memory Code Protection bit
   536                           ;	CPD = OFF, Data EEPROM code protection off
   537                           ;	Flash Program Memory Write Enable bits
   538                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   539                           ;	In-Circuit Debugger Mode bit
   540                           ;	DEBUG = 0x1, unprogrammed default
   541                           ;	Flash Program Memory Code Protection bit
   542                           ;	CP = OFF, Code protection off
   543  2007                     	org	8199
   544  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_pwm_duty_cycle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     233
                                              4 COMMON     2     2      0
                     _pwm_duty_cycle
                           _pwm_init
 ---------------------------------------------------------------------------------
 (1) _pwm_init                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pwm_duty_cycle                                       4     2      2     218
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _pwm_duty_cycle
   _pwm_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Dec 27 18:45:30 2020

                          l15 07B0                            l18 078E                            u30 07DA  
                          u31 07D9                            u40 07F8                            u41 07F7  
                          u57 07CD                            u67 07EE                           l630 0786  
                         l640 078D                           l632 0787                           l634 078A  
                         l636 078B                           l628 0782                           l662 078F  
                         l638 078C                           l670 07C3                           l680 07EA  
                         l672 07C9                           l664 07B1                           l682 07F2  
                         l674 07D1                           l666 07B7                           l676 07DB  
                         l668 07BA                           l678 07E4                           _PR2 0092  
                        _main 07B1                          btemp 007E                          start 0000  
              _pwm_duty_cycle 078F                         ?_main 0070                         _value 0076  
                       status 0003                         wtemp0 007E        __end_of_pwm_duty_cycle 07B1  
             __initialization 07FC                  __end_of_main 07FC                        ??_main 0074  
                      _CCPR1L 0015                        _TRISC2 043A               pwm_init@PR2_VAL 0070  
             ?_pwm_duty_cycle 0070              __end_of_pwm_init 078F       __end_of__initialization 07FC  
              __pcstackCOMMON 0070                    __pnvCOMMON 0076                    __pmaintext 07B1  
                   ?_pwm_init 0070                       __ptext1 0781                       __ptext2 078F  
                   _T2CONbits 0012          end_of_initialization 07FC              ??_pwm_duty_cycle 0072  
                  ??_pwm_init 0070                   _CCP1CONbits 0017           start_initialization 07FC  
pwm_duty_cycle@DUTY_CYCLE_VAL 0070                     ___latbits 0002             __size_of_pwm_init 000E  
               __size_of_main 004B                      _pwm_init 0781       __size_of_pwm_duty_cycle 0022  
