

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 26 22:55:25 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.31
    20                           ; Generated 13/10/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  0042                     _RD2	set	66
   175  0047                     _RD7	set	71
   176  0046                     _RD6	set	70
   177  0045                     _RD5	set	69
   178  0044                     _RD4	set	68
   179  0043                     _RD3	set	67
   180  0088                     _TRISD	set	136
   181                           
   182                           	psect	strings
   183  0003                     __pstrings:
   184  0003                     stringtab:
   185  0003                     __stringtab:
   186  0003                     stringcode:	
   187                           ;	String table - string pointers are 1 byte each
   188                           
   189  0003                     stringdir:
   190  0003  3000               	movlw	high stringdir
   191  0004  008A               	movwf	10
   192  0005  0804               	movf	4,w
   193  0006  0A84               	incf	4,f
   194  0007  0782               	addwf	2,f
   195  0008                     __stringbase:
   196  0008  3400               	retlw	0
   197  0009                     __end_of__stringtab:
   198  0009                     STR_2:
   199  0009  344D               	retlw	77	;'M'
   200  000A  3441               	retlw	65	;'A'
   201  000B  3445               	retlw	69	;'E'
   202  000C  3420               	retlw	32	;' '
   203  000D  343C               	retlw	60	;'<'
   204  000E  3433               	retlw	51	;'3'
   205  000F  3433               	retlw	51	;'3'
   206  0010  3433               	retlw	51	;'3'
   207  0011  3400               	retlw	0
   208  0012                     STR_1:
   209  0012  3450               	retlw	80	;'P'
   210  0013  3441               	retlw	65	;'A'
   211  0014  3454               	retlw	84	;'T'
   212  0015  3452               	retlw	82	;'R'
   213  0016  3449               	retlw	73	;'I'
   214  0017  3443               	retlw	67	;'C'
   215  0018  3449               	retlw	73	;'I'
   216  0019  3441               	retlw	65	;'A'
   217  001A  3400               	retlw	0
   218                           
   219                           	psect	cinit
   220  07FC                     start_initialization:	
   221                           ; #config settings
   222                           
   223  07FC                     __initialization:
   224  07FC                     end_of_initialization:	
   225                           ;End of C runtime variable initialization code
   226                           
   227  07FC                     __end_of__initialization:
   228  07FC  0183               	clrf	3
   229  07FD  120A  118A  2EF9   	ljmp	_main	;jump to C main() function
   230                           
   231                           	psect	cstackCOMMON
   232  0070                     __pcstackCOMMON:
   233  0070                     ?_lcd_clock:
   234  0070                     ??_lcd_clock:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ?_lcd_data:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ??_lcd_data:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ?_lcd_cmd:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ?_lcd_clear:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ?_lcd_init:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?_lcd_write:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ?_lcd_write_string:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?_main:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     lcd_data@data:	
   262                           ; 1 bytes @ 0x0
   263                           
   264                           
   265                           ; 1 bytes @ 0x0
   266  0070                     	ds	2
   267  0072                     ??_lcd_cmd:
   268  0072                     ??_lcd_write:	
   269                           ; 1 bytes @ 0x2
   270                           
   271  0072                     lcd_cmd@cmd:	
   272                           ; 1 bytes @ 0x2
   273                           
   274                           
   275                           ; 1 bytes @ 0x2
   276  0072                     	ds	1
   277  0073                     ??_lcd_clear:
   278  0073                     ?_lcd_goto_xy:	
   279                           ; 1 bytes @ 0x3
   280                           
   281  0073                     ??_lcd_init:	
   282                           ; 1 bytes @ 0x3
   283                           
   284  0073                     lcd_goto_xy@c:	
   285                           ; 1 bytes @ 0x3
   286                           
   287  0073                     lcd_write@low_nibble:	
   288                           ; 1 bytes @ 0x3
   289                           
   290                           
   291                           ; 1 bytes @ 0x3
   292  0073                     	ds	1
   293  0074                     ??_lcd_goto_xy:
   294  0074                     lcd_write@high_nibble:	
   295                           ; 1 bytes @ 0x4
   296                           
   297                           
   298                           ; 1 bytes @ 0x4
   299  0074                     	ds	1
   300  0075                     lcd_write@byte:
   301                           
   302                           ; 1 bytes @ 0x5
   303  0075                     	ds	1
   304  0076                     ??_lcd_write_string:
   305  0076                     lcd_goto_xy@r:	
   306                           ; 1 bytes @ 0x6
   307                           
   308  0076                     lcd_write_string@i:	
   309                           ; 1 bytes @ 0x6
   310                           
   311                           
   312                           ; 2 bytes @ 0x6
   313  0076                     	ds	1
   314  0077                     lcd_goto_xy@low4:
   315                           
   316                           ; 1 bytes @ 0x7
   317  0077                     	ds	1
   318  0078                     lcd_goto_xy@high4:
   319  0078                     lcd_write_string@str:	
   320                           ; 1 bytes @ 0x8
   321                           
   322                           
   323                           ; 1 bytes @ 0x8
   324  0078                     	ds	1
   325  0079                     lcd_goto_xy@temp:
   326                           
   327                           ; 1 bytes @ 0x9
   328  0079                     	ds	1
   329  007A                     ??_main:
   330                           
   331                           	psect	maintext
   332  06F9                     __pmaintext:	
   333                           ; 1 bytes @ 0xA
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 13 in file "main.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;		None
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : B00/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   353 ;;      Params:         0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0
   355 ;;      Temps:          0       0       0       0       0
   356 ;;      Totals:         0       0       0       0       0
   357 ;;Total ram usage:        0 bytes
   358 ;; Hardware stack levels required when called:    3
   359 ;; This function calls:
   360 ;;		_lcd_clear
   361 ;;		_lcd_goto_xy
   362 ;;		_lcd_init
   363 ;;		_lcd_write_string
   364 ;; This function is called by:
   365 ;;		Startup code after reset
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           
   370                           ;psect for function _main
   371  06F9                     _main:
   372  06F9                     l789:	
   373                           ;incstack = 0
   374                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   375                           
   376                           
   377                           ;main.c: 15:   lcd_init();
   378  06F9  120A  118A  27A1  120A  118A  	fcall	_lcd_init
   379                           
   380                           ;main.c: 16:   lcd_clear();
   381  06FE  120A  118A  2683  120A  118A  	fcall	_lcd_clear
   382  0703                     l64:	
   383                           ;main.c: 18:   while(1)
   384                           
   385                           
   386                           ;main.c: 19:   {;main.c: 20:       lcd_goto_xy(1,1);
   387  0703  01F3               	clrf	lcd_goto_xy@c
   388  0704  0AF3               	incf	lcd_goto_xy@c,f
   389  0705  3001               	movlw	1
   390  0706  120A  118A  2750  120A  118A  	fcall	_lcd_goto_xy
   391  070B                     l791:
   392                           
   393                           ;main.c: 21:       lcd_write_string("PATRICIA");
   394  070B  300A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   395  070C  120A  118A  26D4  120A  118A  	fcall	_lcd_write_string
   396  0711                     l793:
   397                           
   398                           ;main.c: 22:       lcd_goto_xy(2,1);
   399  0711  01F3               	clrf	lcd_goto_xy@c
   400  0712  0AF3               	incf	lcd_goto_xy@c,f
   401  0713  3002               	movlw	2
   402  0714  120A  118A  2750  120A  118A  	fcall	_lcd_goto_xy
   403                           
   404                           ;main.c: 23:       lcd_write_string("MAE <333");
   405  0719  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   406  071A  120A  118A  26D4  120A  118A  	fcall	_lcd_write_string
   407  071F  2F03               	goto	l64
   408  0720  120A  118A  2800   	ljmp	start
   409  0723                     __end_of_main:
   410                           
   411                           	psect	text1
   412  06D4                     __ptext1:	
   413 ;; *************** function _lcd_write_string *****************
   414 ;; Defined at:
   415 ;;		line 124 in file "./lcd-4bit.h"
   416 ;; Parameters:    Size  Location     Type
   417 ;;  str             1    wreg     PTR unsigned char 
   418 ;;		 -> STR_2(9), STR_1(9), 
   419 ;; Auto vars:     Size  Location     Type
   420 ;;  str             1    8[COMMON] PTR unsigned char 
   421 ;;		 -> STR_2(9), STR_1(9), 
   422 ;;  i               2    6[COMMON] int 
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   432 ;;      Params:         0       0       0       0       0
   433 ;;      Locals:         3       0       0       0       0
   434 ;;      Temps:          0       0       0       0       0
   435 ;;      Totals:         3       0       0       0       0
   436 ;;Total ram usage:        3 bytes
   437 ;; Hardware stack levels used:    1
   438 ;; Hardware stack levels required when called:    2
   439 ;; This function calls:
   440 ;;		_lcd_write
   441 ;; This function is called by:
   442 ;;		_main
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           
   447                           ;psect for function _lcd_write_string
   448  06D4                     _lcd_write_string:
   449                           
   450                           ;incstack = 0
   451                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   452                           ;lcd_write_string@str stored from wreg
   453  06D4  00F8               	movwf	lcd_write_string@str
   454  06D5                     l781:
   455                           
   456                           ;./lcd-4bit.h: 126:     for (int i = 0; str[i] != '\0'; i++) {
   457  06D5  01F6               	clrf	lcd_write_string@i
   458  06D6  01F7               	clrf	lcd_write_string@i+1
   459  06D7  2EEB               	goto	l787
   460  06D8                     l783:
   461                           
   462                           ;./lcd-4bit.h: 127:         lcd_write(str[i]);
   463  06D8  0876               	movf	lcd_write_string@i,w
   464  06D9  0778               	addwf	lcd_write_string@str,w
   465  06DA  0084               	movwf	4
   466  06DB  120A  118A  2003  120A  118A  	fcall	stringdir
   467  06E0  120A  118A  2723  120A  118A  	fcall	_lcd_write
   468  06E5                     l785:
   469                           
   470                           ;./lcd-4bit.h: 128:     }
   471  06E5  3001               	movlw	1
   472  06E6  07F6               	addwf	lcd_write_string@i,f
   473  06E7  1803               	skipnc
   474  06E8  0AF7               	incf	lcd_write_string@i+1,f
   475  06E9  3000               	movlw	0
   476  06EA  07F7               	addwf	lcd_write_string@i+1,f
   477  06EB                     l787:
   478  06EB  0876               	movf	lcd_write_string@i,w
   479  06EC  0778               	addwf	lcd_write_string@str,w
   480  06ED  0084               	movwf	4
   481  06EE  120A  118A  2003  120A  118A  	fcall	stringdir
   482  06F3  3A00               	xorlw	0
   483  06F4  1D03               	skipz
   484  06F5  2EF7               	goto	u151
   485  06F6  2EF8               	goto	u150
   486  06F7                     u151:
   487  06F7  2ED8               	goto	l783
   488  06F8                     u150:
   489  06F8                     l53:
   490  06F8  0008               	return
   491  06F9                     __end_of_lcd_write_string:
   492                           
   493                           	psect	text2
   494  0723                     __ptext2:	
   495 ;; *************** function _lcd_write *****************
   496 ;; Defined at:
   497 ;;		line 110 in file "./lcd-4bit.h"
   498 ;; Parameters:    Size  Location     Type
   499 ;;  byte            1    wreg     unsigned char 
   500 ;; Auto vars:     Size  Location     Type
   501 ;;  byte            1    5[COMMON] unsigned char 
   502 ;;  high_nibble     1    4[COMMON] unsigned char 
   503 ;;  low_nibble      1    3[COMMON] unsigned char 
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, status,2, status,0, pclath, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   513 ;;      Params:         0       0       0       0       0
   514 ;;      Locals:         3       0       0       0       0
   515 ;;      Temps:          1       0       0       0       0
   516 ;;      Totals:         4       0       0       0       0
   517 ;;Total ram usage:        4 bytes
   518 ;; Hardware stack levels used:    1
   519 ;; Hardware stack levels required when called:    1
   520 ;; This function calls:
   521 ;;		_lcd_clock
   522 ;;		_lcd_data
   523 ;; This function is called by:
   524 ;;		_lcd_write_string
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           
   529                           ;psect for function _lcd_write
   530  0723                     _lcd_write:
   531                           
   532                           ;incstack = 0
   533                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
   534                           ;lcd_write@byte stored from wreg
   535  0723  00F5               	movwf	lcd_write@byte
   536  0724                     l679:
   537                           
   538                           ;./lcd-4bit.h: 112:     char low_nibble, high_nibble;;./lcd-4bit.h: 114:     low_nibble 
      +                          = byte & 0x0F;
   539  0724  0875               	movf	lcd_write@byte,w
   540  0725  390F               	andlw	15
   541  0726  00F2               	movwf	??_lcd_write
   542  0727  0872               	movf	??_lcd_write,w
   543  0728  00F3               	movwf	lcd_write@low_nibble
   544                           
   545                           ;./lcd-4bit.h: 115:     high_nibble = byte & 0xF0;
   546  0729  0875               	movf	lcd_write@byte,w
   547  072A  39F0               	andlw	240
   548  072B  00F2               	movwf	??_lcd_write
   549  072C  0872               	movf	??_lcd_write,w
   550  072D  00F4               	movwf	lcd_write@high_nibble
   551  072E                     l681:
   552                           
   553                           ;./lcd-4bit.h: 117:     RD2 = 1;
   554  072E  1283               	bcf	3,5	;RP0=0, select bank0
   555  072F  1303               	bcf	3,6	;RP1=0, select bank0
   556  0730  1508               	bsf	8,2	;volatile
   557  0731                     l683:
   558                           
   559                           ;./lcd-4bit.h: 118:     lcd_data(high_nibble >> 4);
   560  0731  0874               	movf	lcd_write@high_nibble,w
   561  0732  00F2               	movwf	??_lcd_write
   562  0733  3004               	movlw	4
   563  0734                     u55:
   564  0734  1003               	clrc
   565  0735  0CF2               	rrf	??_lcd_write,f
   566  0736  3EFF               	addlw	-1
   567  0737  1D03               	skipz
   568  0738  2F34               	goto	u55
   569  0739  0872               	movf	??_lcd_write,w
   570  073A  120A  118A  26B2  120A  118A  	fcall	_lcd_data
   571  073F                     l685:
   572                           
   573                           ;./lcd-4bit.h: 119:     lcd_clock();
   574  073F  120A  118A  2699  120A  118A  	fcall	_lcd_clock
   575  0744                     l687:
   576                           
   577                           ;./lcd-4bit.h: 120:     lcd_data(low_nibble);
   578  0744  0873               	movf	lcd_write@low_nibble,w
   579  0745  120A  118A  26B2  120A  118A  	fcall	_lcd_data
   580  074A                     l689:
   581                           
   582                           ;./lcd-4bit.h: 121:     lcd_clock();
   583  074A  120A  118A  2699  120A  118A  	fcall	_lcd_clock
   584  074F                     l47:
   585  074F  0008               	return
   586  0750                     __end_of_lcd_write:
   587                           
   588                           	psect	text3
   589  07A1                     __ptext3:	
   590 ;; *************** function _lcd_init *****************
   591 ;; Defined at:
   592 ;;		line 93 in file "./lcd-4bit.h"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, status,2, status,0, pclath, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   606 ;;      Params:         0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0
   608 ;;      Temps:          2       0       0       0       0
   609 ;;      Totals:         2       0       0       0       0
   610 ;;Total ram usage:        2 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; Hardware stack levels required when called:    2
   613 ;; This function calls:
   614 ;;		_lcd_cmd
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           
   621                           ;psect for function _lcd_init
   622  07A1                     _lcd_init:
   623  07A1                     l715:	
   624                           ;incstack = 0
   625                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   626                           
   627                           
   628                           ;./lcd-4bit.h: 94:     _delay((unsigned long)((20)*(20000000/4000.0)));
   629  07A1  3082               	movlw	130
   630  07A2  00F4               	movwf	??_lcd_init+1
   631  07A3  30DD               	movlw	221
   632  07A4  00F3               	movwf	??_lcd_init
   633  07A5                     u167:
   634  07A5  0BF3               	decfsz	??_lcd_init,f
   635  07A6  2FA5               	goto	u167
   636  07A7  0BF4               	decfsz	??_lcd_init+1,f
   637  07A8  2FA5               	goto	u167
   638  07A9  2FAA               	nop2
   639  07AA                     l717:
   640                           
   641                           ;./lcd-4bit.h: 95:     TRISD = TRISD & 0x03;
   642  07AA  1683               	bsf	3,5	;RP0=1, select bank1
   643  07AB  1303               	bcf	3,6	;RP1=0, select bank1
   644  07AC  0808               	movf	8,w	;volatile
   645  07AD  3903               	andlw	3
   646  07AE  0088               	movwf	8	;volatile
   647  07AF                     l719:
   648                           
   649                           ;./lcd-4bit.h: 96:     lcd_cmd(0x03);
   650  07AF  3003               	movlw	3
   651  07B0  120A  118A  2673  120A  118A  	fcall	_lcd_cmd
   652  07B5                     l721:
   653                           
   654                           ;./lcd-4bit.h: 97:     _delay((unsigned long)((5)*(20000000/4000.0)));
   655  07B5  3021               	movlw	33
   656  07B6  00F4               	movwf	??_lcd_init+1
   657  07B7  3076               	movlw	118
   658  07B8  00F3               	movwf	??_lcd_init
   659  07B9                     u177:
   660  07B9  0BF3               	decfsz	??_lcd_init,f
   661  07BA  2FB9               	goto	u177
   662  07BB  0BF4               	decfsz	??_lcd_init+1,f
   663  07BC  2FB9               	goto	u177
   664  07BD  0000               	nop
   665  07BE                     l723:
   666                           
   667                           ;./lcd-4bit.h: 98:     lcd_cmd(0x03);
   668  07BE  3003               	movlw	3
   669  07BF  120A  118A  2673  120A  118A  	fcall	_lcd_cmd
   670  07C4                     l725:
   671                           
   672                           ;./lcd-4bit.h: 99:     _delay((unsigned long)((200)*(20000000/4000000.0)));
   673  07C4  30C7               	movlw	199
   674  07C5  00F3               	movwf	??_lcd_init
   675  07C6                     u187:
   676  07C6  2FC7               	nop2
   677  07C7  0BF3               	decfsz	??_lcd_init,f
   678  07C8  2FC6               	goto	u187
   679  07C9  2FCA               	nop2
   680  07CA  2FCB               	nop2
   681  07CB                     l727:
   682                           
   683                           ;./lcd-4bit.h: 100:     lcd_cmd(0x03);
   684  07CB  3003               	movlw	3
   685  07CC  120A  118A  2673  120A  118A  	fcall	_lcd_cmd
   686  07D1                     l729:
   687                           
   688                           ;./lcd-4bit.h: 101:     lcd_cmd(0x02);
   689  07D1  3002               	movlw	2
   690  07D2  120A  118A  2673  120A  118A  	fcall	_lcd_cmd
   691  07D7                     l731:
   692                           
   693                           ;./lcd-4bit.h: 102:     lcd_cmd(0x02);
   694  07D7  3002               	movlw	2
   695  07D8  120A  118A  2673  120A  118A  	fcall	_lcd_cmd
   696  07DD                     l733:
   697                           
   698                           ;./lcd-4bit.h: 103:     lcd_cmd(0x08);
   699  07DD  3008               	movlw	8
   700  07DE  120A  118A  2673  120A  118A  	fcall	_lcd_cmd
   701  07E3                     l735:
   702                           
   703                           ;./lcd-4bit.h: 104:     lcd_cmd(0x00);
   704  07E3  3000               	movlw	0
   705  07E4  120A  118A  2673  120A  118A  	fcall	_lcd_cmd
   706  07E9                     l737:
   707                           
   708                           ;./lcd-4bit.h: 105:     lcd_cmd(0x0C);
   709  07E9  300C               	movlw	12
   710  07EA  120A  118A  2673  120A  118A  	fcall	_lcd_cmd
   711  07EF                     l739:
   712                           
   713                           ;./lcd-4bit.h: 106:     lcd_cmd(0x00);
   714  07EF  3000               	movlw	0
   715  07F0  120A  118A  2673  120A  118A  	fcall	_lcd_cmd
   716  07F5                     l741:
   717                           
   718                           ;./lcd-4bit.h: 107:     lcd_cmd(0x06);
   719  07F5  3006               	movlw	6
   720  07F6  120A  118A  2673  120A  118A  	fcall	_lcd_cmd
   721  07FB                     l44:
   722  07FB  0008               	return
   723  07FC                     __end_of_lcd_init:
   724                           
   725                           	psect	text4
   726  0750                     __ptext4:	
   727 ;; *************** function _lcd_goto_xy *****************
   728 ;; Defined at:
   729 ;;		line 75 in file "./lcd-4bit.h"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  r               1    wreg     unsigned char 
   732 ;;  c               1    3[COMMON] unsigned char 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  r               1    6[COMMON] unsigned char 
   735 ;;  temp            1    9[COMMON] unsigned char 
   736 ;;  high4           1    8[COMMON] unsigned char 
   737 ;;  low4            1    7[COMMON] unsigned char 
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, status,2, status,0, pclath, cstack
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   747 ;;      Params:         1       0       0       0       0
   748 ;;      Locals:         4       0       0       0       0
   749 ;;      Temps:          2       0       0       0       0
   750 ;;      Totals:         7       0       0       0       0
   751 ;;Total ram usage:        7 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; Hardware stack levels required when called:    2
   754 ;; This function calls:
   755 ;;		_lcd_cmd
   756 ;; This function is called by:
   757 ;;		_main
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           
   762                           ;psect for function _lcd_goto_xy
   763  0750                     _lcd_goto_xy:
   764                           
   765                           ;incstack = 0
   766                           ; Regs used in _lcd_goto_xy: [wreg+status,2+status,0+pclath+cstack]
   767                           ;lcd_goto_xy@r stored from wreg
   768  0750  00F6               	movwf	lcd_goto_xy@r
   769  0751                     l761:
   770                           
   771                           ;./lcd-4bit.h: 76:     unsigned char temp, low4, high4;;./lcd-4bit.h: 77:     if (r == 1
      +                          ) {
   772  0751  0376               	decf	lcd_goto_xy@r,w
   773  0752  1D03               	btfss	3,2
   774  0753  2F55               	goto	u111
   775  0754  2F56               	goto	u110
   776  0755                     u111:
   777  0755  2F78               	goto	l771
   778  0756                     u110:
   779  0756                     l763:
   780                           
   781                           ;./lcd-4bit.h: 78:         temp = 0x80 + c - 1;
   782  0756  0873               	movf	lcd_goto_xy@c,w
   783  0757  3E7F               	addlw	127
   784  0758  00F4               	movwf	??_lcd_goto_xy
   785  0759  0874               	movf	??_lcd_goto_xy,w
   786  075A  00F9               	movwf	lcd_goto_xy@temp
   787                           
   788                           ;./lcd-4bit.h: 79:         high4 = temp >> 4;
   789  075B  0879               	movf	lcd_goto_xy@temp,w
   790  075C  00F4               	movwf	??_lcd_goto_xy
   791  075D  3004               	movlw	4
   792  075E                     u125:
   793  075E  1003               	clrc
   794  075F  0CF4               	rrf	??_lcd_goto_xy,f
   795  0760  3EFF               	addlw	-1
   796  0761  1D03               	skipz
   797  0762  2F5E               	goto	u125
   798  0763  0874               	movf	??_lcd_goto_xy,w
   799  0764  00F5               	movwf	??_lcd_goto_xy+1
   800  0765  0875               	movf	??_lcd_goto_xy+1,w
   801  0766  00F8               	movwf	lcd_goto_xy@high4
   802  0767                     l765:
   803                           
   804                           ;./lcd-4bit.h: 80:         low4 = temp & 0x0F;
   805  0767  0879               	movf	lcd_goto_xy@temp,w
   806  0768  390F               	andlw	15
   807  0769  00F4               	movwf	??_lcd_goto_xy
   808  076A  0874               	movf	??_lcd_goto_xy,w
   809  076B  00F7               	movwf	lcd_goto_xy@low4
   810  076C                     l767:
   811                           
   812                           ;./lcd-4bit.h: 81:         lcd_cmd(high4);
   813  076C  0878               	movf	lcd_goto_xy@high4,w
   814  076D  120A  118A  2673  120A  118A  	fcall	_lcd_cmd
   815  0772                     l769:
   816                           
   817                           ;./lcd-4bit.h: 82:         lcd_cmd(low4);
   818  0772  0877               	movf	lcd_goto_xy@low4,w
   819  0773  120A  118A  2673  120A  118A  	fcall	_lcd_cmd
   820  0778                     l771:
   821                           
   822                           ;./lcd-4bit.h: 84:     if (r == 2) {
   823  0778  3002               	movlw	2
   824  0779  0676               	xorwf	lcd_goto_xy@r,w
   825  077A  1D03               	btfss	3,2
   826  077B  2F7D               	goto	u131
   827  077C  2F7E               	goto	u130
   828  077D                     u131:
   829  077D  2FA0               	goto	l41
   830  077E                     u130:
   831  077E                     l773:
   832                           
   833                           ;./lcd-4bit.h: 85:         temp = 0xC0 + c - 1;
   834  077E  0873               	movf	lcd_goto_xy@c,w
   835  077F  3EBF               	addlw	191
   836  0780  00F4               	movwf	??_lcd_goto_xy
   837  0781  0874               	movf	??_lcd_goto_xy,w
   838  0782  00F9               	movwf	lcd_goto_xy@temp
   839                           
   840                           ;./lcd-4bit.h: 86:         high4 = temp >> 4;
   841  0783  0879               	movf	lcd_goto_xy@temp,w
   842  0784  00F4               	movwf	??_lcd_goto_xy
   843  0785  3004               	movlw	4
   844  0786                     u145:
   845  0786  1003               	clrc
   846  0787  0CF4               	rrf	??_lcd_goto_xy,f
   847  0788  3EFF               	addlw	-1
   848  0789  1D03               	skipz
   849  078A  2F86               	goto	u145
   850  078B  0874               	movf	??_lcd_goto_xy,w
   851  078C  00F5               	movwf	??_lcd_goto_xy+1
   852  078D  0875               	movf	??_lcd_goto_xy+1,w
   853  078E  00F8               	movwf	lcd_goto_xy@high4
   854  078F                     l775:
   855                           
   856                           ;./lcd-4bit.h: 87:         low4 = temp & 0x0F;
   857  078F  0879               	movf	lcd_goto_xy@temp,w
   858  0790  390F               	andlw	15
   859  0791  00F4               	movwf	??_lcd_goto_xy
   860  0792  0874               	movf	??_lcd_goto_xy,w
   861  0793  00F7               	movwf	lcd_goto_xy@low4
   862  0794                     l777:
   863                           
   864                           ;./lcd-4bit.h: 88:         lcd_cmd(high4);
   865  0794  0878               	movf	lcd_goto_xy@high4,w
   866  0795  120A  118A  2673  120A  118A  	fcall	_lcd_cmd
   867  079A                     l779:
   868                           
   869                           ;./lcd-4bit.h: 89:         lcd_cmd(low4);
   870  079A  0877               	movf	lcd_goto_xy@low4,w
   871  079B  120A  118A  2673  120A  118A  	fcall	_lcd_cmd
   872  07A0                     l41:
   873  07A0  0008               	return
   874  07A1                     __end_of_lcd_goto_xy:
   875                           
   876                           	psect	text5
   877  0683                     __ptext5:	
   878 ;; *************** function _lcd_clear *****************
   879 ;; Defined at:
   880 ;;		line 69 in file "./lcd-4bit.h"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg, status,2, status,0, pclath, cstack
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   894 ;;      Params:         0       0       0       0       0
   895 ;;      Locals:         0       0       0       0       0
   896 ;;      Temps:          2       0       0       0       0
   897 ;;      Totals:         2       0       0       0       0
   898 ;;Total ram usage:        2 bytes
   899 ;; Hardware stack levels used:    1
   900 ;; Hardware stack levels required when called:    2
   901 ;; This function calls:
   902 ;;		_lcd_cmd
   903 ;; This function is called by:
   904 ;;		_main
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           
   909                           ;psect for function _lcd_clear
   910  0683                     _lcd_clear:
   911  0683                     l691:	
   912                           ;incstack = 0
   913                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
   914                           
   915                           
   916                           ;./lcd-4bit.h: 70:     lcd_cmd(0);
   917  0683  3000               	movlw	0
   918  0684  120A  118A  2673  120A  118A  	fcall	_lcd_cmd
   919                           
   920                           ;./lcd-4bit.h: 71:     lcd_cmd(1);
   921  0689  3001               	movlw	1
   922  068A  120A  118A  2673  120A  118A  	fcall	_lcd_cmd
   923  068F                     l693:
   924                           
   925                           ;./lcd-4bit.h: 72:     _delay((unsigned long)((2)*(20000000/4000.0)));
   926  068F  300D               	movlw	13
   927  0690  00F4               	movwf	??_lcd_clear+1
   928  0691  30FB               	movlw	251
   929  0692  00F3               	movwf	??_lcd_clear
   930  0693                     u197:
   931  0693  0BF3               	decfsz	??_lcd_clear,f
   932  0694  2E93               	goto	u197
   933  0695  0BF4               	decfsz	??_lcd_clear+1,f
   934  0696  2E93               	goto	u197
   935  0697  2E98               	nop2
   936  0698                     l36:
   937  0698  0008               	return
   938  0699                     __end_of_lcd_clear:
   939                           
   940                           	psect	text6
   941  0673                     __ptext6:	
   942 ;; *************** function _lcd_cmd *****************
   943 ;; Defined at:
   944 ;;		line 61 in file "./lcd-4bit.h"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  cmd             1    wreg     unsigned char 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  cmd             1    2[COMMON] unsigned char 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, status,2, status,0, pclath, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   958 ;;      Params:         0       0       0       0       0
   959 ;;      Locals:         1       0       0       0       0
   960 ;;      Temps:          0       0       0       0       0
   961 ;;      Totals:         1       0       0       0       0
   962 ;;Total ram usage:        1 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:    1
   965 ;; This function calls:
   966 ;;		_lcd_clock
   967 ;;		_lcd_data
   968 ;; This function is called by:
   969 ;;		_lcd_clear
   970 ;;		_lcd_goto_xy
   971 ;;		_lcd_init
   972 ;;		_lcd_shift_left
   973 ;;		_lcd_shift_right
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           
   978                           ;psect for function _lcd_cmd
   979  0673                     _lcd_cmd:
   980                           
   981                           ;incstack = 0
   982                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
   983                           ;lcd_cmd@cmd stored from wreg
   984  0673  00F2               	movwf	lcd_cmd@cmd
   985  0674                     l675:
   986                           
   987                           ;./lcd-4bit.h: 63:     RD2 = 0;
   988  0674  1283               	bcf	3,5	;RP0=0, select bank0
   989  0675  1303               	bcf	3,6	;RP1=0, select bank0
   990  0676  1108               	bcf	8,2	;volatile
   991  0677                     l677:
   992                           
   993                           ;./lcd-4bit.h: 64:     lcd_data(cmd);
   994  0677  0872               	movf	lcd_cmd@cmd,w
   995  0678  120A  118A  26B2  120A  118A  	fcall	_lcd_data
   996                           
   997                           ;./lcd-4bit.h: 65:     lcd_clock();
   998  067D  120A  118A  2699  120A  118A  	fcall	_lcd_clock
   999  0682                     l33:
  1000  0682  0008               	return
  1001  0683                     __end_of_lcd_cmd:
  1002                           
  1003                           	psect	text7
  1004  06B2                     __ptext7:	
  1005 ;; *************** function _lcd_data *****************
  1006 ;; Defined at:
  1007 ;;		line 38 in file "./lcd-4bit.h"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;  data            1    wreg     unsigned char 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  data            1    0[COMMON] unsigned char 
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      void 
  1014 ;; Registers used:
  1015 ;;		wreg
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1021 ;;      Params:         0       0       0       0       0
  1022 ;;      Locals:         1       0       0       0       0
  1023 ;;      Temps:          0       0       0       0       0
  1024 ;;      Totals:         1       0       0       0       0
  1025 ;;Total ram usage:        1 bytes
  1026 ;; Hardware stack levels used:    1
  1027 ;; This function calls:
  1028 ;;		Nothing
  1029 ;; This function is called by:
  1030 ;;		_lcd_cmd
  1031 ;;		_lcd_write
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           
  1036                           ;psect for function _lcd_data
  1037  06B2                     _lcd_data:
  1038                           
  1039                           ;incstack = 0
  1040                           ; Regs used in _lcd_data: [wreg]
  1041                           ;lcd_data@data stored from wreg
  1042  06B2  00F0               	movwf	lcd_data@data
  1043  06B3                     l665:
  1044                           
  1045                           ;./lcd-4bit.h: 40:     if (data & 1)
  1046  06B3  1C70               	btfss	lcd_data@data,0
  1047  06B4  2EB6               	goto	u11
  1048  06B5  2EB7               	goto	u10
  1049  06B6                     u11:
  1050  06B6  2EBB               	goto	l22
  1051  06B7                     u10:
  1052  06B7                     l667:
  1053                           
  1054                           ;./lcd-4bit.h: 41:         RD4 = 1;
  1055  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  1056  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  1057  06B9  1608               	bsf	8,4	;volatile
  1058  06BA  2EBE               	goto	l23
  1059  06BB                     l22:	
  1060                           ;./lcd-4bit.h: 42:     else
  1061                           
  1062                           
  1063                           ;./lcd-4bit.h: 43:         RD4 = 0;
  1064  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  1065  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  1066  06BD  1208               	bcf	8,4	;volatile
  1067  06BE                     l23:
  1068                           
  1069                           ;./lcd-4bit.h: 45:     if (data & 2)
  1070  06BE  1CF0               	btfss	lcd_data@data,1
  1071  06BF  2EC1               	goto	u21
  1072  06C0  2EC2               	goto	u20
  1073  06C1                     u21:
  1074  06C1  2EC4               	goto	l24
  1075  06C2                     u20:
  1076  06C2                     l669:
  1077                           
  1078                           ;./lcd-4bit.h: 46:         RD5 = 1;
  1079  06C2  1688               	bsf	8,5	;volatile
  1080  06C3  2EC5               	goto	l25
  1081  06C4                     l24:	
  1082                           ;./lcd-4bit.h: 47:     else
  1083                           
  1084                           
  1085                           ;./lcd-4bit.h: 48:         RD5 = 0;
  1086  06C4  1288               	bcf	8,5	;volatile
  1087  06C5                     l25:
  1088                           
  1089                           ;./lcd-4bit.h: 50:     if (data & 4)
  1090  06C5  1D70               	btfss	lcd_data@data,2
  1091  06C6  2EC8               	goto	u31
  1092  06C7  2EC9               	goto	u30
  1093  06C8                     u31:
  1094  06C8  2ECB               	goto	l26
  1095  06C9                     u30:
  1096  06C9                     l671:
  1097                           
  1098                           ;./lcd-4bit.h: 51:         RD6 = 1;
  1099  06C9  1708               	bsf	8,6	;volatile
  1100  06CA  2ECC               	goto	l27
  1101  06CB                     l26:	
  1102                           ;./lcd-4bit.h: 52:     else
  1103                           
  1104                           
  1105                           ;./lcd-4bit.h: 53:         RD6 = 0;
  1106  06CB  1308               	bcf	8,6	;volatile
  1107  06CC                     l27:
  1108                           
  1109                           ;./lcd-4bit.h: 55:     if (data & 8)
  1110  06CC  1DF0               	btfss	lcd_data@data,3
  1111  06CD  2ECF               	goto	u41
  1112  06CE  2ED0               	goto	u40
  1113  06CF                     u41:
  1114  06CF  2ED2               	goto	l28
  1115  06D0                     u40:
  1116  06D0                     l673:
  1117                           
  1118                           ;./lcd-4bit.h: 56:         RD7 = 1;
  1119  06D0  1788               	bsf	8,7	;volatile
  1120  06D1  2ED3               	goto	l30
  1121  06D2                     l28:	
  1122                           ;./lcd-4bit.h: 57:     else
  1123                           
  1124                           
  1125                           ;./lcd-4bit.h: 58:         RD7 = 0;
  1126  06D2  1388               	bcf	8,7	;volatile
  1127  06D3                     l30:
  1128  06D3  0008               	return
  1129  06D4                     __end_of_lcd_data:
  1130                           
  1131                           	psect	text8
  1132  0699                     __ptext8:	
  1133 ;; *************** function _lcd_clock *****************
  1134 ;; Defined at:
  1135 ;;		line 30 in file "./lcd-4bit.h"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0
  1151 ;;      Temps:          2       0       0       0       0
  1152 ;;      Totals:         2       0       0       0       0
  1153 ;;Total ram usage:        2 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_lcd_cmd
  1159 ;;		_lcd_write
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           
  1164                           ;psect for function _lcd_clock
  1165  0699                     _lcd_clock:
  1166  0699                     l659:	
  1167                           ;incstack = 0
  1168                           ; Regs used in _lcd_clock: [wreg]
  1169                           
  1170                           
  1171                           ;./lcd-4bit.h: 32:     RD3 = 1;
  1172  0699  1283               	bcf	3,5	;RP0=0, select bank0
  1173  069A  1303               	bcf	3,6	;RP1=0, select bank0
  1174  069B  1588               	bsf	8,3	;volatile
  1175  069C                     l661:
  1176                           
  1177                           ;./lcd-4bit.h: 33:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1178  069C  3004               	movlw	4
  1179  069D  00F1               	movwf	??_lcd_clock+1
  1180  069E  303D               	movlw	61
  1181  069F  00F0               	movwf	??_lcd_clock
  1182  06A0                     u207:
  1183  06A0  0BF0               	decfsz	??_lcd_clock,f
  1184  06A1  2EA0               	goto	u207
  1185  06A2  0BF1               	decfsz	??_lcd_clock+1,f
  1186  06A3  2EA0               	goto	u207
  1187  06A4  2EA5               	nop2
  1188  06A5                     l663:
  1189                           
  1190                           ;./lcd-4bit.h: 34:     RD3 = 0;
  1191  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  1192  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  1193  06A7  1188               	bcf	8,3	;volatile
  1194                           
  1195                           ;./lcd-4bit.h: 35:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1196  06A8  3004               	movlw	4
  1197  06A9  00F1               	movwf	??_lcd_clock+1
  1198  06AA  303D               	movlw	61
  1199  06AB  00F0               	movwf	??_lcd_clock
  1200  06AC                     u217:
  1201  06AC  0BF0               	decfsz	??_lcd_clock,f
  1202  06AD  2EAC               	goto	u217
  1203  06AE  0BF1               	decfsz	??_lcd_clock+1,f
  1204  06AF  2EAC               	goto	u217
  1205  06B0  2EB1               	nop2
  1206  06B1                     l19:
  1207  06B1  0008               	return
  1208  06B2                     __end_of_lcd_clock:
  1209  007E                     btemp	set	126	;btemp
  1210  007E                     wtemp0	set	126
  1211                           
  1212                           	psect	config
  1213                           
  1214                           ;Config register CONFIG @ 0x2007
  1215                           ;	Oscillator Selection bits
  1216                           ;	FOSC = HS, HS oscillator
  1217                           ;	Watchdog Timer Enable bit
  1218                           ;	WDTE = OFF, WDT disabled
  1219                           ;	Power-up Timer Enable bit
  1220                           ;	PWRTE = OFF, PWRT disabled
  1221                           ;	Brown-out Reset Enable bit
  1222                           ;	BOREN = OFF, BOR disabled
  1223                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1224                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1225                           ;	Data EEPROM Memory Code Protection bit
  1226                           ;	CPD = OFF, Data EEPROM code protection off
  1227                           ;	Flash Program Memory Write Enable bits
  1228                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1229                           ;	In-Circuit Debugger Mode bit
  1230                           ;	DEBUG = 0x1, unprogrammed default
  1231                           ;	Flash Program Memory Code Protection bit
  1232                           ;	CP = OFF, Code protection off
  1233  2007                     	org	8199
  1234  2007  3F3A               	dw	16186

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_write_string@str	PTR unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_lcd_goto_xy
    _lcd_write_string->_lcd_write
    _lcd_write->_lcd_clock
    _lcd_init->_lcd_cmd
    _lcd_goto_xy->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_cmd->_lcd_clock

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     923
                          _lcd_clear
                        _lcd_goto_xy
                           _lcd_init
                   _lcd_write_string
 ---------------------------------------------------------------------------------
 (1) _lcd_write_string                                     3     3      0     276
                                              6 COMMON     3     3      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            4     4      0     120
                                              2 COMMON     4     4      0
                          _lcd_clock
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      75
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_goto_xy                                          7     6      1     497
                                              3 COMMON     7     6      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            2     2      0      75
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      75
                                              2 COMMON     1     1      0
                          _lcd_clock
                           _lcd_data
 ---------------------------------------------------------------------------------
 (3) _lcd_data                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_clock                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_clear
     _lcd_cmd
       _lcd_clock
       _lcd_data
   _lcd_goto_xy
     _lcd_cmd
       _lcd_clock
       _lcd_data
   _lcd_init
     _lcd_cmd
       _lcd_clock
       _lcd_data
   _lcd_write_string
     _lcd_write
       _lcd_clock
       _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 26 22:55:25 2021

                        pc 0002               lcd_data@data 0070                         l30 06D3  
                       l22 06BB                         l23 06BE                         l24 06C4  
                       l25 06C5                         l33 0682                         l41 07A0  
                       l26 06CB                         l19 06B1                         l27 06CC  
                       l28 06D2                         l36 0698                         l44 07FB  
                       l53 06F8                         l47 074F                         l64 0703  
                       u10 06B7                         u11 06B6                         u20 06C2  
                       u21 06C1                         u30 06C9                         u31 06C8  
                       u40 06D0                         u41 06CF                         u55 0734  
                       fsr 0004                        l721 07B5                        l731 07D7  
                      l723 07BE                        l715 07A1                        l661 069C  
                      l741 07F5                        l733 07DD                        l725 07C4  
                      l717 07AA                        l663 06A5                        l671 06C9  
                      l735 07E3                        l727 07CB                        l719 07AF  
                      l673 06D0                        l665 06B3                        l761 0751  
                      l737 07E9                        l729 07D1                        l681 072E  
                      l659 0699                        l667 06B7                        l675 0674  
                      l691 0683                        l763 0756                        l771 0778  
                      l739 07EF                        l683 0731                        l669 06C2  
                      l677 0677                        l693 068F                        l773 077E  
                      l765 0767                        l685 073F                        l781 06D5  
                      l775 078F                        l767 076C                        l687 0744  
                      l679 0724                        l783 06D8                        l791 070B  
                      l777 0794                        l769 0772                        l689 074A  
                      l785 06E5                        l793 0711                        l779 079A  
                      l787 06EB                        l789 06F9                        _RD2 0042  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      u110 0756                        _RD6 0046                        u111 0755  
                      _RD7 0047                        u130 077E                        u131 077D  
                      u125 075E                        u150 06F8                        u207 06A0  
                      u151 06F7                        u217 06AC                        u145 0786  
                      u167 07A5                        u177 07B9                        u187 07C6  
                      u197 0693                        fsr0 0004                       STR_1 0012  
                     STR_2 0009                       _main 06F9                       btemp 007E  
                     start 0000               lcd_goto_xy@c 0073               lcd_goto_xy@r 0076  
         lcd_goto_xy@high4 0078                      ?_main 0070                      _TRISD 0088  
          __end_of_lcd_cmd 0683                      pclath 000A                      status 0003  
                    wtemp0 007E            __initialization 07FC               __end_of_main 0723  
                   ??_main 007A           __end_of_lcd_data 06D4           __end_of_lcd_init 07FC  
     __size_of_lcd_goto_xy 0051   __end_of_lcd_write_string 06F9                  ??_lcd_cmd 0072  
        lcd_write_string@i 0076    __end_of__initialization 07FC              lcd_write@byte 0075  
           __pcstackCOMMON 0070         __size_of_lcd_clear 0016         __size_of_lcd_clock 0019  
       __size_of_lcd_write 002D                 __pmaintext 06F9                  ?_lcd_data 0070  
                ?_lcd_init 0070                 __stringtab 0003        lcd_write@low_nibble 0073  
        __end_of_lcd_clear 0699          __end_of_lcd_clock 06B2          __end_of_lcd_write 0750  
                  __ptext1 06D4                    __ptext2 0723                    __ptext3 07A1  
                  __ptext4 0750                    __ptext5 0683                    __ptext6 0673  
                  __ptext7 06B2                    __ptext8 0699                    _lcd_cmd 0673  
               ??_lcd_data 0070                 ??_lcd_init 0073       end_of_initialization 07FC  
        ?_lcd_write_string 0070         ??_lcd_write_string 0076                 lcd_cmd@cmd 0072  
            ??_lcd_goto_xy 0074            lcd_goto_xy@low4 0077            lcd_goto_xy@temp 0079  
      start_initialization 07FC       lcd_write@high_nibble 0074        __end_of_lcd_goto_xy 07A1  
                ___latbits 0002          __size_of_lcd_data 0022          __size_of_lcd_init 005B  
                _lcd_clear 0683                  _lcd_clock 0699                  __pstrings 0003  
                 ?_lcd_cmd 0070                  _lcd_write 0723                _lcd_goto_xy 0750  
               ?_lcd_clear 0070                 ?_lcd_clock 0070                __stringbase 0008  
               ?_lcd_write 0070  __size_of_lcd_write_string 0025         __end_of__stringtab 0009  
         __size_of_lcd_cmd 0010                   _lcd_data 06B2                   _lcd_init 07A1  
            __size_of_main 002A                ??_lcd_clear 0073                ??_lcd_clock 0070  
              ??_lcd_write 0072                  stringcode 0003                   stringdir 0003  
                 stringtab 0003           _lcd_write_string 06D4        lcd_write_string@str 0078  
             ?_lcd_goto_xy 0073  
